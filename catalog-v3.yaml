version: 2
name: docker-mcp
displayName: Docker MCP Catalog
registry:
  atlassian:
    description: Tools for Atlassian products (Confluence and Jira). This integration supports both Atlassian Cloud and Jira Server/Data Center deployments.
    title: Atlassian
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/atlassian
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/atlassian.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/atlassian.json
    source: https://github.com/sooperset/mcp-atlassian/tree/v0.11.2
    upstream: https://github.com/sooperset/mcp-atlassian
    icon: https://avatars.githubusercontent.com/u/43281909?s=200&v=4
    tools:
      - name: confluence_add_comment
      - name: confluence_add_label
      - name: confluence_create_page
      - name: confluence_delete_page
      - name: confluence_get_comments
      - name: confluence_get_labels
      - name: confluence_get_page
      - name: confluence_get_page_children
      - name: confluence_search
      - name: confluence_update_page
      - name: jira_add_comment
      - name: jira_add_worklog
      - name: jira_batch_create_issues
      - name: jira_batch_get_changelogs
      - name: jira_create_issue
      - name: jira_create_issue_link
      - name: jira_create_sprint
      - name: jira_delete_issue
      - name: jira_download_attachments
      - name: jira_get_agile_boards
      - name: jira_get_board_issues
      - name: jira_get_issue
      - name: jira_get_link_types
      - name: jira_get_project_issues
      - name: jira_get_project_versions
      - name: jira_get_sprint_issues
      - name: jira_get_sprints_from_board
      - name: jira_get_transitions
      - name: jira_get_user_profile
      - name: jira_get_worklog
      - name: jira_link_to_epic
      - name: jira_remove_issue_link
      - name: jira_search
      - name: jira_search_fields
      - name: jira_transition_issue
      - name: jira_update_issue
      - name: jira_update_sprint
    secrets:
      - name: atlassian.confluence.api_token
        env: CONFLUENCE_API_TOKEN
        example: your_api_token
      - name: atlassian.confluence.personal_token
        env: CONFLUENCE_PERSONAL_TOKEN
        example: your_api_token
      - name: atlassian.jira.api_token
        env: JIRA_API_TOKEN
        example: your_api_token
      - name: atlassian.jira.personal_token
        env: JIRA_PERSONAL_TOKEN
        example: your_api_token
    env:
      - name: CONFLUENCE_URL
        value: '{{atlassian.confluence.url}}'
      - name: CONFLUENCE_USERNAME
        value: '{{atlassian.confluence.username}}'
      - name: JIRA_URL
        value: '{{atlassian.jira.url}}'
      - name: JIRA_USERNAME
        value: '{{atlassian.jira.username}}'
    prompts: 0
    resources: {}
    config:
      - name: atlassian
        description: The MCP server is allowed to access these paths
        type: object
        properties:
          confluence:
            type: object
            properties:
              url:
                type: string
              username:
                type: string
            required:
              - url
          jira:
            type: object
            properties:
              url:
                type: string
              username:
                type: string
            required:
              - url
        anyOf:
          - required:
              - confluence
          - required:
              - jira
    metadata:
      githubStars: 3004
      category: productivity
      tags:
        - atlassian
        - confluence
        - jira
      license: MIT License
      owner: sooperset
  couchbase:
    description: Couchbase is a distributed document database with a powerful search engine and in-built operational and analytical capabilities.
    title: Couchbase
    type: server
    dateAdded: "2025-09-04T18:21:22Z"
    image: mcp/couchbase
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/couchbase.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/couchbase.json
    source: https://github.com/Couchbase-Ecosystem/mcp-server-couchbase/tree/main
    upstream: https://github.com/Couchbase-Ecosystem/mcp-server-couchbase
    icon: https://avatars.githubusercontent.com/u/605755?s=200&v=4
    tools:
      - name: delete_document_by_id
      - name: get_buckets_in_cluster
      - name: get_collections_in_scope
      - name: get_document_by_id
      - name: get_schema_for_collection
      - name: get_scopes_and_collections_in_bucket
      - name: get_scopes_in_bucket
      - name: get_server_configuration_status
      - name: run_sql_plus_plus_query
      - name: test_cluster_connection
      - name: upsert_document_by_id
    secrets:
      - name: couchbase.cb_password
        env: CB_PASSWORD
        example: <CB_PASSWORD>
    env:
      - name: CB_CONNECTION_STRING
        value: '{{couchbase.cb_connection_string}}'
      - name: CB_USERNAME
        value: '{{couchbase.cb_username}}'
      - name: CB_BUCKET_NAME
        value: '{{couchbase.cb_bucket_name}}'
      - name: CB_MCP_READ_ONLY_QUERY_MODE
        value: '{{couchbase.cb_mcp_read_only_query_mode}}'
    prompts: 0
    resources: {}
    config:
      - name: couchbase
        description: Configure the connection to Couchbase
        type: object
        properties:
          cb_connection_string:
            type: string
            description: Connection string for the Couchbase cluster.
          cb_username:
            type: string
            description: Username for the Couchbase cluster with access to the bucket.
          cb_bucket_name:
            type: string
            description: Bucket in the Couchbase cluster to use for the MCP server.
          cb_mcp_read_only_query_mode:
            type: string
            description: Setting to "true" (default) enables read-only query mode while running SQL++ queries.
    metadata:
      githubStars: 18
      category: database
      tags:
        - couchbase
        - database
      license: Apache License 2.0
      owner: Couchbase-Ecosystem
  dockerhub:
    description: Docker Hub official MCP server.
    title: Docker Hub
    type: server
    dateAdded: "2025-06-16T15:56:21Z"
    image: mcp/dockerhub
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/dockerhub.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/dockerhub.json
    source: https://github.com/docker/hub-mcp/tree/main
    upstream: https://github.com/docker/hub-mcp
    icon: https://avatars.githubusercontent.com/u/5429470?s=200&v=4
    tools:
      - name: checkRepository
      - name: checkRepositoryTag
      - name: createRepository
      - name: dockerHardenedImages
      - name: getPersonalNamespace
      - name: getRepositoryInfo
      - name: getRepositoryTag
      - name: listAllNamespacesMemberOf
      - name: listNamespaces
      - name: listRepositoriesByNamespace
      - name: listRepositoryTags
      - name: search
      - name: updateRepositoryInfo
    secrets:
      - name: dockerhub.pat_token
        env: HUB_PAT_TOKEN
        example: your_hub_pat_token
    command:
      - --transport=stdio
      - --username={{dockerhub.username}}
    prompts: 0
    resources: {}
    config:
      - name: dockerhub
        description: Configure connection to Docker Hub
        type: object
        properties:
          username:
            type: string
    metadata:
      githubStars: 50
      category: devops
      tags:
        - docker
        - dockerhub
      license: Apache License 2.0
      owner: docker
  duckduckgo:
    description: A Model Context Protocol (MCP) server that provides web search capabilities through DuckDuckGo, with additional features for content fetching and parsing.
    title: DuckDuckGo
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/duckduckgo
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/duckduckgo.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/duckduckgo.json
    source: https://github.com/nickclyde/duckduckgo-mcp-server/tree/main
    upstream: https://github.com/nickclyde/duckduckgo-mcp-server
    icon: https://avatars.githubusercontent.com/u/342708?s=200&v=4
    tools:
      - name: fetch_content
      - name: search
    allowHosts:
      - html.duckduckgo.com:443
    prompts: 0
    resources: {}
    metadata:
      githubStars: 430
      category: devops
      tags:
        - duckduckgo
        - devops
      license: MIT License
      owner: nickclyde
  elasticsearch:
    description: Interact with your Elasticsearch indices through natural language conversations.
    title: Elasticsearch
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/elasticsearch
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/elasticsearch.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/elasticsearch.json
    source: https://github.com/elastic/mcp-server-elasticsearch/tree/v0.4.0
    upstream: https://github.com/elastic/mcp-server-elasticsearch
    icon: https://avatars.githubusercontent.com/u/6764390?s=200&v=4
    tools:
      - name: esql
      - name: get_mappings
      - name: get_shards
      - name: list_indices
      - name: search
    secrets:
      - name: elasticsearch.api_key
        env: ES_API_KEY
        example: your-api-key
    env:
      - name: ES_URL
        value: '{{elasticsearch.url}}'
    command:
      - stdio
    prompts: 0
    resources: {}
    config:
      - name: elasticsearch
        description: Configure the connection to Elasticsearch
        type: object
        properties:
          url:
            type: string
        required:
          - url
    metadata:
      githubStars: 448
      category: search
      tags:
        - elasticsearch
        - search
      license: Apache License 2.0
      owner: elastic
  fetch:
    description: Fetches a URL from the internet and extracts its contents as markdown.
    title: Fetch (Reference)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/fetch
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/fetch.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/fetch.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24/src/fetch
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: fetch
    prompts: 0
    resources: {}
    metadata:
      githubStars: 66823
      category: devops
      tags:
        - fetch
        - devops
      license: MIT License
      owner: modelcontextprotocol
  git:
    description: Git repository interaction and automation.
    title: Git (Reference)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/git
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/git.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/git.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24/src/git
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/18133?s=200&v=4
    tools:
      - name: git_add
      - name: git_checkout
      - name: git_commit
      - name: git_create_branch
      - name: git_diff
      - name: git_diff_staged
      - name: git_diff_unstaged
      - name: git_init
      - name: git_log
      - name: git_reset
      - name: git_show
      - name: git_status
    volumes:
      - '{{git.paths|volume|into}}'
    prompts: 0
    resources: {}
    config:
      - name: git
        description: The MCP server is allowed to access these paths
        type: object
        properties:
          paths:
            type: array
            items:
              type: string
        required:
          - paths
    metadata:
      githubStars: 66823
      category: devops
      tags:
        - gitl
        - devops
      license: MIT License
      owner: modelcontextprotocol
  github-official:
    description: Official GitHub MCP Server, by GitHub. Provides seamless integration with GitHub APIs, enabling advanced automation and interaction capabilities for developers and tools.
    title: GitHub Official
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: ghcr.io/github/github-mcp-server@sha256:ecc5810a7d76404c03c504d5ff6868cb9aa5b8e31f3e6aaf9ddf453d5a239d34
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/github-official.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/github-official.json
    source: https://github.com/github/github-mcp-server/tree/main
    upstream: https://github.com/github/github-mcp-server
    icon: https://avatars.githubusercontent.com/u/9919?s=200&v=4
    tools:
      - name: add_comment_to_pending_review
      - name: add_issue_comment
      - name: add_sub_issue
      - name: assign_copilot_to_issue
      - name: cancel_workflow_run
      - name: create_and_submit_pull_request_review
      - name: create_branch
      - name: create_gist
      - name: create_issue
      - name: create_or_update_file
      - name: create_pending_pull_request_review
      - name: create_pull_request
      - name: create_repository
      - name: delete_file
      - name: delete_pending_pull_request_review
      - name: delete_workflow_run_logs
      - name: dismiss_notification
      - name: download_workflow_run_artifact
      - name: fork_repository
      - name: get_code_scanning_alert
      - name: get_commit
      - name: get_dependabot_alert
      - name: get_discussion
      - name: get_discussion_comments
      - name: get_file_contents
      - name: get_global_security_advisory
      - name: get_issue
      - name: get_issue_comments
      - name: get_job_logs
      - name: get_latest_release
      - name: get_me
      - name: get_notification_details
      - name: get_pull_request
      - name: get_pull_request_comments
      - name: get_pull_request_diff
      - name: get_pull_request_files
      - name: get_pull_request_reviews
      - name: get_pull_request_status
      - name: get_release_by_tag
      - name: get_secret_scanning_alert
      - name: get_tag
      - name: get_team_members
      - name: get_teams
      - name: get_workflow_run
      - name: get_workflow_run_logs
      - name: get_workflow_run_usage
      - name: list_branches
      - name: list_code_scanning_alerts
      - name: list_commits
      - name: list_dependabot_alerts
      - name: list_discussion_categories
      - name: list_discussions
      - name: list_gists
      - name: list_global_security_advisories
      - name: list_issue_types
      - name: list_issues
      - name: list_notifications
      - name: list_org_repository_security_advisories
      - name: list_pull_requests
      - name: list_releases
      - name: list_repository_security_advisories
      - name: list_secret_scanning_alerts
      - name: list_sub_issues
      - name: list_tags
      - name: list_workflow_jobs
      - name: list_workflow_run_artifacts
      - name: list_workflow_runs
      - name: list_workflows
      - name: manage_notification_subscription
      - name: manage_repository_notification_subscription
      - name: mark_all_notifications_read
      - name: merge_pull_request
      - name: push_files
      - name: remove_sub_issue
      - name: reprioritize_sub_issue
      - name: request_copilot_review
      - name: rerun_failed_jobs
      - name: rerun_workflow_run
      - name: run_workflow
      - name: search_code
      - name: search_issues
      - name: search_orgs
      - name: search_pull_requests
      - name: search_repositories
      - name: search_users
      - name: submit_pending_pull_request_review
      - name: update_gist
      - name: update_issue
      - name: update_pull_request
      - name: update_pull_request_branch
    secrets:
      - name: github.personal_access_token
        env: GITHUB_PERSONAL_ACCESS_TOKEN
        example: <YOUR_TOKEN>
    allowHosts:
      - api.github.com:443
      - github.com:443
      - raw.githubusercontent.com:443
    prompts: 0
    resources: {}
    metadata:
      githubStars: 22236
      category: devops
      tags:
        - github
        - devops
      license: MIT License
      owner: github
    oauth:
      providers:
        - provider: github
          secret: github.personal_access_token
          env: GITHUB_PERSONAL_ACCESS_TOKEN
  grafana:
    description: MCP server for Grafana.
    title: Grafana
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/grafana
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/grafana.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/grafana.json
    source: https://github.com/grafana/mcp-grafana/tree/main
    upstream: https://github.com/grafana/mcp-grafana
    icon: https://avatars.githubusercontent.com/u/7195757?s=200&v=4
    tools:
      - name: add_activity_to_incident
      - name: create_incident
      - name: fetch_pyroscope_profile
      - name: find_error_pattern_logs
      - name: find_slow_requests
      - name: generate_deeplink
      - name: get_alert_rule_by_uid
      - name: get_assertions
      - name: get_current_oncall_users
      - name: get_dashboard_by_uid
      - name: get_dashboard_panel_queries
      - name: get_dashboard_property
      - name: get_dashboard_summary
      - name: get_datasource_by_name
      - name: get_datasource_by_uid
      - name: get_incident
      - name: get_oncall_shift
      - name: get_sift_analysis
      - name: get_sift_investigation
      - name: list_alert_rules
      - name: list_contact_points
      - name: list_datasources
      - name: list_incidents
      - name: list_loki_label_names
      - name: list_loki_label_values
      - name: list_oncall_schedules
      - name: list_oncall_teams
      - name: list_oncall_users
      - name: list_prometheus_label_names
      - name: list_prometheus_label_values
      - name: list_prometheus_metric_metadata
      - name: list_prometheus_metric_names
      - name: list_pyroscope_label_names
      - name: list_pyroscope_label_values
      - name: list_pyroscope_profile_types
      - name: list_sift_investigations
      - name: list_teams
      - name: list_users_by_org
      - name: query_loki_logs
      - name: query_loki_stats
      - name: query_prometheus
      - name: search_dashboards
      - name: update_dashboard
    secrets:
      - name: grafana.api_key
        env: GRAFANA_API_KEY
        example: <your service account token>
    env:
      - name: GRAFANA_URL
        value: '{{grafana.url}}'
    command:
      - --transport=stdio
    prompts: 0
    resources: {}
    config:
      - name: grafana
        description: Configure the connection to Grafana
        type: object
        properties:
          url:
            type: string
    metadata:
      githubStars: 1512
      category: monitoring
      tags:
        - grafana
        - monitoring
      license: Apache License 2.0
      owner: grafana
  heroku:
    description: Heroku Platform MCP Server using the Heroku CLI.
    title: Heroku
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/heroku
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/heroku.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/heroku.json
    source: https://github.com/heroku/heroku-mcp-server/tree/refs/pull/24/merge
    upstream: https://github.com/heroku/heroku-mcp-server
    icon: https://avatars.githubusercontent.com/u/23211?s=200&v=4
    tools:
      - name: create_addon
      - name: create_app
      - name: deploy_one_off_dyno
      - name: deploy_to_heroku
      - name: get_addon_info
      - name: get_app_info
      - name: get_app_logs
      - name: list_addon_plans
      - name: list_addon_services
      - name: list_addons
      - name: list_apps
      - name: list_private_spaces
      - name: list_teams
      - name: maintenance_off
      - name: maintenance_on
      - name: pg_backups
      - name: pg_credentials
      - name: pg_info
      - name: pg_kill
      - name: pg_locks
      - name: pg_maintenance
      - name: pg_outliers
      - name: pg_ps
      - name: pg_psql
      - name: pg_upgrade
      - name: pipelines_create
      - name: pipelines_info
      - name: pipelines_list
      - name: pipelines_promote
      - name: ps_list
      - name: ps_restart
      - name: ps_scale
      - name: rename_app
      - name: transfer_app
    secrets:
      - name: heroku.api_key
        env: HEROKU_API_KEY
        example: <YOUR_HEROKU_AUTH_TOKEN>
    prompts: 0
    resources: {}
    metadata:
      githubStars: 64
      category: devops
      tags:
        - heroku
        - devops
      license: Apache License 2.0
      owner: heroku
  mongodb:
    description: A Model Context Protocol server to connect to MongoDB databases and MongoDB Atlas Clusters.
    title: MongoDB
    type: server
    dateAdded: "2025-05-15T20:04:34Z"
    image: mcp/mongodb
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/mongodb.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/mongodb.json
    source: https://github.com/mongodb-js/mongodb-mcp-server/tree/main
    upstream: https://github.com/mongodb-js/mongodb-mcp-server
    icon: https://avatars.githubusercontent.com/u/11214950?v=4
    tools:
      - name: aggregate
      - name: collection-indexes
      - name: collection-schema
      - name: collection-storage-size
      - name: connect
      - name: count
      - name: create-collection
      - name: create-index
      - name: db-stats
      - name: delete-many
      - name: drop-collection
      - name: drop-database
      - name: explain
      - name: export
      - name: find
      - name: insert-many
      - name: list-collections
      - name: list-databases
      - name: mongodb-logs
      - name: rename-collection
      - name: update-many
    secrets:
      - name: mongodb.connection_string
        env: MDB_MCP_CONNECTION_STRING
        example: mongodb+srv://username:password@cluster.mongodb.net/myDatabase
    prompts: 0
    resources: {}
    metadata:
      githubStars: 603
      category: database
      tags:
        - mongodb
        - database
      license: Apache License 2.0
      owner: mongodb-js
  neon:
    description: MCP server for interacting with Neon Management API and databases.
    title: Neon
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/neon
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/neon.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/neon.json
    source: https://github.com/neondatabase-labs/mcp-server-neon/tree/dbfa184afd9fc677c0d6b007a62b33194e883821
    upstream: https://github.com/neondatabase-labs/mcp-server-neon
    icon: https://avatars.githubusercontent.com/u/183852044?s=200&v=4
    tools:
      - name: __node_version
      - name: complete_database_migration
      - name: complete_query_tuning
      - name: create_branch
      - name: create_project
      - name: delete_branch
      - name: delete_project
      - name: describe_branch
      - name: describe_project
      - name: describe_table_schema
      - name: explain_sql_statement
      - name: get_connection_string
      - name: get_database_tables
      - name: list_projects
      - name: prepare_database_migration
      - name: prepare_query_tuning
      - name: provision_neon_auth
      - name: run_sql
      - name: run_sql_transaction
    secrets:
      - name: neon.api_key
        env: NEON_API_KEY
        example: YOUR_API_KEY_HERE
    prompts: 0
    resources: {}
    metadata:
      githubStars: 446
      category: database
      tags:
        - neon
        - database
      license: MIT License
      owner: neondatabase-labs
  notion:
    description: Official Notion MCP Server.
    title: Notion
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/notion
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/notion.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/notion.json
    source: https://github.com/makenotion/notion-mcp-server/tree/main
    upstream: https://github.com/makenotion/notion-mcp-server
    icon: https://avatars.githubusercontent.com/u/4792552?s=200&v=4
    tools:
      - name: API-create-a-comment
      - name: API-create-a-database
      - name: API-delete-a-block
      - name: API-get-block-children
      - name: API-get-self
      - name: API-get-user
      - name: API-get-users
      - name: API-patch-block-children
      - name: API-patch-page
      - name: API-post-database-query
      - name: API-post-page
      - name: API-post-search
      - name: API-retrieve-a-block
      - name: API-retrieve-a-comment
      - name: API-retrieve-a-database
      - name: API-retrieve-a-page
      - name: API-retrieve-a-page-property
      - name: API-update-a-block
      - name: API-update-a-database
    secrets:
      - name: notion.internal_integration_token
        env: INTERNAL_INTEGRATION_TOKEN
        example: ntn_****
    env:
      - name: OPENAPI_MCP_HEADERS
        value: '{"Authorization": "Bearer $INTERNAL_INTEGRATION_TOKEN", "Notion-Version": "2022-06-28"}'
    prompts: 0
    resources: {}
    metadata:
      githubStars: 3110
      category: productivity
      tags:
        - notion
        - secrets
      license: MIT License
      owner: makenotion
  pulumi:
    description: Pulumi MCP Server.
    title: Pulumi
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/pulumi
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/pulumi.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/pulumi.json
    source: https://github.com/pulumi/mcp-server/tree/main
    upstream: https://github.com/pulumi/mcp-server
    icon: https://avatars.githubusercontent.com/u/21992475?s=200&v=4
    tools:
      - name: deploy-to-aws
      - name: pulumi-cli-preview
      - name: pulumi-cli-refresh
      - name: pulumi-cli-stack-output
      - name: pulumi-cli-up
      - name: pulumi-registry-get-function
      - name: pulumi-registry-get-resource
      - name: pulumi-registry-get-type
      - name: pulumi-registry-list-functions
      - name: pulumi-registry-list-resources
      - name: pulumi-resource-search
    command:
      - stdio
    prompts: 0
    resources: {}
    metadata:
      githubStars: 63
      category: devops
      tags:
        - pulumi
        - devops
      license: Apache License 2.0
      owner: pulumi
  puppeteer:
    description: Browser automation and web scraping using Puppeteer.
    title: Puppeteer (Archived)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/puppeteer
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/puppeteer.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/puppeteer.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/6906516?s=200&v=4
    tools:
      - name: puppeteer_click
      - name: puppeteer_evaluate
      - name: puppeteer_fill
      - name: puppeteer_hover
      - name: puppeteer_navigate
      - name: puppeteer_screenshot
      - name: puppeteer_select
    env:
      - name: DOCKER_CONTAINER
        value: "true"
    prompts: 0
    resources: {}
    metadata:
      githubStars: 66823
      category: devops
      tags:
        - puppeteer
        - devops
      license: MIT License
      owner: modelcontextprotocol
  stripe:
    description: Interact with Stripe services over the Stripe API.
    title: Stripe
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/stripe
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/stripe.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/stripe.json
    source: https://github.com/stripe/agent-toolkit/tree/main/modelcontextprotocol
    upstream: https://github.com/stripe/agent-toolkit
    icon: https://avatars.githubusercontent.com/u/856813?s=200&v=4
    tools:
      - name: cancel_subscription
      - name: create_coupon
      - name: create_customer
      - name: create_invoice
      - name: create_invoice_item
      - name: create_payment_link
      - name: create_price
      - name: create_product
      - name: create_refund
      - name: finalize_invoice
      - name: list_coupons
      - name: list_customers
      - name: list_disputes
      - name: list_invoices
      - name: list_payment_intents
      - name: list_prices
      - name: list_products
      - name: list_subscriptions
      - name: retrieve_balance
      - name: search_stripe_documentation
      - name: update_dispute
      - name: update_subscription
    secrets:
      - name: stripe.secret_key
        env: STRIPE_SECRET_KEY
        example: sk_STRIPE_SECRET_KEY
    command:
      - --tools=all
    prompts: 0
    resources: {}
    metadata:
      githubStars: 947
      category: finance
      tags:
        - stripe
        - finance
      license: MIT License
      owner: stripe
  aks:
    description: Azure Kubernetes Service (AKS) official MCP server.
    title: Azure Kubernetes Service (AKS)
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/aks
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/aks.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/aks.json
    source: https://github.com/Azure/aks-mcp/tree/main
    upstream: https://github.com/Azure/aks-mcp
    icon: https://raw.githubusercontent.com/Azure/AKS/master/blog/assets/images/400x400.png
    tools:
      - name: az_advisor_recommendation
      - name: az_aks_operations
      - name: az_compute_operations
      - name: az_fleet
      - name: az_monitoring
      - name: az_network_resources
      - name: get_aks_vmss_info
      - name: inspektor_gadget_observability
      - name: kubectl_cluster
      - name: kubectl_config
      - name: kubectl_diagnostics
      - name: kubectl_resources
      - name: list_detectors
      - name: run_detector
      - name: run_detectors_by_category
    command:
      - --transport=stdio
      - --access-level={{aks.access_level}}
      - --allow-namespaces={{aks.allow_namespaces}}
      - --additional-tools={{aks.additional_tools}}
    volumes:
      - '{{aks.azure_dir}}:/home/mcp/.azure'
      - '{{aks.kubeconfig}}:/home/mcp/.kube/config'
    user: '{{aks.container_user}}'
    prompts: 0
    resources: {}
    config:
      - name: aks
        description: Configuration for AKS-MCP server
        type: object
        properties:
          azure_dir:
            type: string
            description: Path to the Azure configuration directory (e.g. /home/azureuser/.azure). Used for Azure CLI authentication, you should be logged in (e.g. run `az login`) on the host before starting the MCP server.
          kubeconfig:
            type: string
            description: Path to the kubeconfig file for the AKS cluster (e.g. /home/azureuser/.kube/config). Used to connect to the AKS cluster.
          access_level:
            type: string
            description: Access level for the MCP server, One of [ readonly, readwrite, admin ]
          allow_namespaces:
            type: string
            description: Comma-separated list of namespaces to allow access to. If not specified, all namespaces are allowed.
          additional_tools:
            type: string
            description: Comma-separated list of additional tools, One of [ helm, cilium ]
          container_user:
            type: string
            description: Username or UID of the container user (format <name|uid>[:<group|gid>] e.g. 10000), ensuring correct permissions to access the Azure and kubeconfig files. Leave empty to use default user in the container.
        required:
          - azure_dir
          - kubeconfig
          - access_level
    metadata:
      githubStars: 83
      category: devops
      tags:
        - devops
        - azure
        - kubernetes
        - aks
      license: MIT License
      owner: Azure
  apify-mcp-server:
    description: Apify is the world's largest marketplace of tools for web scraping, data extraction, and web automation. You can extract structured data from social media, e-commerce, search engines, maps, travel sites, or any other website.
    title: Apify MCP Server
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/apify-mcp-server
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/apify-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/apify-mcp-server.json
    source: https://github.com/apify/actors-mcp-server/tree/master
    upstream: https://github.com/apify/actors-mcp-server
    icon: https://avatars.githubusercontent.com/u/24586296?s=200&v=4
    tools:
      - name: apify-slash-rag-web-browser
      - name: call-actor
      - name: fetch-actor-details
      - name: fetch-apify-docs
      - name: search-actors
      - name: search-apify-docs
    secrets:
      - name: apify-mcp-server.apify_token
        env: APIFY_TOKEN
        example: your-apify-token
    env:
      - name: TOOLS
        value: '{{apify-mcp-server.tools}}'
    prompts: 0
    resources: {}
    config:
      - name: apify-mcp-server
        description: Configure the Apify MCP Server
        type: object
        properties:
          tools:
            type: string
            description: 'Comma-separated list of tools to enable. Can be either a tool category, a specific tool, or an Apify Actor. For example: "actors,docs,apify/rag-web-browser". For more details visit https://mcp.apify.com.'
    metadata:
      githubStars: 364
      category: productivity
      tags:
        - productivity
        - search
        - mcp
        - automation
        - web scraping
        - api
        - data extraction
      license: MIT License
      owner: apify
  apify-remote:
    description: Web Data Extraction Platform.
    title: Apify
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/apify-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/apify-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.apify.com
    icon: https://www.google.com/s2/favicons?domain=apify.com&sz=64
    tools: []
    secrets:
      - name: apify-remote.api_key
        env: APIFY_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: automation
      tags:
        - automation
        - web-scraping
        - data-extraction
        - remote
      license: Apache License 2.0
      owner: docker
  arxiv-mcp-server:
    description: 'The ArXiv MCP Server provides a comprehensive bridge between AI assistants and arXiv''s research repository through the Model Context Protocol (MCP).   Features: • Search arXiv papers with advanced filtering • Download and store papers locally as markdown • Read and analyze paper content • Deep research analysis prompts • Local paper management and storage • Enhanced tool descriptions optimized for local AI models • Docker MCP Gateway compatible with detailed context  Perfect for researchers, academics, and AI assistants conducting literature reviews and research analysis.  **Recent Update**: Enhanced tool descriptions specifically designed to resolve local AI model confusion and improve Docker MCP Gateway compatibility.'
    title: ArXiv MCP Server
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/arxiv-mcp-server
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/arxiv-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/arxiv-mcp-server.json
    source: https://github.com/jasonleinart/arxiv-mcp-server/tree/main
    upstream: https://github.com/jasonleinart/arxiv-mcp-server
    icon: https://avatars.githubusercontent.com/u/15390319?v=4
    tools:
      - name: download_paper
      - name: list_papers
      - name: read_paper
      - name: search_papers
    env:
      - name: ARXIV_STORAGE_PATH
        value: /app/papers
    volumes:
      - '{{arxiv-mcp-server.storage_path}}:/app/papers'
    prompts: 0
    resources: {}
    config:
      - name: arxiv-mcp-server
        description: Configure local storage path for downloaded papers
        type: object
        properties:
          storage_path:
            type: string
            description: Directory path where downloaded papers will be stored
        required:
          - storage_path
    metadata:
      githubStars: 13
      category: search
      tags:
        - arxiv
        - research
        - academic
        - papers
        - search
        - ai
        - local-models
        - docker-gateway
        - enhanced-descriptions
      license: Apache License 2.0
      owner: jasonleinart
  asana-remote:
    description: Project Management.
    title: Asana
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/asana-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/asana-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.asana.com/sse
    icon: https://www.google.com/s2/favicons?domain=asana.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: productivity
      tags:
        - productivity
        - project-management
        - collaboration
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: asana-remote
  astra-db:
    description: An MCP server for Astra DB workloads.
    title: Astra DB
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/astra-db
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/astra-db.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/astra-db.json
    source: https://github.com/datastax/astra-db-mcp/tree/refs/pull/14/merge
    upstream: https://github.com/datastax/astra-db-mcp
    icon: https://avatars.githubusercontent.com/u/573369?s=200&v=4
    tools:
      - name: BulkCreateRecords
      - name: BulkDeleteRecords
      - name: BulkUpdateRecords
      - name: CreateCollection
      - name: CreateRecord
      - name: DeleteCollection
      - name: DeleteRecord
      - name: EstimateDocumentCount
      - name: FindRecord
      - name: GetCollections
      - name: GetRecord
      - name: HelpAddToClient
      - name: ListRecords
      - name: OpenBrowser
      - name: UpdateCollection
      - name: UpdateRecord
    secrets:
      - name: astra-db.application_token
        env: ASTRA_DB_APPLICATION_TOKEN
        example: your_astra_db_token
    env:
      - name: ASTRA_DB_API_ENDPOINT
        value: '{{astra-db.endpoint}}'
    prompts: 0
    resources: {}
    config:
      - name: astra-db
        description: Configure the connection to Astra DB
        type: object
        properties:
          endpoint:
            type: string
    metadata:
      githubStars: 29
      category: database
      tags:
        - astra-db
        - database
      license: Apache License 2.0
      owner: datastax
  astro-docs-remote:
    description: Access the latest Astro web framework documentation, guides, and API references.
    title: Astro Docs
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/astro-docs-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/astro-docs-remote.json
    source: ""
    upstream: https://github.com/withastro/docs-mcp
    remote:
      transport_type: streamable-http
      url: https://mcp.docs.astro.build/mcp
    icon: https://astro.build/favicon.svg
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: documentation
      tags:
        - documentation
        - astro
        - web-framework
        - remote
      license: Apache License 2.0
      owner: docker
  atlan:
    description: MCP server for interacting with Atlan services including asset search, updates, and lineage traversal for comprehensive data governance and discovery.
    title: Atlan MCP Server
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/atlan
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/atlan.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/atlan.json
    source: https://github.com/atlanhq/agent-toolkit/tree/main/modelcontextprotocol
    upstream: https://github.com/atlanhq/agent-toolkit
    icon: https://avatars.githubusercontent.com/u/47002402?s=200&v=4
    tools:
      - name: create_glossaries
      - name: create_glossary_categories
      - name: create_glossary_terms
      - name: get_assets_by_dsl_tool
      - name: search_assets_tool
      - name: traverse_lineage_tool
      - name: update_assets_tool
    secrets:
      - name: atlan.atlan_api_key
        env: ATLAN_API_KEY
        example: <YOUR_ATLAN_API_KEY>
      - name: atlan.atlan_base_url
        env: ATLAN_BASE_URL
        example: https://your-instance.atlan.com
    prompts: 0
    resources: {}
    metadata:
      githubStars: 19
      category: database
      tags:
        - atlan
        - metadata
      license: MIT License
      owner: atlanhq
  atlas-docs:
    description: Provide LLMs hosted, clean markdown documentation of libraries and frameworks.
    title: Atlas Docs
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/atlas-docs
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/atlas-docs.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/atlas-docs.json
    source: https://github.com/CartographAI/atlas-docs-mcp/tree/master
    upstream: https://github.com/CartographAI/atlas-docs-mcp
    icon: https://avatars.githubusercontent.com/u/184709581?s=200&v=4
    tools:
      - name: get_docs_full
      - name: get_docs_index
      - name: get_docs_page
      - name: list_docs
      - name: search_docs
    env:
      - name: ATLAS_API_URL
        value: '{{atlas-docs.api_url}}'
    prompts: 0
    resources: {}
    config:
      - name: atlas-docs
        description: Configure the connection to Atlas Docs
        type: object
        properties:
          api_url:
            type: string
    metadata:
      githubStars: 30
      category: devops
      tags:
        - atlas-docs
        - devops
      license: MIT License
      owner: CartographAI
  atlassian-remote:
    description: Software Development.
    title: Atlassian
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/atlassian-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/atlassian-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.atlassian.com/v1/sse
    icon: https://www.google.com/s2/favicons?domain=atlassian.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: devops
      tags:
        - devops
        - software-development
        - collaboration
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: atlassian-remote
  audiense-insights:
    description: Audiense Insights MCP Server is a server based on the Model Context Protocol (MCP) that allows Claude and other MCP-compatible clients to interact with your Audiense Insights account.
    title: Audiense Insights
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/audiense-insights
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/audiense-insights.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/audiense-insights.json
    source: https://github.com/AudienseCo/mcp-audiense-insights/tree/main
    upstream: https://github.com/AudienseCo/mcp-audiense-insights
    icon: https://avatars.githubusercontent.com/u/2454008?s=200&v=4
    tools:
      - name: compare-audience-influencers
      - name: get-audience-content
      - name: get-audience-insights
      - name: get-baselines
      - name: get-categories
      - name: get-report-info
      - name: get-reports
      - name: report-summary
    secrets:
      - name: audiense-insights.client_secret
        env: AUDIENSE_CLIENT_SECRET
        example: your_client_secret_here
      - name: audiense-insights.twitter_bearer_token
        env: TWITTER_BEARER_TOKEN
        example: your_token_here
    env:
      - name: AUDIENSE_CLIENT_ID
        value: '{{audiense-insights.client_id}}'
    prompts: 0
    resources: {}
    config:
      - name: audiense-insights
        description: Configure the connection to Audiense Insights
        type: object
        properties:
          client_id:
            type: string
        required:
          - client_id
    metadata:
      githubStars: 16
      category: devops
      tags:
        - audiense-insights
        - devops
      license: Apache License 2.0
      owner: AudienseCo
  audioscrape-remote:
    description: RAG-as-a-Service.
    title: Audioscrape
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/audioscrape-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/audioscrape-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.audioscrape.com
    icon: https://www.google.com/s2/favicons?domain=audioscrape.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: ai
      tags:
        - ai
        - rag
        - audio
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: audioscrape-remote
  aws-cdk-mcp-server:
    description: AWS Cloud Development Kit (CDK) best practices, infrastructure as code patterns, and security compliance with CDK Nag.
    title: AWS CDK
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/aws-cdk-mcp-server
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/aws-cdk-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/aws-cdk-mcp-server.json
    source: https://github.com/awslabs/mcp/tree/main/src/cdk-mcp-server
    upstream: https://github.com/awslabs/mcp
    icon: https://avatars.githubusercontent.com/u/3299148?v=4
    tools:
      - name: CDKGeneralGuidance
      - name: CheckCDKNagSuppressions
      - name: ExplainCDKNagRule
      - name: GenerateBedrockAgentSchema
      - name: GetAwsSolutionsConstructPattern
      - name: LambdaLayerDocumentationProvider
      - name: SearchGenAICDKConstructs
    prompts: 0
    resources: {}
    metadata:
      githubStars: 6203
      category: devops
      tags:
        - aws-cdk-mcp-server
        - devops
      license: Apache License 2.0
      owner: awslabs
  aws-core-mcp-server:
    description: Starting point for using the awslabs MCP servers.
    title: AWS Core MCP Server
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/aws-core-mcp-server
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/aws-core-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/aws-core-mcp-server.json
    source: https://github.com/awslabs/mcp/tree/main/src/core-mcp-server
    upstream: https://github.com/awslabs/mcp
    icon: https://avatars.githubusercontent.com/u/3299148?v=4
    tools:
      - name: prompt_understanding
    prompts: 0
    resources: {}
    metadata:
      githubStars: 6203
      category: devops
      tags:
        - aws-core-mcp-server
        - devops
      license: Apache License 2.0
      owner: awslabs
  aws-diagram:
    description: Seamlessly create diagrams using the Python diagrams package DSL. This server allows you to generate AWS diagrams, sequence diagrams, flow diagrams, and class diagrams using Python code.
    title: AWS Diagram
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/aws-diagram
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/aws-diagram.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/aws-diagram.json
    source: https://github.com/awslabs/mcp/tree/main/src/aws-diagram-mcp-server
    upstream: https://github.com/awslabs/mcp
    icon: https://avatars.githubusercontent.com/u/3299148?v=4
    tools:
      - name: generate_diagram
      - name: get_diagram_examples
      - name: list_icons
    prompts: 0
    resources: {}
    metadata:
      githubStars: 6203
      category: devops
      tags:
        - aws-diagram
        - devops
      license: Apache License 2.0
      owner: awslabs
  aws-documentation:
    description: Tools to access AWS documentation, search for content, and get recommendations.
    title: AWS Documentation
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/aws-documentation
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/aws-documentation.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/aws-documentation.json
    source: https://github.com/awslabs/mcp/tree/main/src/aws-documentation-mcp-server
    upstream: https://github.com/awslabs/mcp
    icon: https://avatars.githubusercontent.com/u/3299148?v=4
    tools:
      - name: read_documentation
      - name: recommend
      - name: search_documentation
    prompts: 0
    resources: {}
    metadata:
      githubStars: 6203
      category: devops
      tags:
        - aws-documentation
        - devops
      license: Apache License 2.0
      owner: awslabs
  aws-kb-retrieval-server:
    description: An MCP server implementation for retrieving information from the AWS Knowledge Base using the Bedrock Agent Runtime.
    title: AWS KB Retrieval (Archived)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/aws-kb-retrieval-server
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/aws-kb-retrieval-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/aws-kb-retrieval-server.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: retrieve_from_aws_kb
    secrets:
      - name: aws.secret_access_key
        env: AWS_SECRET_ACCESS_KEY
        example: YOUR_SECRET_ACCESS_KEY_HERE
    env:
      - name: AWS_ACCESS_KEY_ID
        value: '{{aws-kb-retrieval-server.access_key_id}}'
    prompts: 0
    resources: {}
    config:
      - name: aws-kb-retrieval-server
        description: Configure the connection to AWS
        type: object
        properties:
          access_key_id:
            type: string
        required:
          - access_key_id
    metadata:
      githubStars: 66823
      category: devops
      tags:
        - aws
        - devops
      license: MIT License
      owner: modelcontextprotocol
  aws-terraform:
    description: Terraform on AWS best practices, infrastructure as code patterns, and security compliance with Checkov.
    title: AWS Terraform
    type: server
    dateAdded: "2025-05-22T20:04:34Z"
    image: mcp/aws-terraform
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/aws-terraform.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/aws-terraform.json
    source: https://github.com/awslabs/mcp/tree/main/src/terraform-mcp-server
    upstream: https://github.com/awslabs/mcp
    icon: https://avatars.githubusercontent.com/u/3299148?v=4
    tools:
      - name: ExecuteTerraformCommand
      - name: ExecuteTerragruntCommand
      - name: RunCheckovScan
      - name: SearchAwsProviderDocs
      - name: SearchAwsccProviderDocs
      - name: SearchSpecificAwsIaModules
      - name: SearchUserProvidedModule
    prompts: 0
    resources: {}
    metadata:
      githubStars: 6203
      category: devops
      tags:
        - aws
        - terraform
      license: Apache License 2.0
      owner: awslabs
  azure:
    description: The Azure MCP Server, bringing the power of Azure to your agents.
    title: Azure
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcr.microsoft.com/azure-sdk/azure-mcp@sha256:9d0856ebc0e93aae6d4e431f7e4a34a55b15891afc2d077d82c0c4c9e15fd458
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/azure.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/azure.json
    source: https://github.com/Azure/azure-mcp/tree/main
    upstream: https://github.com/Azure/azure-mcp
    icon: https://avatars.githubusercontent.com/u/6844498?s=200&v=4
    tools:
      - name: azmcp-appconfig-account-list
      - name: azmcp-appconfig-kv-delete
      - name: azmcp-appconfig-kv-list
      - name: azmcp-appconfig-kv-lock
      - name: azmcp-appconfig-kv-set
      - name: azmcp-appconfig-kv-show
      - name: azmcp-appconfig-kv-unlock
      - name: azmcp-cosmos-account-list
      - name: azmcp-cosmos-database-container-item-query
      - name: azmcp-cosmos-database-container-list
      - name: azmcp-cosmos-database-list
      - name: azmcp-extension-az
      - name: azmcp-extension-azd
      - name: azmcp-group-list
      - name: azmcp-monitor-log-query
      - name: azmcp-monitor-table-list
      - name: azmcp-monitor-workspace-list
      - name: azmcp-search-index-describe
      - name: azmcp-search-index-list
      - name: azmcp-search-index-query
      - name: azmcp-search-service-list
      - name: azmcp-storage-account-list
      - name: azmcp-storage-blob-container-details
      - name: azmcp-storage-blob-container-list
      - name: azmcp-storage-blob-list
      - name: azmcp-storage-table-list
      - name: azmcp-subscription-list
    command:
      - server
      - start
    prompts: 0
    resources: {}
    metadata:
      githubStars: 1149
      category: devops
      tags:
        - azure
        - devops
      license: MIT License
      owner: Azure
  beagle-security:
    description: Connects with the Beagle Security backend using a user token to manage applications, run automated security tests, track vulnerabilities across environments, and gain intelligence from Application and API vulnerability data.
    title: Beagle security MCP server
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/beagle-security-mcp-server
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/beagle-security.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/beagle-security.json
    source: https://github.com/beaglesecurity/beagle-security-mcp-server/tree/main
    upstream: https://github.com/beaglesecurity/beagle-security-mcp-server
    icon: https://cdn.beaglesecurity.com/assets/brand/png/beagle-blue-icon.png
    tools:
      - name: beagle_create_application
      - name: beagle_create_project
      - name: beagle_delete_application
      - name: beagle_delete_project
      - name: beagle_get_application
      - name: beagle_get_domain_signature
      - name: beagle_get_test_result
      - name: beagle_get_test_status
      - name: beagle_list_applications
      - name: beagle_list_projects
      - name: beagle_list_running_tests
      - name: beagle_list_test_sessions
      - name: beagle_modify_application
      - name: beagle_modify_project
      - name: beagle_start_test
      - name: beagle_stop_test
      - name: beagle_verify_domain
    secrets:
      - name: beagle-security.Beagle-Security-Personal-access-token
        env: BEAGLE_SECURITY_API_TOKEN
        example: your_personal_access_token
    prompts: 0
    resources: {}
    metadata:
      category: devops
      tags:
        - devops
      license: MIT License
      owner: beaglesecurity
  bitrefill:
    description: A Model Context Protocol Server connector for Bitrefill public API, to enable AI agents to search and shop on Bitrefill.
    title: Bitrefill
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/bitrefill
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/bitrefill.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/bitrefill.json
    source: https://github.com/bitrefill/bitrefill-mcp-server/tree/master
    upstream: https://github.com/bitrefill/bitrefill-mcp-server
    icon: https://avatars.githubusercontent.com/u/10897174?s=200&v=4
    tools:
      - name: categories
      - name: create_invoice
      - name: detail
      - name: get_account_balance
      - name: get_invoice
      - name: get_invoices
      - name: get_order
      - name: get_orders
      - name: pay_invoice
      - name: ping
      - name: search
      - name: unseal_order
    secrets:
      - name: bitrefill.api_secret
        env: BITREFILL_API_SECRET
        example: your_api_key_here
    env:
      - name: BITREFILL_API_ID
        value: '{{bitrefill.api_id}}'
    prompts: 0
    resources: {}
    config:
      - name: bitrefill
        description: Configure the connection to Bitrefill
        type: object
        properties:
          api_id:
            type: string
        required:
          - api_id
    metadata:
      githubStars: 5
      category: devops
      tags:
        - bitrefill
        - devops
      license: MIT License
      owner: bitrefill
  box:
    description: An MCP server capable of interacting with the Box API.
    title: Box
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/box
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/box.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/box.json
    source: https://github.com/box-community/mcp-server-box/tree/refs/pull/4/merge
    upstream: https://github.com/box-community/mcp-server-box
    icon: https://avatars.githubusercontent.com/u/8659759?s=200&v=4
    tools:
      - name: box_ai_ask_file_multi_tool
      - name: box_ai_ask_file_single_tool
      - name: box_ai_ask_hub_tool
      - name: box_ai_extract_freeform_tool
      - name: box_ai_extract_structured_enhanced_using_fields_tool
      - name: box_ai_extract_structured_enhanced_using_template_tool
      - name: box_ai_extract_structured_using_fields_tool
      - name: box_ai_extract_structured_using_template_tool
      - name: box_authorize_app_tool
      - name: box_docgen_create_batch_tool
      - name: box_docgen_create_single_file_from_user_input_tool
      - name: box_docgen_get_job_by_id_tool
      - name: box_docgen_list_jobs_by_batch_tool
      - name: box_docgen_list_jobs_tool
      - name: box_docgen_template_create_tool
      - name: box_docgen_template_get_by_id_tool
      - name: box_docgen_template_get_by_name_tool
      - name: box_docgen_template_list_jobs_tool
      - name: box_docgen_template_list_tags_tool
      - name: box_docgen_template_list_tool
      - name: box_download_file_tool
      - name: box_list_folder_content_by_folder_id
      - name: box_manage_folder_tool
      - name: box_metadata_delete_instance_on_file_tool
      - name: box_metadata_get_instance_on_file_tool
      - name: box_metadata_set_instance_on_file_tool
      - name: box_metadata_template_create_tool
      - name: box_metadata_template_get_by_name_tool
      - name: box_metadata_update_instance_on_file_tool
      - name: box_read_tool
      - name: box_search_folder_by_name_tool
      - name: box_search_tool
      - name: box_upload_file_from_content_tool
      - name: box_upload_file_from_path_tool
      - name: box_who_am_i
      - name: mcp_server_info
    secrets:
      - name: box.client_secret
        env: BOX_CLIENT_SECRET
        example: your_client_secret
    env:
      - name: BOX_CLIENT_ID
        value: '{{box.client_id}}'
    prompts: 0
    resources: {}
    config:
      - name: box
        description: Configure the connection to Box
        type: object
        properties:
          client_id:
            type: string
        required:
          - client_id
    metadata:
      githubStars: 49
      category: devops
      tags:
        - box
        - devops
      owner: box-community
  box-remote:
    description: Document Management.
    title: Box
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/box-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/box-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.box.com
    icon: https://www.google.com/s2/favicons?domain=box.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: storage
      tags:
        - storage
        - document-management
        - collaboration
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: box-remote
  brave:
    description: Search the Web for pages, images, news, videos, and more using the Brave Search API.
    title: Brave Search
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/brave-search
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/brave.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/brave.json
    source: https://github.com/brave/brave-search-mcp-server/tree/main
    upstream: https://github.com/brave/brave-search-mcp-server
    icon: https://avatars.githubusercontent.com/u/12301619?s=200&v=4
    tools:
      - name: brave_image_search
      - name: brave_local_search
      - name: brave_news_search
      - name: brave_summarizer
      - name: brave_video_search
      - name: brave_web_search
    secrets:
      - name: brave.api_key
        env: BRAVE_API_KEY
        example: YOUR_API_KEY_HERE
    env:
      - name: BRAVE_MCP_TRANSPORT
        value: stdio
    prompts: 0
    resources: {}
    metadata:
      githubStars: 135
      category: search
      tags:
        - brave
        - search
      license: MIT License
      owner: brave
  buildkite:
    description: Buildkite MCP lets agents interact with Buildkite Builds, Jobs, Logs, Packages and Test Suites.
    title: Buildkite
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/buildkite
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/buildkite.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/buildkite.json
    source: https://github.com/buildkite/buildkite-mcp-server/tree/main
    upstream: https://github.com/buildkite/buildkite-mcp-server
    icon: https://avatars.githubusercontent.com/u/5055988?v=4
    tools:
      - name: access_token
      - name: create_build
      - name: create_pipeline
      - name: current_user
      - name: get_artifact
      - name: get_build
      - name: get_build_test_engine_runs
      - name: get_cluster
      - name: get_cluster_queue
      - name: get_failed_executions
      - name: get_job_logs
      - name: get_jobs
      - name: get_pipeline
      - name: get_test
      - name: get_test_run
      - name: list_annotations
      - name: list_artifacts
      - name: list_builds
      - name: list_cluster_queues
      - name: list_clusters
      - name: list_pipelines
      - name: list_test_runs
      - name: update_pipeline
      - name: user_token_organization
    secrets:
      - name: buildkite-mcp-server.api_key
        env: BUILDKITE_API_TOKEN
        example: bkua_xxxxx
    prompts: 0
    resources: {}
    metadata:
      githubStars: 34
      category: devops
      tags:
        - devops
      license: MIT License
      owner: buildkite
  canva-remote:
    description: Design.
    title: Canva
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/canva-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/canva-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.canva.com/mcp
    icon: https://www.google.com/s2/favicons?domain=canva.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: design
      tags:
        - design
        - graphics
        - creative
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: canva-remote
  carbon-voice-remote:
    description: Productivity.
    title: Carbon Voice
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/carbon-voice-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/carbon-voice-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.carbonvoice.app
    icon: https://www.google.com/s2/favicons?domain=carbonvoice.app&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: productivity
      tags:
        - productivity
        - voice
        - automation
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: carbon-voice-remote
  cdata-connectcloud:
    description: This fully functional MCP Server allows you to connect to any data source in Connect Cloud from Claude Desktop.
    title: CData Connect Cloud
    type: server
    dateAdded: "2025-05-15T20:08:35Z"
    image: mcp/cdata-connectcloud
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/cdata-connectcloud.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/cdata-connectcloud.json
    source: https://github.com/CDataSoftware/connectcloud-mcp-server/tree/00fe03b372819d143f266fd49e53d98181f4dd12
    upstream: https://github.com/CDataSoftware/connectcloud-mcp-server
    icon: https://avatars.githubusercontent.com/u/24947354?v=4
    tools:
      - name: execData
      - name: getCatalogs
      - name: getColumns
      - name: getExportedKeys
      - name: getImportedKeys
      - name: getIndexes
      - name: getPrimaryKeys
      - name: getProcedureParameters
      - name: getProcedures
      - name: getSchemas
      - name: getTables
      - name: queryData
    secrets:
      - name: cdata.pat
        env: CDATA_PAT
        example: <your-cdata-pat>
    env:
      - name: CDATA_USERNAME
        value: '{{cdata-connectcloud.username}}'
    prompts: 0
    resources: {}
    config:
      - name: cdata-connectcloud
        description: Configure the connection to CData Connect Cloud
        type: object
        properties:
          client_id:
            type: string
        required:
          - username
    metadata:
      githubStars: 2
      category: devops
      tags:
        - cdata-connectcloud
        - devops
      owner: CDataSoftware
  chroma:
    description: A Model Context Protocol (MCP) server implementation that provides database capabilities for Chroma.
    title: Chroma
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/chroma
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/chroma.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/chroma.json
    source: https://github.com/chroma-core/chroma-mcp/tree/main
    upstream: https://github.com/chroma-core/chroma-mcp
    icon: https://avatars.githubusercontent.com/u/105881770?s=200&v=4
    tools:
      - name: chroma_add_documents
      - name: chroma_create_collection
      - name: chroma_delete_collection
      - name: chroma_delete_documents
      - name: chroma_fork_collection
      - name: chroma_get_collection_count
      - name: chroma_get_collection_info
      - name: chroma_get_documents
      - name: chroma_list_collections
      - name: chroma_modify_collection
      - name: chroma_peek_collection
      - name: chroma_query_documents
      - name: chroma_update_documents
    secrets:
      - name: chroma.api_key
        env: CHROMA_API_KEY
        example: your-api-key
    prompts: 0
    resources: {}
    metadata:
      githubStars: 329
      category: devops
      tags:
        - chroma
        - devops
      license: Apache License 2.0
      owner: chroma-core
  circleci:
    description: A specialized server implementation for the Model Context Protocol (MCP) designed to integrate with CircleCI's development workflow. This project serves as a bridge between CircleCI's infrastructure and the Model Context Protocol, enabling enhanced AI-powered development experiences.
    title: CircleCI
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/circleci
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/circleci.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/circleci.json
    source: https://github.com/cmrigney/mcp-server-circleci/tree/use-cmd-docker
    upstream: https://github.com/CircleCI-Public/mcp-server-circleci
    icon: https://avatars.githubusercontent.com/u/26607840?s=200&v=4
    tools:
      - name: analyze_diff
      - name: config_helper
      - name: create_prompt_template
      - name: find_flaky_tests
      - name: get_build_failure_logs
      - name: get_job_test_results
      - name: get_latest_pipeline_status
      - name: list_followed_projects
      - name: recommend_prompt_template_tests
      - name: rerun_workflow
      - name: run_evaluation_tests
      - name: run_pipeline
    secrets:
      - name: circleci.token
        env: CIRCLECI_TOKEN
        example: your-circleci-token
    env:
      - name: CIRCLECI_BASE_URL
        value: '{{circleci.url}}'
    command:
      - stdio
    prompts: 0
    resources: {}
    config:
      - name: circleci
        description: Configure the connection to CircleCI
        type: object
        properties:
          url:
            type: string
    metadata:
      githubStars: 60
      category: devops
      tags:
        - circleci
        - devops
      license: Other
      owner: CircleCI-Public
  clickhouse:
    description: Official ClickHouse MCP Server.
    title: Official ClickHouse MCP Server
    type: server
    dateAdded: "2025-06-12T18:00:16Z"
    image: mcp/clickhouse
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/clickhouse.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/clickhouse.json
    source: https://github.com/ClickHouse/mcp-clickhouse/tree/main
    upstream: https://github.com/ClickHouse/mcp-clickhouse
    icon: https://avatars.githubusercontent.com/u/54801242?v=4
    tools:
      - name: list_databases
      - name: list_tables
      - name: run_select_query
    secrets:
      - name: clickhouse.password
        env: CLICKHOUSE_PASSWORD
        example: <YOUR_CLICKHOUSE_PASSWORD_HERE>
    env:
      - name: CLICKHOUSE_HOST
        value: '{{clickhouse.host}}'
      - name: CLICKHOUSE_PORT
        value: '{{clickhouse.port}}'
      - name: CLICKHOUSE_USER
        value: '{{clickhouse.user}}'
      - name: CLICKHOUSE_SECURE
        value: '{{clickhouse.secure}}'
      - name: CLICKHOUSE_VERIFY
        value: '{{clickhouse.verify}}'
      - name: CLICKHOUSE_CONNECT_TIMEOUT
        value: '{{clickhouse.connect_timeout}}'
      - name: CLICKHOUSE_SEND_RECEIVE_TIMEOUT
        value: '{{clickhouse.send_receive_timeout}}'
    prompts: 0
    resources: {}
    config:
      - name: clickhouse
        description: Configure the connection to ClickHouse
        type: object
        properties:
          host:
            type: string
          port:
            type: string
          user:
            type: string
          secure:
            type: string
          verify:
            type: string
          connect_timeout:
            type: string
          send_receive_timeout:
            type: string
    metadata:
      githubStars: 513
      category: database
      tags:
        - database
        - clickhouse
      license: Apache License 2.0
      owner: ClickHouse
  close-remote:
    description: CRM.
    title: Close
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/close-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/close-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.close.com/mcp
    icon: https://www.google.com/s2/favicons?domain=close.com&sz=64
    tools: []
    secrets:
      - name: close-remote.api_key
        env: CLOSE_REMOTE_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: crm
      tags:
        - crm
        - sales
        - customer-management
        - remote
      license: Apache License 2.0
      owner: docker
  cloud-run-mcp:
    description: MCP server to deploy apps to Cloud Run.
    title: Cloud Run MCP
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/cloud-run-mcp
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/cloud-run-mcp.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/cloud-run-mcp.json
    source: https://github.com/GoogleCloudPlatform/cloud-run-mcp/tree/main
    upstream: https://github.com/GoogleCloudPlatform/cloud-run-mcp
    icon: https://avatars.githubusercontent.com/u/2810941?v=4
    tools:
      - name: create_project
      - name: deploy_container_image
      - name: deploy_file_contents
      - name: deploy_local_folder
      - name: get_service
      - name: get_service_log
      - name: list_projects
      - name: list_services
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /app/.config/gcloud/application_default_credentials.json
    volumes:
      - '{{cloud-run-mcp.credentials_path}}:/app/.config/gcloud/application_default_credentials.json'
    prompts: 0
    resources: {}
    config:
      - name: cloud-run-mcp
        description: Configure the connection to Google Cloud Run
        type: object
        properties:
          credentials_path:
            type: string
            description: path to application-default credentials (eg $HOME/.config/gcloud/application_default_credentials.json )
    metadata:
      githubStars: 345
      category: devops
      tags:
        - devops
      license: Apache License 2.0
      owner: GoogleCloudPlatform
  cloudflare-docs-remote:
    description: Access the latest documentation on Cloudflare products such as Workers, Pages, R2, D1, KV.
    title: Cloudflare Docs
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/cloudflare-docs-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/cloudflare-docs-remote.json
    source: ""
    upstream: https://github.com/cloudflare/mcp-server-cloudflare/tree/main/apps/docs-vectorize
    remote:
      transport_type: sse
      url: https://docs.mcp.cloudflare.com/sse
    icon: https://www.cloudflare.com/favicon.ico
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: documentation
      tags:
        - documentation
        - cloudflare
        - cloud
        - remote
      license: Apache License 2.0
      owner: docker
  cloudflare-observability-remote:
    description: Observability.
    title: Cloudflare Observability
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/cloudflare-observability-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/cloudflare-observability-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://observability.mcp.cloudflare.com/sse
    icon: https://www.google.com/s2/favicons?domain=cloudflare.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: monitoring
      tags:
        - monitoring
        - observability
        - cloudflare
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: cloudflare-observability-remote
  cloudflare-workers-remote:
    description: Software Development.
    title: Cloudflare Workers
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/cloudflare-workers-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/cloudflare-workers-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://bindings.mcp.cloudflare.com/sse
    icon: https://www.google.com/s2/favicons?domain=cloudflare.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: devops
      tags:
        - devops
        - serverless
        - cloudflare
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: cloudflare-workers-remote
  cloudinary-remote:
    description: Asset Management.
    title: Cloudinary
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/cloudinary-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/cloudinary-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://asset-management.mcp.cloudinary.com/sse
    icon: https://www.google.com/s2/favicons?domain=cloudinary.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: media
      tags:
        - media
        - asset-management
        - cdn
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: cloudinary-remote
  cockroachdb:
    description: Enable AI agents to manage, monitor, and query CockroachDB using natural language. Perform complex database operations, cluster management, and query execution seamlessly through AI-driven workflows. Integrate effortlessly with MCP clients for scalable and high-performance data operations.
    title: CockroachDB
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/cockroachdb
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/cockroachdb.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/cockroachdb.json
    source: https://github.com/amineelkouhen/mcp-cockroachdb/tree/main
    upstream: https://github.com/amineelkouhen/mcp-cockroachdb
    icon: https://avatars.githubusercontent.com/u/6748139?v=4
    tools:
      - name: analyze_performance
      - name: analyze_schema
      - name: bulk_import
      - name: connect
      - name: connect_database
      - name: create_database
      - name: create_index
      - name: create_table
      - name: create_view
      - name: describe_table
      - name: drop_database
      - name: drop_index
      - name: drop_table
      - name: drop_view
      - name: execute_query
      - name: execute_transaction
      - name: explain_query
      - name: get_active_connections
      - name: get_cluster_status
      - name: get_connection_status
      - name: get_database_settings
      - name: get_query_history
      - name: get_replication_status
      - name: get_table_relationships
      - name: list_databases
      - name: list_tables
      - name: list_views
      - name: show_running_queries
      - name: switch_database
    secrets:
      - name: cockroachdb.password
        env: CRDB_PWD
        example: ""
    env:
      - name: CRDB_HOST
        value: '{{cockroachdb.host}}'
      - name: CRDB_PORT
        value: '{{cockroachdb.port}}'
      - name: CRDB_DATABASE
        value: '{{cockroachdb.database}}'
      - name: CRDB_USERNAME
        value: '{{cockroachdb.username}}'
      - name: CRDB_SSL_MODE
        value: '{{cockroachdb.ssl_mode}}'
      - name: CRDB_SSL_CA_PATH
        value: '{{cockroachdb.ca_path}}'
      - name: CRDB_SSL_KEYFILE
        value: '{{cockroachdb.ssl_keyfile}}'
      - name: CRDB_SSL_CERTFILE
        value: '{{cockroachdb.ssl_certfile}}'
    prompts: 0
    resources: {}
    config:
      - name: cockroachdb
        description: Configure the connection to CockroachDB
        type: object
        properties:
          host:
            type: string
          port:
            type: integer
          database:
            type: string
          username:
            type: string
          ssl_mode:
            type: string
          ca_path:
            type: string
          ssl_keyfile:
            type: string
          ssl_certfile:
            type: string
    metadata:
      githubStars: 2
      category: database
      tags:
        - cockroachdb
        - database
      license: MIT License
      owner: amineelkouhen
  context7:
    description: Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors.
    title: Context7
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/context7
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/context7.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/context7.json
    source: https://github.com/upstash/context7/tree/v1.0.14
    upstream: https://github.com/upstash/context7
    icon: https://avatars.githubusercontent.com/u/74989412?s=200&v=4
    tools:
      - name: get-library-docs
      - name: resolve-library-id
    env:
      - name: MCP_TRANSPORT
        value: stdio
    prompts: 0
    resources: {}
    metadata:
      githubStars: 28969
      category: devops
      tags:
        - context7
        - devops
      license: MIT License
      owner: upstash
  cyreslab-ai-shodan:
    description: A Model Context Protocol server that provides access to Shodan API functionality.
    title: Shodan
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/cyreslab-ai-shodan
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/cyreslab-ai-shodan.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/cyreslab-ai-shodan.json
    source: https://github.com/Cyreslab-AI/shodan-mcp-server/tree/935f7044f60570cf2d094d94596eeea7872fb6be
    upstream: https://github.com/Cyreslab-AI/shodan-mcp-server
    icon: https://avatars.githubusercontent.com/u/178556137?s=200&v=4
    tools:
      - name: get_host_info
      - name: get_ssl_info
      - name: scan_network_range
      - name: search_iot_devices
      - name: search_shodan
    secrets:
      - name: cyreslab-ai-shodan.api_key
        env: SHODAN_API_KEY
        example: YOUR_SHODAN_API_KEY
    prompts: 0
    resources: {}
    metadata:
      githubStars: 28
      category: devops
      tags:
        - cyreslab-ai-shodan
        - devops
      license: MIT License
      owner: Cyreslab-AI
  dappier:
    description: Enable fast, free real-time web search and access premium data from trusted media brands—news, financial markets, sports, entertainment, weather, and more. Build powerful AI agents with Dappier.
    title: Dappier
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/dappier
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/dappier.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/dappier.json
    source: https://github.com/dappierai/dappier-mcp/tree/staging
    upstream: https://github.com/dappierai/dappier-mcp
    icon: https://avatars.githubusercontent.com/u/152645347?s=200&v=4
    tools:
      - name: dappier_ai_recommendations
      - name: dappier_real_time_search
    secrets:
      - name: dappier.api_key
        env: DAPPIER_API_KEY
        example: YOUR_API_KEY_HERE
    prompts: 0
    resources: {}
    metadata:
      githubStars: 28
      category: devops
      tags:
        - dappier
        - devops
      license: MIT License
      owner: DappierAI
  dappier-remote:
    description: RAG-as-a-Service.
    title: Dappier
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/dappier-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/dappier-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.dappier.com/mcp
    icon: https://www.google.com/s2/favicons?domain=dappier.com&sz=64
    tools: []
    secrets:
      - name: dappier-remote.api_key
        env: DAPPIER_REMOTE_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: ai
      tags:
        - ai
        - rag
        - knowledge-base
        - remote
      license: Apache License 2.0
      owner: docker
  dart:
    description: Dart AI Model Context Protocol (MCP) server.
    title: Dart AI
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/dart
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/dart.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/dart.json
    source: https://github.com/its-dart/dart-mcp-server/tree/main
    upstream: https://github.com/its-dart/dart-mcp-server
    icon: https://avatars.githubusercontent.com/u/92822028?s=200&v=4
    tools:
      - name: add_task_comment
      - name: create_doc
      - name: create_task
      - name: delete_doc
      - name: delete_task
      - name: get_config
      - name: get_dartboard
      - name: get_doc
      - name: get_folder
      - name: get_task
      - name: get_view
      - name: list_docs
      - name: list_task_comments
      - name: list_tasks
      - name: update_doc
      - name: update_task
    secrets:
      - name: dart.token
        env: DART_TOKEN
        example: dsa_...
    env:
      - name: DART_HOST
        value: '{{dart.host}}'
    prompts: 0
    resources: {}
    config:
      - name: dart
        description: Configure the connection to Dart
        type: object
        properties:
          host:
            type: string
    metadata:
      githubStars: 115
      category: devops
      tags:
        - dart
        - devops
      license: MIT License
      owner: its-dart
  databutton:
    description: Databutton MCP Server.
    title: Databutton
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/databutton
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/databutton.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/databutton.json
    source: https://github.com/databutton/databutton-mcp/tree/main
    upstream: https://github.com/databutton/databutton-mcp
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: submit_app_requirements
    prompts: 0
    resources: {}
    metadata:
      githubStars: 25
      category: devops
      tags:
        - databutton
        - devops
      license: MIT License
      owner: databutton
  deepwiki-remote:
    description: Tools for fetching and asking questions about GitHub repositories.
    title: DeepWiki
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/deepwiki-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/deepwiki-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.deepwiki.com/sse
    icon: https://devin.ai/apple-icon.png
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: knowledge
      tags:
        - knowledge
        - wiki
        - documentation
        - remote
      license: Apache License 2.0
      owner: docker
  descope:
    description: The Descope Model Context Protocol (MCP) server provides an interface to interact with Descope's Management APIs, enabling the search and retrieval of project-related information.
    title: Descope
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/descope
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/descope.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/descope.json
    source: https://github.com/descope-sample-apps/descope-mcp-server/tree/main
    upstream: https://github.com/descope-sample-apps/descope-mcp-server
    icon: https://avatars.githubusercontent.com/u/119703169?s=200&v=4
    tools:
      - name: create-user
      - name: invite-user
      - name: search-audits
      - name: search-users
    secrets:
      - name: descope.management_key
        env: DESCOPE_MANAGEMENT_KEY
        example: your-descope-management-key-here
    env:
      - name: DESCOPE_PROJECT_ID
        value: '{{descope.project_id}}'
    prompts: 0
    resources: {}
    config:
      - name: descope
        description: Configure the connection to Descope
        type: object
        properties:
          project_id:
            type: string
        required:
          - project_id
    metadata:
      githubStars: 19
      category: devops
      tags:
        - descope
        - devops
      license: MIT License
      owner: descope-sample-apps
  desktop-commander:
    description: Search, update, manage files and run terminal commands with AI.
    title: Desktop Commander
    type: server
    longLived: true
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/desktop-commander
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/desktop-commander.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/desktop-commander.json
    source: https://github.com/wonderwhy-er/DesktopCommanderMCP/tree/main
    upstream: https://github.com/wonderwhy-er/DesktopCommanderMCP
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: create_directory
      - name: edit_block
      - name: force_terminate
      - name: get_config
      - name: get_file_info
      - name: get_more_search_results
      - name: get_usage_stats
      - name: give_feedback_to_desktop_commander
      - name: interact_with_process
      - name: kill_process
      - name: list_directory
      - name: list_processes
      - name: list_searches
      - name: list_sessions
      - name: move_file
      - name: read_file
      - name: read_multiple_files
      - name: read_process_output
      - name: set_config_value
      - name: start_process
      - name: start_search
      - name: stop_search
      - name: write_file
    command:
      - npm
      - run
      - start
    volumes:
      - '{{desktop-commander.paths|volume|into}}'
    prompts: 0
    resources: {}
    config:
      - name: desktop-commander
        description: Configure filesystem access and network permissions for Desktop Commander
        type: object
        properties:
          paths:
            type: array
            description: List of directories that Desktop Commander can access
            items:
              type: string
        required:
          - paths
    metadata:
      githubStars: 4386
      category: devops
      tags:
        - desktop-commander
        - devops
        - filesystem
        - terminal
        - automation
        - file-management
        - productivity
        - local-system
        - tools
        - ai
      license: MIT License
      owner: wonderwhy-er
  devhub-cms:
    description: DevHub CMS LLM integration through the Model Context Protocol.
    title: DevHub CMS
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/devhub-cms
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/devhub-cms.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/devhub-cms.json
    source: https://github.com/devhub/devhub-cms-mcp/tree/main
    upstream: https://github.com/devhub/devhub-cms-mcp
    icon: https://avatars.githubusercontent.com/u/602719?s=200&v=4
    tools:
      - name: create_blog_post
      - name: get_blog_post
      - name: get_businesses
      - name: get_hours_of_operation
      - name: get_locations
      - name: get_nearest_location
      - name: site_from_url
      - name: update_blog_post
      - name: update_hours
      - name: upload_image
    secrets:
      - name: devhub-cms.api_key
        env: DEVHUB_API_KEY
        example: YOUR_KEY_HERE
      - name: devhub-cms.api_secret
        env: DEVHUB_API_SECRET
        example: YOUR_SECRET_HERE
    env:
      - name: DEVHUB_BASE_URL
        value: '{{devhub-cms.url}}'
    prompts: 0
    resources: {}
    config:
      - name: devhub-cms
        description: Configure the connection to DevHub CMS
        type: object
        properties:
          url:
            type: string
        required:
          - url
    metadata:
      githubStars: 5
      category: devops
      tags:
        - devhub-cms
        - devops
      owner: devhub
  dialer-remote:
    description: Outbound Phone Calls.
    title: Dialer
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/dialer-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/dialer-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://getdialer.app/sse
    icon: https://www.google.com/s2/favicons?domain=getdialer.app&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: communication
      tags:
        - communication
        - telephony
        - outbound
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: dialer-remote
  dodo-payments-remote:
    description: Payments.
    title: Dodo Payments
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/dodo-payments-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/dodo-payments-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.dodopayments.com/sse
    icon: https://www.google.com/s2/favicons?domain=dodopayments.com&sz=64
    tools: []
    secrets:
      - name: dodo-payments-remote.api_key
        env: DODO_PAYMENTS_REMOTE_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: payments
      tags:
        - payments
        - finance
        - transactions
        - remote
      license: Apache License 2.0
      owner: docker
  dynatrace-mcp-server:
    description: This MCP Server allows interaction with the Dynatrace observability platform, brining real-time observability data directly into your development workflow.
    title: Dynatrace MCP Server
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/dynatrace-mcp-server
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/dynatrace-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/dynatrace-mcp-server.json
    source: https://github.com/dynatrace-oss/dynatrace-mcp/tree/main
    upstream: https://github.com/dynatrace-oss/dynatrace-mcp
    icon: https://avatars.githubusercontent.com/u/58178984?s=200&v=4
    tools:
      - name: chat_with_davis_copilot
      - name: create_workflow_for_notification
      - name: execute_dql
      - name: explain_dql_in_natural_language
      - name: find_entity_by_name
      - name: generate_dql_from_natural_language
      - name: get_entity_details
      - name: get_environment_info
      - name: get_kubernetes_events
      - name: get_logs_for_entity
      - name: get_ownership
      - name: list_problems
      - name: list_vulnerabilities
      - name: make_workflow_public
      - name: send_slack_message
      - name: verify_dql
    secrets:
      - name: dynatrace-mcp-server.oauth_client_id
        env: OAUTH_CLIENT_ID
        example: dt0s02.SAMPLE
      - name: dynatrace-mcp-server.oauth_client_secret
        env: OAUTH_CLIENT_SECRET
        example: dt0s02.SAMPLE.abcd1234
    env:
      - name: DT_ENVIRONMENT
        value: '{{dynatrace-mcp-server.url}}'
    prompts: 0
    resources: {}
    config:
      - name: dynatrace-mcp-server
        description: Configure the connection to Dynatrace
        type: object
        properties:
          url:
            type: string
    metadata:
      githubStars: 129
      category: monitoring
      tags:
        - Dynatrace
        - Observability
        - Monitoring
      license: MIT License
      owner: dynatrace-oss
  e2b:
    description: Giving Claude ability to run code with E2B via MCP (Model Context Protocol).
    title: E2B
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/e2b
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/e2b.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/e2b.json
    source: https://github.com/e2b-dev/mcp-server/tree/main
    upstream: https://github.com/e2b-dev/mcp-server
    icon: https://avatars.githubusercontent.com/u/129434473?s=200&v=4
    tools:
      - name: run_code
    secrets:
      - name: e2b.api_key
        env: E2B_API_KEY
        example: YOUR_API_KEY_HERE
    prompts: 0
    resources: {}
    metadata:
      githubStars: 320
      category: devops
      tags:
        - e2b
        - devops
      license: Apache License 2.0
      owner: e2b-dev
  edubase:
    description: The EduBase MCP server enables Claude and other LLMs to interact with EduBase's comprehensive e-learning platform through the Model Context Protocol (MCP).
    title: EduBase
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/edubase
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/edubase.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/edubase.json
    source: https://github.com/EduBase/MCP/tree/main
    upstream: https://github.com/EduBase/MCP
    icon: https://avatars.githubusercontent.com/u/33938028?s=200&v=4
    tools:
      - name: edubase_delete_class_members
      - name: edubase_delete_class_permission
      - name: edubase_delete_class_tag
      - name: edubase_delete_course_permission
      - name: edubase_delete_course_tag
      - name: edubase_delete_course_transfer
      - name: edubase_delete_event_permission
      - name: edubase_delete_event_tag
      - name: edubase_delete_exam
      - name: edubase_delete_exam_permission
      - name: edubase_delete_exam_tag
      - name: edubase_delete_exam_users
      - name: edubase_delete_integration
      - name: edubase_delete_integration_permission
      - name: edubase_delete_integration_tag
      - name: edubase_delete_organization
      - name: edubase_delete_organization_members
      - name: edubase_delete_organization_permission
      - name: edubase_delete_organization_tag
      - name: edubase_delete_organization_webhook
      - name: edubase_delete_question
      - name: edubase_delete_quiz
      - name: edubase_delete_quiz_permission
      - name: edubase_delete_quiz_questions
      - name: edubase_delete_quiz_tag
      - name: edubase_delete_scorm_permission
      - name: edubase_delete_scorm_tag
      - name: edubase_delete_tag_permission
      - name: edubase_delete_user
      - name: edubase_delete_user_assume
      - name: edubase_delete_user_classes
      - name: edubase_delete_user_login
      - name: edubase_delete_user_organizations
      - name: edubase_delete_video_permission
      - name: edubase_delete_video_tag
      - name: edubase_get_class
      - name: edubase_get_class_assignments
      - name: edubase_get_class_members
      - name: edubase_get_class_permission
      - name: edubase_get_class_tag
      - name: edubase_get_class_tags
      - name: edubase_get_classes
      - name: edubase_get_course_permission
      - name: edubase_get_course_tag
      - name: edubase_get_course_tags
      - name: edubase_get_event_permission
      - name: edubase_get_event_tag
      - name: edubase_get_event_tags
      - name: edubase_get_exam
      - name: edubase_get_exam_certificates_user
      - name: edubase_get_exam_permission
      - name: edubase_get_exam_results_raw
      - name: edubase_get_exam_results_user
      - name: edubase_get_exam_tag
      - name: edubase_get_exam_tags
      - name: edubase_get_exam_users
      - name: edubase_get_exams
      - name: edubase_get_integration
      - name: edubase_get_integration_keys
      - name: edubase_get_integration_permission
      - name: edubase_get_integration_tag
      - name: edubase_get_integration_tags
      - name: edubase_get_integrations
      - name: edubase_get_organization
      - name: edubase_get_organization_members
      - name: edubase_get_organization_permission
      - name: edubase_get_organization_tag
      - name: edubase_get_organization_tags
      - name: edubase_get_organization_webhook
      - name: edubase_get_organizations
      - name: edubase_get_question
      - name: edubase_get_question_id
      - name: edubase_get_questions
      - name: edubase_get_quiz
      - name: edubase_get_quiz_permission
      - name: edubase_get_quiz_play_results
      - name: edubase_get_quiz_questions
      - name: edubase_get_quiz_results_user
      - name: edubase_get_quiz_tag
      - name: edubase_get_quiz_tags
      - name: edubase_get_quizes
      - name: edubase_get_scorm_permission
      - name: edubase_get_scorm_tag
      - name: edubase_get_scorm_tags
      - name: edubase_get_tag
      - name: edubase_get_tag_permission
      - name: edubase_get_tags
      - name: edubase_get_user
      - name: edubase_get_user_classes
      - name: edubase_get_user_group
      - name: edubase_get_user_login
      - name: edubase_get_user_name
      - name: edubase_get_user_organizations
      - name: edubase_get_user_search
      - name: edubase_get_users
      - name: edubase_get_video_permission
      - name: edubase_get_video_tag
      - name: edubase_get_video_tags
      - name: edubase_patch_integration
      - name: edubase_patch_organization
      - name: edubase_patch_organization_webhook
      - name: edubase_patch_user
      - name: edubase_post_class_members
      - name: edubase_post_class_permission
      - name: edubase_post_class_tag
      - name: edubase_post_class_transfer
      - name: edubase_post_classes_members
      - name: edubase_post_course_permission
      - name: edubase_post_course_tag
      - name: edubase_post_custom_metric
      - name: edubase_post_event_permission
      - name: edubase_post_event_tag
      - name: edubase_post_event_transfer
      - name: edubase_post_exam
      - name: edubase_post_exam_certificates_user_download
      - name: edubase_post_exam_permission
      - name: edubase_post_exam_summary
      - name: edubase_post_exam_tag
      - name: edubase_post_exam_transfer
      - name: edubase_post_exam_users
      - name: edubase_post_integration
      - name: edubase_post_integration_keys
      - name: edubase_post_integration_permission
      - name: edubase_post_integration_tag
      - name: edubase_post_integration_transfer
      - name: edubase_post_organization
      - name: edubase_post_organization_members
      - name: edubase_post_organization_permission
      - name: edubase_post_organization_tag
      - name: edubase_post_organization_transfer
      - name: edubase_post_organization_webhook
      - name: edubase_post_organization_webhook_trigger
      - name: edubase_post_organizations_members
      - name: edubase_post_question
      - name: edubase_post_question_export
      - name: edubase_post_question_id
      - name: edubase_post_quiz
      - name: edubase_post_quiz_permission
      - name: edubase_post_quiz_questions
      - name: edubase_post_quiz_tag
      - name: edubase_post_quiz_transfer
      - name: edubase_post_scorm_permission
      - name: edubase_post_scorm_tag
      - name: edubase_post_scorm_transfer
      - name: edubase_post_tag_permission
      - name: edubase_post_tag_transfer
      - name: edubase_post_user
      - name: edubase_post_user_assume
      - name: edubase_post_user_classes
      - name: edubase_post_user_group
      - name: edubase_post_user_login
      - name: edubase_post_user_name
      - name: edubase_post_user_organizations
      - name: edubase_post_video_permission
      - name: edubase_post_video_tag
      - name: edubase_post_video_transfer
    secrets:
      - name: edubase.api_key
        env: EDUBASE_API_KEY
        example: YOUR_EDUBASE_API_KEY
    env:
      - name: EDUBASE_API_APP
        value: '{{edubase.app}}'
      - name: EDUBASE_API_URL
        value: '{{edubase.url}}'
    prompts: 0
    resources: {}
    config:
      - name: edubase
        description: Configure the connection to EduBase
        type: object
        properties:
          app:
            type: string
          url:
            type: string
        required:
          - app
          - url
    metadata:
      githubStars: 20
      category: devops
      tags:
        - edubase
        - devops
      license: MIT License
      owner: EduBase
  effect-mcp:
    description: Tools and resources for writing Effect code in Typescript.
    title: Effect MCP
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/effect-mcp
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/effect-mcp.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/effect-mcp.json
    source: https://github.com/tim-smart/effect-mcp/tree/main
    upstream: https://github.com/tim-smart/effect-mcp
    icon: https://avatars.githubusercontent.com/u/77678942?v=4
    tools:
      - name: effect_doc_search
      - name: get_effect_doc
    prompts: 0
    resources: {}
    metadata:
      githubStars: 173
      category: productivity
      tags:
        - productivity
      license: MIT License
      owner: tim-smart
  elevenlabs:
    description: Official ElevenLabs Model Context Protocol (MCP) server that enables interaction with powerful Text to Speech and audio processing APIs.
    title: Elevenlabs MCP
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/elevenlabs
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/elevenlabs.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/elevenlabs.json
    source: https://github.com/elevenlabs/elevenlabs-mcp/tree/main
    upstream: https://github.com/elevenlabs/elevenlabs-mcp
    icon: https://avatars.githubusercontent.com/u/94471909?v=4
    tools:
      - name: add_knowledge_base_to_agent
      - name: check_subscription
      - name: compose_music
      - name: create_agent
      - name: create_composition_plan
      - name: create_voice_from_preview
      - name: get_agent
      - name: get_conversation
      - name: get_voice
      - name: isolate_audio
      - name: list_agents
      - name: list_conversations
      - name: list_models
      - name: list_phone_numbers
      - name: make_outbound_call
      - name: play_audio
      - name: search_voice_library
      - name: search_voices
      - name: speech_to_speech
      - name: speech_to_text
      - name: text_to_sound_effects
      - name: text_to_speech
      - name: text_to_voice
      - name: voice_clone
    secrets:
      - name: elevenlabs.api_key
        env: ELEVENLABS_API_KEY
        example: <ELEVENLABS_API_KEY>
    volumes:
      - '{{elevenlabs.data}}:/root/Desktop'
    prompts: 0
    resources: {}
    config:
      - name: elevenlabs
        description: Configure the connection to ElevenLabs. Elevenlabs.data is the path to the data directory where the audio files will be stored.
        type: object
        properties:
          data:
            type: string
        required:
          - data
    metadata:
      githubStars: 963
      category: ai
      tags:
        - elevenlabs
        - elevenlabs-api
      license: MIT License
      owner: elevenlabs
  everart:
    description: Image generation server using EverArt's API.
    title: EverArt (Archived)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/everart
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/everart.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/everart.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: generate_image
    secrets:
      - name: everart.api_key
        env: EVERART_API_KEY
        example: your_key_here
    prompts: 0
    resources: {}
    metadata:
      githubStars: 66823
      category: search
      tags:
        - everart
        - search
      license: MIT License
      owner: modelcontextprotocol
  exa:
    description: Exa is a Web Search API | This is Exa MCP (Model Context Protocol).
    title: Exa
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/exa
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/exa.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/exa.json
    source: https://github.com/exa-labs/exa-mcp-server/tree/6ebf32f550168af016837efe31960c6548c831aa
    upstream: https://github.com/exa-labs/exa-mcp-server
    icon: https://avatars.githubusercontent.com/u/77906174?s=200&v=4
    tools:
      - name: web_search_exa
    secrets:
      - name: exa.api_key
        env: EXA_API_KEY
        example: your-api-key-here
    prompts: 0
    resources: {}
    metadata:
      githubStars: 2195
      category: search
      tags:
        - exa
        - devops
        - search
      license: MIT License
      owner: exa-labs
  fibery:
    description: Interact with your Fibery workspace.
    title: Fibery
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/fibery
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/fibery.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/fibery.json
    source: https://github.com/Fibery-inc/fibery-mcp-server/tree/main
    upstream: https://github.com/Fibery-inc/fibery-mcp-server
    icon: https://avatars.githubusercontent.com/u/72027989?v=4
    tools:
      - name: create_entities_batch
      - name: create_entity
      - name: current_date
      - name: describe_database
      - name: list_databases
      - name: query_database
      - name: update_entity
    secrets:
      - name: fibery.api_token
        env: FIBERY_API_TOKEN
        example: your-api-token
    env:
      - name: FIBERY_HOST
        value: '{{fibery.host}}'
    prompts: 0
    resources: {}
    metadata:
      githubStars: 26
      category: devops
      tags:
        - fibery
        - devops
      license: MIT License
      owner: Fibery-inc
  filesystem:
    description: Local filesystem access with configurable allowed paths.
    title: Filesystem (Reference)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/filesystem
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/filesystem.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/filesystem.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: create_directory
      - name: directory_tree
      - name: edit_file
      - name: get_file_info
      - name: list_allowed_directories
      - name: list_directory
      - name: move_file
      - name: read_file
      - name: read_multiple_files
      - name: search_files
      - name: write_file
    command:
      - '{{filesystem.paths|volume-target|into}}'
    volumes:
      - '{{filesystem.paths|volume|into}}'
    disableNetwork: true
    prompts: 0
    resources: {}
    config:
      - name: filesystem
        description: The MCP server is allowed to access these paths
        type: object
        properties:
          paths:
            type: array
            items:
              type: string
        required:
          - paths
    metadata:
      githubStars: 66823
      category: devops
      tags:
        - filesystem
        - devops
      license: MIT License
      owner: modelcontextprotocol
  find-a-domain-remote:
    description: Productivity.
    title: Find-A-Domain
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/find-a-domain-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/find-a-domain-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://api.findadomain.dev/mcp
    icon: https://www.google.com/s2/favicons?domain=findadomain.dev&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: tools
      tags:
        - tools
        - domain
        - productivity
        - remote
      license: Apache License 2.0
      owner: docker
  firecrawl:
    description: "\U0001F525 Official Firecrawl MCP Server - Adds powerful web scraping to Cursor, Claude and any other LLM clients."
    title: Firecrawl
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/firecrawl
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/firecrawl.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/firecrawl.json
    source: https://github.com/mendableai/firecrawl-mcp-server/tree/main
    upstream: https://github.com/mendableai/firecrawl-mcp-server
    icon: https://avatars.githubusercontent.com/u/135057108?s=200&v=4
    tools:
      - name: firecrawl_check_crawl_status
      - name: firecrawl_crawl
      - name: firecrawl_extract
      - name: firecrawl_map
      - name: firecrawl_scrape
      - name: firecrawl_search
    secrets:
      - name: firecrawl.api_key
        env: FIRECRAWL_API_KEY
        example: YOUR-API-KEY
    env:
      - name: FIRECRAWL_API_URL
        value: '{{firecrawl.url}}'
      - name: FIRECRAWL_RETRY_MAX_ATTEMPTS
        value: '{{firecrawl.retry_max}}'
      - name: FIRECRAWL_RETRY_INITIAL_DELAY
        value: '{{firecrawl.retry_delay}}'
      - name: FIRECRAWL_RETRY_MAX_DELAY
        value: '{{firecrawl.retry_max_delay}}'
      - name: FIRECRAWL_RETRY_BACKOFF_FACTOR
        value: '{{firecrawl.retry_backoff_factor}}'
      - name: FIRECRAWL_CREDIT_WARNING_THRESHOLD
        value: '{{firecrawl.credit_warning_threshold}}'
      - name: FIRECRAWL_CREDIT_CRITICAL_THRESHOLD
        value: '{{firecrawl.credit_critical_threshold}}'
    prompts: 0
    resources: {}
    config:
      - name: firecrawl
        description: Configure the connection to Firecrawl
        type: object
        properties:
          credit_critical_threshold:
            type: integer
          credit_warning_threshold:
            type: integer
          retry_backoff_factor:
            type: integer
          retry_delay:
            type: integer
          retry_max:
            type: integer
          retry_max_delay:
            type: integer
          url:
            type: string
    metadata:
      githubStars: 4406
      category: search
      tags:
        - firecrawl
        - search
        - scraping
      license: MIT License
      owner: firecrawl
  firefly-remote:
    description: Productivity.
    title: Firefly
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/firefly-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/firefly-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://api.fireflies.ai/mcp
    icon: https://www.google.com/s2/favicons?domain=fireflies.ai&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: productivity
      tags:
        - productivity
        - meetings
        - transcription
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: firefly-remote
  firewalla-mcp-server:
    description: Real-time network monitoring, security analysis, and firewall management through 28 specialized tools. Access security alerts, network flows, device status, and firewall rules directly from your Firewalla device.
    title: Firewalla MCP Server
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/firewalla-mcp-server
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/firewalla-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/firewalla-mcp-server.json
    source: https://github.com/amittell/firewalla-mcp-server/tree/main
    upstream: https://github.com/amittell/firewalla-mcp-server
    icon: https://avatars.githubusercontent.com/u/16805913?s=200&v=4
    tools:
      - name: create_target_list
      - name: delete_target_list
      - name: get_active_alarms
      - name: get_alarm_trends
      - name: get_bandwidth_usage
      - name: get_boxes
      - name: get_device_status
      - name: get_flow_data
      - name: get_flow_insights
      - name: get_network_rules
      - name: get_network_rules_summary
      - name: get_offline_devices
      - name: get_recent_flow_activity
      - name: get_rule_trends
      - name: get_simple_statistics
      - name: get_specific_alarm
      - name: get_specific_target_list
      - name: get_statistics_by_box
      - name: get_statistics_by_region
      - name: get_target_lists
      - name: pause_rule
      - name: resume_rule
      - name: search_alarms
      - name: search_devices
      - name: search_flows
      - name: search_rules
      - name: search_target_lists
      - name: update_target_list
    secrets:
      - name: firewalla-mcp-server.msp_token
        env: FIREWALLA_MSP_TOKEN
        example: your_msp_access_token_here
    env:
      - name: FIREWALLA_MSP_ID
        value: '{{firewalla-mcp-server.msp_id}}'
      - name: FIREWALLA_BOX_ID
        value: '{{firewalla-mcp-server.box_id}}'
      - name: MCP_WAVE0_ENABLED
        value: "true"
      - name: MCP_READ_ONLY_MODE
        value: "false"
      - name: MCP_CACHE_ENABLED
        value: "true"
      - name: MCP_DEBUG_MODE
        value: "false"
      - name: NODE_ENV
        value: production
      - name: LOG_LEVEL
        value: info
      - name: MCP_CACHE_TTL
        value: "300"
      - name: MCP_RATE_LIMIT_WINDOW
        value: "60000"
      - name: MCP_RATE_LIMIT_MAX_REQUESTS
        value: "100"
    prompts: 0
    resources: {}
    config:
      - name: firewalla-mcp-server
        description: Configure your Firewalla MSP connection credentials
        type: object
        properties:
          msp_id:
            type: string
            description: Your Firewalla MSP domain (e.g., yourdomain.firewalla.net)
          box_id:
            type: string
            description: Your Firewalla Box Global ID
    metadata:
      githubStars: 6
      category: security
      tags:
        - firewall
        - security
        - monitoring
        - network
        - threat-detection
      license: MIT License
      owner: amittell
  flexprice:
    description: Official flexprice MCP Server.
    title: FlexPrice
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/flexprice
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/flexprice.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/flexprice.json
    source: https://github.com/flexprice/mcp-server/tree/main
    upstream: https://github.com/flexprice/mcp-server
    icon: https://avatars.githubusercontent.com/u/168305045?v=4
    tools:
      - name: getCustomerById
      - name: getCustomerByLookupKey
      - name: getCustomerEntitlements
      - name: getCustomerSubscriptions
      - name: getCustomerUsageSummary
      - name: getCustomers
      - name: getEventsByCustomer
      - name: getInvoiceById
      - name: getInvoiceByNumber
      - name: getInvoices
      - name: getInvoicesByCustomerId
      - name: getPaymentById
      - name: getPayments
      - name: getPlanById
      - name: getPlans
      - name: getPriceById
      - name: getPrices
      - name: getSubscriptionById
      - name: getSubscriptionPauses
      - name: getSubscriptionUsage
      - name: getSubscriptions
      - name: getWalletBalance
      - name: getWalletById
      - name: getWalletTransactions
      - name: getWalletsByCustomerId
    secrets:
      - name: flexprice.api_key
        env: API_KEY
        example: your_api_key_here
    env:
      - name: BASE_URL
        value: '{{flexprice.base_url}}'
    prompts: 0
    resources: {}
    config:
      - name: flexprice
        description: Configure the connection to Redis
        type: object
        properties:
          base_url:
            type: string
    metadata:
      githubStars: 3
      category: devops
      tags:
        - flexprice
        - devops
      license: Apache License 2.0
      owner: flexprice
  github:
    description: Tools for interacting with the GitHub API, enabling file operations, repository management, search functionality, and more.
    title: GitHub (Archived)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/github
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/github.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/github.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: add_issue_comment
      - name: create_branch
      - name: create_issue
      - name: create_or_update_file
      - name: create_pull_request
      - name: create_pull_request_review
      - name: create_repository
      - name: fork_repository
      - name: get_file_contents
      - name: get_issue
      - name: get_pull_request
      - name: get_pull_request_comments
      - name: get_pull_request_files
      - name: get_pull_request_reviews
      - name: get_pull_request_status
      - name: list_commits
      - name: list_issues
      - name: list_pull_requests
      - name: merge_pull_request
      - name: push_files
      - name: search_code
      - name: search_issues
      - name: search_repositories
      - name: search_users
      - name: update_issue
      - name: update_pull_request_branch
    secrets:
      - name: github.personal_access_token
        env: GITHUB_PERSONAL_ACCESS_TOKEN
        example: <YOUR_TOKEN>
    prompts: 0
    resources: {}
    metadata:
      githubStars: 66823
      category: devops
      tags:
        - github
        - devops
      license: MIT License
      owner: modelcontextprotocol
  github-chat:
    description: A Model Context Protocol (MCP) for analyzing and querying GitHub repositories using the GitHub Chat API.
    title: GitHub Chat
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/github-chat
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/github-chat.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/github-chat.json
    source: https://github.com/AsyncFuncAI/github-chat-mcp/tree/main
    upstream: https://github.com/AsyncFuncAI/github-chat-mcp
    icon: https://avatars.githubusercontent.com/u/194295535?s=200&v=4
    tools:
      - name: index_repository
      - name: query_repository
    secrets:
      - name: github-chat.api_key
        env: GITHUB_API_KEY
        example: YOUR_GITHUB_API_KEY
    prompts: 0
    resources: {}
    metadata:
      githubStars: 61
      category: devops
      tags:
        - github-chat
        - devops
      license: MIT License
      owner: AsyncFuncAI
  github-remote:
    description: Software Development.
    title: GitHub
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/github-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/github-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://api.githubcopilot.com/mcp
    icon: https://www.google.com/s2/favicons?domain=githubcopilot.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: devops
      tags:
        - devops
        - version-control
        - collaboration
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: github-remote
  gitlab:
    description: MCP Server for the GitLab API, enabling project management, file operations, and more.
    title: GitLab (Archived)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/gitlab
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/gitlab.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/gitlab.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/1086321?s=200&v=4
    tools:
      - name: create_branch
      - name: create_issue
      - name: create_merge_request
      - name: create_or_update_file
      - name: create_repository
      - name: fork_repository
      - name: get_file_contents
      - name: push_files
      - name: search_repositories
    secrets:
      - name: gitlab.personal_access_token
        env: GITLAB_PERSONAL_ACCESS_TOKEN
        example: <YOUR_TOKEN>
    env:
      - name: GITLAB_API_URL
        value: '{{gitlab.url}}'
    prompts: 0
    resources: {}
    config:
      - name: gitlab
        description: Configure the local or Cloud GitLab instance
        type: object
        properties:
          url:
            type: string
            description: api url - optional for self-hosted instances
    metadata:
      githubStars: 66823
      category: devops
      tags:
        - gitlab
        - devops
      license: MIT License
      owner: modelcontextprotocol
  gitmcp-remote:
    description: Software Development.
    title: GitMCP
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/gitmcp-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/gitmcp-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://gitmcp.io/docs
    icon: https://www.google.com/s2/favicons?domain=gitmcp.io&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: development
      tags:
        - git
        - version-control
        - development
        - remote
      license: Apache License 2.0
      owner: docker
  glif:
    description: 'Easily run glif.app AI workflows inside your LLM: image generators, memes, selfies, and more. Glif supports all major multimedia AI models inside one app.'
    title: glif.app
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/glif
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/glif.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/glif.json
    source: https://github.com/glifxyz/glif-mcp-server/tree/main
    upstream: https://github.com/glifxyz/glif-mcp-server
    icon: https://avatars.githubusercontent.com/u/119348676?s=200&v=4
    tools:
      - name: glif_info
      - name: list_featured_glifs
      - name: list_saved_glif_tools
      - name: my_glif_user_info
      - name: my_glifs
      - name: remove_all_glif_tools
      - name: remove_glif_tool
      - name: run_glif
      - name: save_glif_as_tool
      - name: search_glifs
    secrets:
      - name: glif.api_token
        env: GLIF_API_TOKEN
        example: your-token-here
    env:
      - name: GLIF_IDS
        value: '{{glif.ids}}'
      - name: IGNORE_SAVED_GLIFS
        value: '{{glif.ignored_saved}}'
    prompts: 0
    resources: {}
    config:
      - name: glif
        description: Configure the connection to glif.app
        type: object
        properties:
          ids:
            type: string
          ignored_saved:
            type: boolean
    metadata:
      githubStars: 25
      category: devops
      tags:
        - glif
        - devops
      license: MIT License
      owner: glifxyz
  globalping-remote:
    description: Software Development.
    title: Globalping
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/globalping-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/globalping-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.globalping.dev/sse
    icon: https://www.google.com/s2/favicons?domain=globalping.io&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: devops
      tags:
        - devops
        - monitoring
        - network
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: globalping-remote
  google-maps:
    description: Tools for interacting with the Google Maps API.
    title: Google Maps (Archived)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/google-maps
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/google-maps.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/google-maps.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.6
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: maps_directions
      - name: maps_distance_matrix
      - name: maps_elevation
      - name: maps_geocode
      - name: maps_place_details
      - name: maps_reverse_geocode
      - name: maps_search_places
    secrets:
      - name: google-maps.api_key
        env: GOOGLE_MAPS_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      githubStars: 66823
      category: devops
      tags:
        - google-maps
        - devops
      license: MIT License
      owner: modelcontextprotocol
  grafbase-remote:
    description: Software Development.
    title: Grafbase
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/grafbase-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/grafbase-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://api.grafbase.com/mcp
    icon: https://www.google.com/s2/favicons?domain=grafbase.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: devops
      tags:
        - devops
        - graphql
        - database
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: grafbase-remote
  gyazo:
    description: Official Model Context Protocol server for Gyazo.
    title: Gyazo
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/gyazo
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/gyazo.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/gyazo.json
    source: https://github.com/nota/gyazo-mcp-server/tree/main
    upstream: https://github.com/nota/gyazo-mcp-server
    icon: https://avatars.githubusercontent.com/u/113151?v=4
    tools:
      - name: gyazo_image
      - name: gyazo_latest_image
      - name: gyazo_search
      - name: gyazo_upload
    secrets:
      - name: gyazo.access_token
        env: GYAZO_ACCESS_TOKEN
        example: your-access-token-here
    prompts: 0
    resources: {}
    metadata:
      githubStars: 24
      category: devops
      tags:
        - gyazo
        - devops
      license: MIT License
      owner: nota
  hackle:
    description: Model Context Protocol server for Hackle.
    title: Hackle
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/hackle
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/hackle.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/hackle.json
    source: https://github.com/hackle-io/hackle-mcp/tree/main
    upstream: https://github.com/hackle-io/hackle-mcp
    icon: https://avatars.githubusercontent.com/u/65485327?v=4
    tools:
      - name: active-user-series
      - name: analytics-chart-detail
      - name: analytics-chart-list
      - name: data-report-detail
      - name: data-report-list
      - name: experiment-detail
      - name: experiment-list
      - name: in-app-message-detail
      - name: in-app-message-list
      - name: push-message-detail
      - name: push-message-list
      - name: remote-config-create
      - name: remote-config-detail
      - name: remote-config-list
      - name: remote-config-update
      - name: remote-config-update-description
      - name: remote-config-update-user-identifier-criteria
      - name: retention-series
      - name: stickiness-series
    secrets:
      - name: hackle.api_key
        env: API_KEY
        example: YOUR_API_KEY
    prompts: 0
    resources: {}
    metadata:
      githubStars: 2
      category: devops
      tags:
        - hackle
        - devops
      license: MIT License
      owner: hackle-io
  handwriting-ocr:
    description: Model Context Protocol (MCP) Server for Handwriting OCR.
    title: Handwriting OCR
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/handwriting-ocr
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/handwriting-ocr.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/handwriting-ocr.json
    source: https://github.com/Handwriting-OCR/handwriting-ocr-mcp-server/tree/main
    upstream: https://github.com/Handwriting-OCR/handwriting-ocr-mcp-server
    icon: https://avatars.githubusercontent.com/u/202432073?s=200&v=4
    tools:
      - name: check_status
      - name: get_text
      - name: upload_document
    secrets:
      - name: handwriting-ocr.api_token
        env: API_TOKEN
        example: your-api-token
    prompts: 0
    resources: {}
    metadata:
      githubStars: 8
      category: devops
      tags:
        - handwriting-ocr
        - devops
      owner: Handwriting-OCR
  hdx:
    description: HDX MCP Server provides access to humanitarian data through the Humanitarian Data Exchange (HDX) API - https://data.humdata.org/hapi. This server offers 33 specialized tools for retrieving humanitarian information including affected populations (refugees, IDPs, returnees), baseline demographics, food security indicators, conflict data, funding information, and operational presence across hundreds of countries and territories. See repository for instructions on getting a free HDX_APP_INDENTIFIER for access.
    title: Humanitarian Data Exchange MCP Server
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/hdx
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/hdx.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/hdx.json
    source: https://github.com/dividor/hdx-mcp/tree/main
    upstream: https://github.com/dividor/hdx-mcp
    icon: https://raw.githubusercontent.com/dividor/hdx-mcp/main/assets/hdx_mcp_icon_transparent_512.png
    tools:
      - name: affected_people_humanitarian_needs_get
      - name: affected_people_idps_get
      - name: affected_people_refugees_get
      - name: affected_people_returnees_get
      - name: baseline_population_get
      - name: climate_rainfall_get
      - name: coordination_conflict_events_get
      - name: coordination_funding_get
      - name: coordination_national_risk_get
      - name: coordination_operational_presence_get
      - name: food_prices_get
      - name: food_security_get
      - name: hdx_get_dataset_info
      - name: hdx_search_locations
      - name: hdx_server_info
      - name: metadata_admin1_get
      - name: metadata_admin2_get
      - name: metadata_currency_get
      - name: metadata_data_availability_get
      - name: metadata_dataset_get
      - name: metadata_location_get
      - name: metadata_org_get
      - name: metadata_org_type_get
      - name: metadata_resource_get
      - name: metadata_sector_get
      - name: metadata_wfp_commodity_get
      - name: metadata_wfp_market_get
      - name: poverty_rate_get
      - name: util_version_get
    secrets:
      - name: hdx.HDX_APP_IDENTIFIER
        env: HDX_APP_IDENTIFIER
        example: <HDX_APP_IDENTIFIER>
    prompts: 0
    resources: {}
    metadata:
      category: search
      tags:
        - search
      license: MIT License
      owner: dividor
  hostinger-mcp-server:
    description: Interact with Hostinger services over the Hostinger API.
    title: Hostinger API MCP Server
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/api-mcp-server
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/hostinger-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/hostinger-mcp-server.json
    source: https://github.com/hostinger/api-mcp-server/tree/main
    upstream: https://github.com/hostinger/api-mcp-server
    icon: https://avatars.githubusercontent.com/u/2630767?v=4
    tools:
      - name: DNS_deleteDNSRecordsV1
      - name: DNS_getDNSRecordsV1
      - name: DNS_getDNSSnapshotListV1
      - name: DNS_getDNSSnapshotV1
      - name: DNS_resetDNSRecordsV1
      - name: DNS_restoreDNSSnapshotV1
      - name: DNS_updateDNSRecordsV1
      - name: DNS_validateDNSRecordsV1
      - name: VPS_activateFirewallV1
      - name: VPS_attachPublicKeyV1
      - name: VPS_createFirewallRuleV1
      - name: VPS_createNewFirewallV1
      - name: VPS_createNewProjectV1
      - name: VPS_createPTRRecordV1
      - name: VPS_createPostInstallScriptV1
      - name: VPS_createPublicKeyV1
      - name: VPS_createSnapshotV1
      - name: VPS_deactivateFirewallV1
      - name: VPS_deleteFirewallRuleV1
      - name: VPS_deleteFirewallV1
      - name: VPS_deletePTRRecordV1
      - name: VPS_deletePostInstallScriptV1
      - name: VPS_deleteProjectV1
      - name: VPS_deletePublicKeyV1
      - name: VPS_deleteSnapshotV1
      - name: VPS_getActionDetailsV1
      - name: VPS_getActionsV1
      - name: VPS_getAttachedPublicKeysV1
      - name: VPS_getBackupsV1
      - name: VPS_getDataCenterListV1
      - name: VPS_getFirewallDetailsV1
      - name: VPS_getFirewallListV1
      - name: VPS_getMetricsV1
      - name: VPS_getPostInstallScriptV1
      - name: VPS_getPostInstallScriptsV1
      - name: VPS_getProjectContainersV1
      - name: VPS_getProjectContentsV1
      - name: VPS_getProjectListV1
      - name: VPS_getProjectLogsV1
      - name: VPS_getPublicKeysV1
      - name: VPS_getScanMetricsV1
      - name: VPS_getSnapshotV1
      - name: VPS_getTemplateDetailsV1
      - name: VPS_getTemplatesV1
      - name: VPS_getVirtualMachineDetailsV1
      - name: VPS_getVirtualMachinesV1
      - name: VPS_installMonarxV1
      - name: VPS_purchaseNewVirtualMachineV1
      - name: VPS_recreateVirtualMachineV1
      - name: VPS_resetHostnameV1
      - name: VPS_restartProjectV1
      - name: VPS_restartVirtualMachineV1
      - name: VPS_restoreBackupV1
      - name: VPS_restoreSnapshotV1
      - name: VPS_setHostnameV1
      - name: VPS_setNameserversV1
      - name: VPS_setPanelPasswordV1
      - name: VPS_setRootPasswordV1
      - name: VPS_setupPurchasedVirtualMachineV1
      - name: VPS_startProjectV1
      - name: VPS_startRecoveryModeV1
      - name: VPS_startVirtualMachineV1
      - name: VPS_stopProjectV1
      - name: VPS_stopRecoveryModeV1
      - name: VPS_stopVirtualMachineV1
      - name: VPS_syncFirewallV1
      - name: VPS_uninstallMonarxV1
      - name: VPS_updateFirewallRuleV1
      - name: VPS_updatePostInstallScriptV1
      - name: VPS_updateProjectV1
      - name: billing_cancelSubscriptionV1
      - name: billing_createServiceOrderV1
      - name: billing_deletePaymentMethodV1
      - name: billing_getCatalogItemListV1
      - name: billing_getPaymentMethodListV1
      - name: billing_getSubscriptionListV1
      - name: billing_setDefaultPaymentMethodV1
      - name: domains_checkDomainAvailabilityV1
      - name: domains_createDomainForwardingV1
      - name: domains_createWHOISProfileV1
      - name: domains_deleteDomainForwardingV1
      - name: domains_deleteWHOISProfileV1
      - name: domains_disableDomainLockV1
      - name: domains_disablePrivacyProtectionV1
      - name: domains_enableDomainLockV1
      - name: domains_enablePrivacyProtectionV1
      - name: domains_getDomainDetailsV1
      - name: domains_getDomainForwardingV1
      - name: domains_getDomainListV1
      - name: domains_getWHOISProfileListV1
      - name: domains_getWHOISProfileUsageV1
      - name: domains_getWHOISProfileV1
      - name: domains_purchaseNewDomainV1
      - name: domains_updateDomainNameserversV1
    secrets:
      - name: hostinger-mcp-server.api_token
        env: APITOKEN
        example: 0ASvFDoYoloTOoLd6fSRKUx9ihuoejCVbTT6xpmob7adce6d
    prompts: 0
    resources: {}
    metadata:
      githubStars: 32
      category: devops
      tags:
        - devops
      license: MIT License
      owner: hostinger
  hoverfly-mcp-server:
    description: A Model Context Protocol (MCP) server that exposes Hoverfly as a programmable tool for AI assistants like Cursor, Claude, GitHub Copilot, and others supporting MCP. It enables dynamic mocking of third-party APIs to unblock development, automate testing, and simulate unavailable services during integration.
    title: Hoverfly MCP Server
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: kapish88/hoverfly-mcp-server
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/hoverfly-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/hoverfly-mcp-server.json
    source: https://github.com/kapishmalik/hoverfly-mcp-server/tree/main
    upstream: https://github.com/kapishmalik/hoverfly-mcp-server
    icon: https://raw.githubusercontent.com/kapishmalik/hoverfly-mcp-server/main/HoverflyMCPServerDocker.png
    tools:
      - name: add_hoverfly_mock
      - name: clear_hoverfly_mocks
      - name: download_hoverfly_simulation
      - name: fetch_hoverfly_version
      - name: get_hoverfly_debug_logs
      - name: get_hoverfly_documentation
      - name: get_hoverfly_status
      - name: list_hoverfly_mocks
      - name: show_hoverfly_endpoints_info
      - name: start_hoverfly_web_server
      - name: stop_hoverfly_server
      - name: suggest_hoverfly_matchers
    volumes:
      - '{{hoverfly-mcp-server.data}}:/opt/hoverfly-mcp/simulation-data'
    prompts: 0
    resources: {}
    config:
      - name: hoverfly-mcp-server
        description: The MCP server is allowed to access this path for storing simulation files
        type: object
        properties:
          data:
            type: string
        required:
          - data
    metadata:
      githubStars: 6
      category: productivity
      tags:
        - ai
        - service-virtualization
        - http-mocking
        - devtools
      license: Other
      owner: kapishmalik
  hubspot-remote:
    description: CRM.
    title: HubSpot
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/hubspot-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/hubspot-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://app.hubspot.com/mcp/v1/http
    icon: https://www.google.com/s2/favicons?domain=hubspot.com&sz=64
    tools: []
    secrets:
      - name: hubspot-remote.api_key
        env: HUBSPOT_REMOTE_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: crm
      tags:
        - crm
        - marketing
        - sales
        - remote
      license: Apache License 2.0
      owner: docker
  hugging-face-remote:
    description: Software Development.
    title: Hugging Face
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/hugging-face-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/hugging-face-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://hf.co/mcp
    icon: https://www.google.com/s2/favicons?domain=hf.co&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: ai
      tags:
        - ai
        - machine-learning
        - models
        - remote
      license: Apache License 2.0
      owner: docker
  hummingbot-mcp:
    description: Hummingbot MCP is an open-source toolset that lets you control and monitor your Hummingbot trading bots through AI-powered commands and automation.
    title: 'Hummingbot MCP: Trading Agent'
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: hummingbot/hummingbot-mcp
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/hummingbot-mcp.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/hummingbot-mcp.json
    source: https://github.com/hummingbot/mcp/tree/main
    upstream: https://github.com/hummingbot/mcp
    icon: https://avatars.githubusercontent.com/u/88165212?v=4
    tools:
      - name: deploy_bot_with_controllers
      - name: explore_controllers
      - name: get_active_bots_status
      - name: get_candles
      - name: get_funding_rate
      - name: get_order_book
      - name: get_orders
      - name: get_portfolio_balances
      - name: get_positions
      - name: get_prices
      - name: modify_controllers
      - name: place_order
      - name: set_account_position_mode_and_leverage
      - name: setup_connector
      - name: stop_bot_or_controllers
    secrets:
      - name: hummingbot-mcp.username
        env: HUMMINGBOT_API_USERNAME
        example: admin
      - name: hummingbot-mcp.password
        env: HUMMINGBOT_API_PASSWORD
        example: password
    env:
      - name: HUMMINGBOT_API_URL
        value: '{{hummingbot-mcp.api_url}}'
    prompts: 0
    resources: {}
    config:
      - name: hummingbot-mcp
        description: Configure the MCP connection to the Hummingbot API
        type: object
        properties:
          api_url:
            type: string
        required:
          - api_url
    metadata:
      githubStars: 18
      category: finance
      tags:
        - finance
      license: Apache License 2.0
      owner: hummingbot
  husqvarna-automower:
    description: MCP Server for huqsvarna automower.
    title: Husqvarna Automower
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/husqvarna-automower
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/husqvarna-automower.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/husqvarna-automower.json
    source: https://github.com/jeanlaurent/mcp-husqvarna-automower/tree/main
    upstream: https://github.com/jeanlaurent/mcp-husqvarna-automower
    icon: https://avatars.githubusercontent.com/u/17142631?v=4
    tools:
      - name: Husqvarna Automowers Status
    secrets:
      - name: husqvarna.client.secret
        env: HUSQVARNA_CLIENT_SECRET
        example: YOUR_CLIENT_SECRET_HERE
    env:
      - name: HUSQVARNA_CLIENT_ID
        value: '{{husqvarna-automower.client_id}}'
    prompts: 0
    resources: {}
    config:
      - name: husqvarna-automower
        description: Configure the connection to Husqvarna Automower
        type: object
        properties:
          client_id:
            type: string
    metadata:
      githubStars: 1
      category: devops
      tags:
        - husqvarna-automower
        - devops
      owner: jeanlaurent
  hyperbrowser:
    description: A MCP server implementation for hyperbrowser.
    title: Hyperbrowser
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/hyperbrowser
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/hyperbrowser.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/hyperbrowser.json
    source: https://github.com/hyperbrowserai/mcp/tree/main
    upstream: https://github.com/hyperbrowserai/mcp
    icon: https://avatars.githubusercontent.com/u/189776885?s=200&v=4
    tools:
      - name: browser_use_agent
      - name: claude_computer_use_agent
      - name: crawl_webpages
      - name: create_profile
      - name: delete_profile
      - name: extract_structured_data
      - name: list_profiles
      - name: openai_computer_use_agent
      - name: scrape_webpage
      - name: search_with_bing
    secrets:
      - name: hyperbrowser.api_key
        env: HYPERBROWSER_API_KEY
        example: <app or user token>
    prompts: 0
    resources: {}
    metadata:
      githubStars: 599
      category: devops
      tags:
        - hyperbrowser
        - devops
      license: MIT License
      owner: hyperbrowserai
  hyperspell:
    description: Hyperspell MCP Server.
    title: Hyperspell
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/hyperspell
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/hyperspell.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/hyperspell.json
    source: https://github.com/hyperspell/hyperspell-mcp/tree/main
    upstream: https://github.com/hyperspell/hyperspell-mcp
    icon: https://avatars.githubusercontent.com/u/170754924?s=200&v=4
    tools:
      - name: Add File
      - name: Add Memory
      - name: Search Hyperspell
    secrets:
      - name: hyperspell.token
        env: HYPERSPELL_TOKEN
        example: <app or user token>
    env:
      - name: USE_RESOURCES
        value: '{{hyperspell.use_resources}}'
      - name: HYPERSPELL_COLLECTION
        value: '{{hyperspell.collection}}'
    prompts: 0
    resources: {}
    config:
      - name: hyperspell
        description: Configure the connection to Hyperspell
        type: object
        properties:
          collection:
            type: string
          use_resources:
            type: boolean
    metadata:
      githubStars: 1
      category: devops
      tags:
        - hyperspell
        - devops
      owner: hyperspell
  iaptic:
    description: Model Context Protocol server for interacting with iaptic.
    title: Iaptic
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/iaptic
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/iaptic.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/iaptic.json
    source: https://github.com/iaptic/mcp-server-iaptic/tree/main
    upstream: https://github.com/iaptic/mcp-server-iaptic
    icon: https://avatars.githubusercontent.com/u/72789805?s=200&v=4
    tools:
      - name: customer_add_purchase
      - name: customer_get
      - name: customer_list
      - name: customer_subscription
      - name: customer_transactions
      - name: event_list
      - name: iaptic_current_app
      - name: iaptic_reset_app
      - name: iaptic_switch_app
      - name: purchase_get
      - name: purchase_list
      - name: stats_app
      - name: stats_get
      - name: stripe_prices
      - name: transaction_get
      - name: transaction_list
    secrets:
      - name: iaptic.api_key
        env: IAPTIC_API_KEY
        example: your-api-key-here
    env:
      - name: IAPTIC_APP_NAME
        value: '{{iaptic.app_name}}'
    prompts: 0
    resources: {}
    config:
      - name: iaptic
        description: Configure the connection to iaptic
        type: object
        properties:
          app_name:
            type: string
        required:
          - app_name
    metadata:
      githubStars: 4
      category: devops
      tags:
        - iaptic
        - devops
      license: MIT License
      owner: iaptic
  inspektor-gadget:
    description: AI interface to troubleshoot and observe Kubernetes/Container workloads.
    title: Inspektor Gadget
    type: server
    longLived: true
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/inspektor-gadget
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/inspektor-gadget.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/inspektor-gadget.json
    source: https://github.com/inspektor-gadget/ig-mcp-server/tree/main
    upstream: https://github.com/inspektor-gadget/ig-mcp-server
    icon: https://avatars.githubusercontent.com/u/111520143?s=200&v=4
    tools:
      - name: gadget_advise_seccomp
      - name: gadget_audit_seccomp
      - name: gadget_bpfstats
      - name: gadget_deadlock
      - name: gadget_fdpass
      - name: gadget_fsnotify
      - name: gadget_profile_blockio
      - name: gadget_profile_qdisc_latency
      - name: gadget_profile_tcprtt
      - name: gadget_snapshot_process
      - name: gadget_snapshot_socket
      - name: gadget_top_blockio
      - name: gadget_top_file
      - name: gadget_top_tcp
      - name: gadget_trace_bind
      - name: gadget_trace_capabilities
      - name: gadget_trace_dns
      - name: gadget_trace_exec
      - name: gadget_trace_fsslower
      - name: gadget_trace_lsm
      - name: gadget_trace_malloc
      - name: gadget_trace_mount
      - name: gadget_trace_oomkill
      - name: gadget_trace_open
      - name: gadget_trace_signal
      - name: gadget_trace_sni
      - name: gadget_trace_ssl
      - name: gadget_trace_tcp
      - name: gadget_trace_tcpdrop
      - name: gadget_trace_tcpretrans
      - name: gadget_traceloop
      - name: ig_deploy
      - name: ig_gadgets
    command:
      - -gadget-discoverer=artifacthub
      - -gadget-images={{inspektor-gadget.gadget-images}}
    volumes:
      - '{{inspektor-gadget.kubeconfig}}:/kubeconfig'
    prompts: 0
    resources: {}
    config:
      - name: inspektor-gadget
        description: Configuration for the Inspektor Gadget MCP Server
        type: object
        properties:
          kubeconfig:
            type: string
            description: Path to the kubeconfig file for accessing Kubernetes clusters
          gadget-images:
            type: string
            description: Comma-separated list of gadget images (trace_dns, trace_tcp, etc) to use, allowing control over which gadgets are available as MCP tools
        required:
          - kubeconfig
    metadata:
      githubStars: 13
      category: monitoring
      tags:
        - inspektor-gadget
        - kubernetes
        - monitoring
        - ebpf
      license: Apache License 2.0
      owner: inspektor-gadget
  instant-remote:
    description: Software Development.
    title: Instant
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/instant-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/instant-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.instantdb.com/mcp
    icon: https://www.google.com/s2/favicons?domain=instantdb.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: database
      tags:
        - database
        - realtime
        - backend
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: instant-remote
  intercom-remote:
    description: Customer Support.
    title: Intercom
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/intercom-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/intercom-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.intercom.com/sse
    icon: https://www.google.com/s2/favicons?domain=intercom.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: support
      tags:
        - support
        - customer-service
        - messaging
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: intercom-remote
  invideo-remote:
    description: Video Platform.
    title: InVideo
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/invideo-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/invideo-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.invideo.io/sse
    icon: https://www.google.com/s2/favicons?domain=invideo.io&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: media
      tags:
        - media
        - video
        - content-creation
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: invideo-remote
  jam-remote:
    description: Software Development.
    title: Jam
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/jam-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/jam-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.jam.dev/mcp
    icon: https://www.google.com/s2/favicons?domain=jam.dev&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: devops
      tags:
        - devops
        - debugging
        - collaboration
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: jam-remote
  javadocs-remote:
    description: Software Development.
    title: Javadocs
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/javadocs-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/javadocs-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://www.javadocs.dev/mcp
    icon: https://www.google.com/s2/favicons?domain=javadocs.dev&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: documentation
      tags:
        - documentation
        - java
        - api
        - remote
      license: Apache License 2.0
      owner: docker
  jetbrains:
    description: 'A model context protocol server to work with JetBrains IDEs: IntelliJ, PyCharm, WebStorm, etc. Also, works with Android Studio.'
    title: JetBrains
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/jetbrains
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/jetbrains.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/jetbrains.json
    source: https://github.com/GannaChernyshova/mcp-jetbrains/tree/main
    upstream: https://github.com/GannaChernyshova/mcp-jetbrains
    icon: https://avatars.githubusercontent.com/u/878437?s=200&v=4
    tools:
      - name: create_new_file_with_text
      - name: execute_action_by_id
      - name: execute_terminal_command
      - name: find_commit_by_message
      - name: find_files_by_name_substring
      - name: get_all_open_file_paths
      - name: get_all_open_file_texts
      - name: get_debugger_breakpoints
      - name: get_file_text_by_path
      - name: get_open_in_editor_file_path
      - name: get_open_in_editor_file_text
      - name: get_progress_indicators
      - name: get_project_dependencies
      - name: get_project_modules
      - name: get_project_vcs_status
      - name: get_run_configurations
      - name: get_selected_in_editor_text
      - name: get_terminal_text
      - name: list_available_actions
      - name: list_directory_tree_in_folder
      - name: list_files_in_folder
      - name: open_file_in_editor
      - name: replace_current_file_text
      - name: replace_file_text_by_path
      - name: replace_selected_text
      - name: replace_specific_text
      - name: run_configuration
      - name: search_in_files_content
      - name: toggle_debugger_breakpoint
      - name: wait
    env:
      - name: IDE_PORT
        value: '{{jetbrains.port}}'
    prompts: 0
    resources: {}
    config:
      - name: jetbrains
        description: Configure the connection to the IDE
        type: object
        properties:
          port:
            type: integer
    metadata:
      githubStars: 3
      category: devops
      tags:
        - jetbrains
        - devops
      license: Apache License 2.0
      owner: GannaChernyshova
  kagisearch:
    description: The Official Model Context Protocol (MCP) server for Kagi search & other tools.
    title: Kagi search
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/kagisearch
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/kagisearch.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/kagisearch.json
    source: https://github.com/kagisearch/kagimcp/tree/main
    upstream: https://github.com/kagisearch/kagimcp
    icon: https://avatars.githubusercontent.com/u/92134518?s=200&v=4
    tools:
      - name: kagi_search_fetch
      - name: kagi_summarizer
    secrets:
      - name: kagisearch.api_key
        env: KAGI_API_KEY
        example: YOUR_API_KEY_HERE
    env:
      - name: KAGI_SUMMARIZER_ENGINE
        value: '{{kagisearch.engine}}'
    prompts: 0
    resources: {}
    config:
      - name: kagisearch
        description: Configure the connection to Kagi search
        type: object
        properties:
          engine:
            type: string
    metadata:
      githubStars: 174
      category: devops
      tags:
        - kagisearch
        - devops
      license: MIT License
      owner: kagisearch
  keboola-mcp:
    description: Keboola MCP Server is an open-source bridge between your Keboola project and modern AI tools.
    title: Keboola MCP Server
    type: server
    dateAdded: "2025-06-16T10:10:08Z"
    image: mcp/keboola-mcp
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/keboola-mcp.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/keboola-mcp.json
    source: https://github.com/keboola/mcp-server/tree/main
    upstream: https://github.com/keboola/mcp-server
    icon: https://avatars.githubusercontent.com/u/1424387?v=4
    tools:
      - name: add_config_row
      - name: create_config
      - name: create_flow
      - name: create_oauth_url
      - name: create_sql_transformation
      - name: docs_query
      - name: find_component_id
      - name: get_bucket
      - name: get_component
      - name: get_config
      - name: get_config_examples
      - name: get_flow
      - name: get_flow_schema
      - name: get_job
      - name: get_project_info
      - name: get_sql_dialect
      - name: get_table
      - name: list_buckets
      - name: list_configs
      - name: list_flows
      - name: list_jobs
      - name: list_tables
      - name: list_transformations
      - name: query_data
      - name: run_job
      - name: search
      - name: update_bucket_description
      - name: update_column_description
      - name: update_config
      - name: update_config_row
      - name: update_flow
      - name: update_sql_transformation
      - name: update_table_description
    secrets:
      - name: server.kbc_storage_token
        env: KBC_STORAGE_TOKEN
        example: your_keboola_storage_token
    env:
      - name: KBC_WORKSPACE_SCHEMA
        value: '{{keboola-mcp.kbc_workspace_schema}}'
    prompts: 0
    resources: {}
    config:
      - name: keboola-mcp
        description: Configure the connection to your Keboola project
        type: object
        properties:
          kbc_workspace_schema:
            type: string
    metadata:
      githubStars: 68
      category: devops
      tags:
        - data-platform
        - etl-pipeline
        - storage
      license: MIT License
      owner: keboola
  kollektiv-remote:
    description: Documentation.
    title: Kollektiv
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/kollektiv-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/kollektiv-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.thekollektiv.ai/sse
    icon: https://www.google.com/s2/favicons?domain=thekollektiv.ai&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: documentation
      tags:
        - documentation
        - knowledge-base
        - ai
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: kollektiv-remote
  kong:
    description: A Model Context Protocol (MCP) server for interacting with Kong Konnect APIs, allowing AI assistants to query and analyze Kong Gateway configurations, traffic, and analytics.
    title: Kong Konnect
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/kong
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/kong.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/kong.json
    source: https://github.com/Kong/mcp-konnect/tree/refs/pull/7/merge
    upstream: https://github.com/Kong/mcp-konnect
    icon: https://avatars.githubusercontent.com/u/962416?s=200&v=4
    tools:
      - name: check_control_plane_group_membership
      - name: get_consumer_requests
      - name: get_control_plane
      - name: list_consumers
      - name: list_control_plane_group_memberships
      - name: list_control_planes
      - name: list_plugins
      - name: list_routes
      - name: list_services
      - name: query_api_requests
    secrets:
      - name: kong.access_token
        env: KONNECT_ACCESS_TOKEN
        example: kpat_api_key_here
    env:
      - name: KONNECT_REGION
        value: '{{kong.region}}'
    prompts: 0
    resources: {}
    config:
      - name: kong
        description: Configure the connection to Kong Konnect
        type: object
        properties:
          region:
            type: string
    metadata:
      githubStars: 33
      category: devops
      tags:
        - kong
        - devops
        - service-mesh
      license: Apache License 2.0
      owner: Kong
  kubernetes:
    description: Connect to a Kubernetes cluster and manage it.
    title: Kubernetes
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/kubernetes
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/kubernetes.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/kubernetes.json
    source: https://github.com/Flux159/mcp-server-kubernetes/tree/main
    upstream: https://github.com/Flux159/mcp-server-kubernetes
    icon: https://avatars.githubusercontent.com/u/13629408?s=200&v=4
    tools:
      - name: cleanup
      - name: exec_in_pod
      - name: explain_resource
      - name: install_helm_chart
      - name: kubectl_apply
      - name: kubectl_context
      - name: kubectl_create
      - name: kubectl_delete
      - name: kubectl_describe
      - name: kubectl_generic
      - name: kubectl_get
      - name: kubectl_logs
      - name: kubectl_patch
      - name: kubectl_rollout
      - name: kubectl_scale
      - name: list_api_resources
      - name: node_management
      - name: ping
      - name: port_forward
      - name: stop_port_forward
      - name: uninstall_helm_chart
      - name: upgrade_helm_chart
    prompts: 0
    resources: {}
    metadata:
      githubStars: 1037
      category: devops
      tags:
        - kubernetes
        - devops
      license: MIT License
      owner: Flux159
  lara:
    description: Connect to Lara Translate API, enabling powerful translation capabilities with support for language detection and context-aware translations.
    title: Lara Translate
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/lara
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/lara.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/lara.json
    source: https://github.com/translated/lara-mcp/tree/main
    upstream: https://github.com/translated/lara-mcp
    icon: https://avatars.githubusercontent.com/u/10272138?s=200&v=4
    tools:
      - name: add_translation
      - name: check_import_status
      - name: create_memory
      - name: delete_memory
      - name: delete_translation
      - name: import_tmx
      - name: list_languages
      - name: list_memories
      - name: translate
      - name: update_memory
    secrets:
      - name: lara.key_secret
        env: LARA_ACCESS_KEY_SECRET
        example: YOUR_LARA_ACCESS_KEY_SECRET
    env:
      - name: LARA_ACCESS_KEY_ID
        value: '{{lara.key_id}}'
    prompts: 0
    resources: {}
    config:
      - name: lara
        description: Configure the connection to Lara Translate
        type: object
        properties:
          key_id:
            type: string
        required:
          - key_id
    metadata:
      githubStars: 68
      category: devops
      tags:
        - lara
        - devops
      license: MIT License
      owner: translated
  line:
    description: MCP server that integrates the LINE Messaging API to connect an AI Agent to the LINE Official Account.
    title: LINE
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/line
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/line.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/line.json
    source: https://github.com/line/line-bot-mcp-server/tree/main
    upstream: https://github.com/line/line-bot-mcp-server
    icon: https://avatars.githubusercontent.com/u/13128444?v=4
    tools:
      - name: broadcast_flex_message
      - name: broadcast_text_message
      - name: cancel_rich_menu_default
      - name: delete_rich_menu
      - name: get_message_quota
      - name: get_profile
      - name: get_rich_menu_list
      - name: push_flex_message
      - name: push_text_message
      - name: set_rich_menu_default
    secrets:
      - name: line.access_token
        env: CHANNEL_ACCESS_TOKEN
        example: FILL_HERE
    env:
      - name: DESTINATION_USER_ID
        value: '{{line.user_id}}'
    prompts: 0
    resources: {}
    config:
      - name: line
        description: Configure the connection to LINE
        type: object
        properties:
          user_id:
            type: string
        required:
          - user_id
    metadata:
      githubStars: 445
      category: devops
      tags:
        - line
        - devops
      license: Apache License 2.0
      owner: line
  linear-remote:
    description: Project Management.
    title: Linear
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/linear-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/linear-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.linear.app/sse
    icon: https://www.google.com/s2/favicons?domain=linear.app&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: productivity
      tags:
        - productivity
        - project-management
        - issue-tracking
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: linear-remote
  linkedin-mcp-server:
    description: This MCP server allows Claude and other AI assistants to access your LinkedIn. Scrape LinkedIn profiles and companies, get your recommended jobs, and perform job searches. Set your li_at LinkedIn cookie to use this server.
    title: LinkedIn MCP Server
    type: server
    dateAdded: "2025-09-04T18:21:22Z"
    image: stickerdaniel/linkedin-mcp-server:1.4.0
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/linkedin-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/linkedin-mcp-server.json
    source: https://github.com/stickerdaniel/linkedin-mcp-server/tree/main
    upstream: https://github.com/stickerdaniel/linkedin-mcp-server
    icon: https://raw.githubusercontent.com/stickerdaniel/linkedin-mcp-server/main/assets/icons/linkedin.svg
    tools:
      - name: close_session
      - name: get_company_profile
      - name: get_job_details
      - name: get_person_profile
      - name: get_recommended_jobs
      - name: search_jobs
    secrets:
      - name: linkedin-mcp-server.cookie
        env: LINKEDIN_COOKIE
        example: AQETADxR7bsCqpZlAAACm-lNHKAAA...
    env:
      - name: USER_AGENT
        value: '{{linkedin-mcp-server.user_agent}}'
    prompts: 0
    resources: {}
    config:
      - name: linkedin-mcp-server
        description: Configure LinkedIn authentication and optional user agent
        type: object
        properties:
          user_agent:
            type: string
            description: Custom user agent string (optional, helps avoid detection and cookie login issues)
    metadata:
      githubStars: 342
      category: business
      tags:
        - linkedin
        - business
        - scraping
        - profiles
        - jobs
        - networking
      license: Apache License 2.0
      owner: stickerdaniel
  listenetic-remote:
    description: Productivity.
    title: Listenetic
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/listenetic-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/listenetic-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.listenetic.com/v1/mcp
    icon: https://www.google.com/s2/favicons?domain=listenetic.ai&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: productivity
      tags:
        - productivity
        - audio
        - transcription
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: listenetic-remote
  llmtxt-remote:
    description: Data Analysis.
    title: LLM Text
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/llmtxt-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/llmtxt-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.llmtxt.dev/sse
    icon: https://www.google.com/s2/favicons?domain=llmtxt.dev&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: ai
      tags:
        - ai
        - llm
        - text-processing
        - remote
      license: Apache License 2.0
      owner: docker
  manifold-remote:
    description: Forecasting.
    title: Manifold
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/manifold-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/manifold-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://api.manifold.markets/v0/mcp
    icon: https://www.google.com/s2/favicons?domain=manifold.markets&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: analytics
      tags:
        - analytics
        - forecasting
        - prediction-markets
        - remote
      license: Apache License 2.0
      owner: docker
  mapbox:
    description: Transform any AI agent into a geospatially-aware system with Mapbox APIs. Provides geocoding, POI search, routing, travel time matrices, isochrones, and static map generation.
    title: Mapbox MCP Server
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/mapbox
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/mapbox.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/mapbox.json
    source: https://github.com/mapbox/mcp-server/tree/main
    upstream: https://github.com/mapbox/mcp-server
    icon: https://avatars.githubusercontent.com/u/600935?s=200&v=4
    tools:
      - name: category_search_tool
      - name: directions_tool
      - name: forward_geocode_tool
      - name: isochrone_tool
      - name: matrix_tool
      - name: poi_search_tool
      - name: reverse_geocode_tool
      - name: static_map_image_tool
      - name: version_tool
    secrets:
      - name: mapbox.access_token
        env: MAPBOX_ACCESS_TOKEN
        example: YOUR_API_KEY_HERE
    prompts: 0
    resources: {}
    metadata:
      githubStars: 249
      category: maps
      tags:
        - mapbox
        - maps
        - geospatial
        - navigation
        - geocoding
      license: BSD 3-Clause "New" or "Revised" License
      owner: mapbox
  mapbox-devkit:
    description: Direct access to Mapbox developer APIs for AI assistants. Enables style management, token management, GeoJSON preview, and other developer tools for building Mapbox applications.
    title: Mapbox Developer MCP Server
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/mapbox-devkit
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/mapbox-devkit.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/mapbox-devkit.json
    source: https://github.com/mapbox/mcp-devkit-server/tree/main
    upstream: https://github.com/mapbox/mcp-devkit-server
    icon: https://avatars.githubusercontent.com/u/600935?s=200&v=4
    tools:
      - name: bounding_box_tool
      - name: coordinate_conversion_tool
      - name: country_bounding_box_tool
      - name: create_style_tool
      - name: create_token_tool
      - name: delete_style_tool
      - name: geojson_preview_tool
      - name: list_styles_tool
      - name: list_tokens_tool
      - name: preview_style_tool
      - name: retrieve_style_tool
      - name: style_comparison_tool
      - name: tilequery_tool
      - name: update_style_tool
    secrets:
      - name: mapbox-devkit.access_token
        env: MAPBOX_ACCESS_TOKEN
        example: YOUR_API_KEY_HERE
    prompts: 0
    resources: {}
    metadata:
      githubStars: 9
      category: devops
      tags:
        - mapbox
        - development
        - devtools
        - api
        - styles
      license: BSD 3-Clause "New" or "Revised" License
      owner: mapbox
  markitdown:
    description: A lightweight MCP server for calling MarkItDown.
    title: Markitdown
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/markitdown
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/markitdown.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/markitdown.json
    source: https://github.com/microsoft/markitdown/tree/main/packages/markitdown-mcp
    upstream: https://github.com/microsoft/markitdown
    icon: https://avatars.githubusercontent.com/u/6154722?v=4
    tools:
      - name: convert_to_markdown
    volumes:
      - '{{markitdown.paths|volume|into}}'
    prompts: 0
    resources: {}
    config:
      - name: markitdown
        description: The MCP server is allowed to access these paths
        type: object
        properties:
          paths:
            type: array
            items:
              type: string
        required:
          - paths
    metadata:
      githubStars: 72846
      category: productivity
      tags:
        - productivity
        - markdown
        - conversion
        - pdf
        - docx
        - pptx
        - xlsx
        - html
        - audio
        - youtube
      license: MIT License
      owner: microsoft
  mcp-api-gateway:
    description: A universal MCP (Model Context Protocol) server to integrate any API with Claude Desktop using only Docker configurations.
    title: Api-gateway
    type: server
    dateAdded: "2025-06-11T14:21:25Z"
    image: mcp/api-gateway
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/mcp-api-gateway.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/mcp-api-gateway.json
    source: https://github.com/rflpazini/mcp-api-gateway/tree/main
    upstream: https://github.com/rflpazini/mcp-api-gateway
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: execute_api
      - name: get_api_info
    env:
      - name: API_1_NAME
        value: '{{mcp-api-gateway.api_1_name}}'
      - name: API_1_SWAGGER_URL
        value: '{{mcp-api-gateway.api_1_swagger_url}}'
      - name: API_1_HEADER_AUTHORIZATION
        value: '{{mcp-api-gateway.api_1_header_authorization}}'
    prompts: 0
    resources: {}
    config:
      - name: mcp-api-gateway
        description: Configure the connection to mcp-api-gateway
        type: object
        properties:
          api_1_name:
            type: string
          api_1_swagger_url:
            type: string
          api_1_header_authorization:
            type: string
    metadata:
      githubStars: 19
      category: devops
      tags:
        - api-gateway
        - devops
      owner: rflpazini
  mcp-discord:
    description: Interact with the Discord platform.
    title: Discord
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/mcp-discord
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/mcp-discord.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/mcp-discord.json
    source: https://github.com/slimslenderslacks/mcp-discord/tree/slim/docker
    upstream: https://github.com/slimslenderslacks/mcp-discord
    icon: https://avatars.githubusercontent.com/u/1965106?s=200&v=4
    tools:
      - name: discord_add_multiple_reactions
      - name: discord_add_reaction
      - name: discord_create_forum_post
      - name: discord_create_text_channel
      - name: discord_create_webhook
      - name: discord_delete_channel
      - name: discord_delete_forum_post
      - name: discord_delete_message
      - name: discord_delete_webhook
      - name: discord_edit_webhook
      - name: discord_get_forum_channels
      - name: discord_get_forum_post
      - name: discord_get_server_info
      - name: discord_login
      - name: discord_read_messages
      - name: discord_remove_reaction
      - name: discord_reply_to_forum
      - name: discord_send
      - name: discord_send_webhook_message
      - name: test
    secrets:
      - name: discord.token
        env: DISCORD_TOKEN
        example: YOUR_DISCORD_TOKEN
    prompts: 0
    resources: {}
    metadata:
      githubStars: 5
      category: devops
      tags:
        - discord
        - devops
      license: MIT License
      owner: slimslenderslacks
  memory:
    description: Knowledge graph-based persistent memory system.
    title: Memory (Reference)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/memory
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/memory.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/memory.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24/src/memory
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/knowledgebase.svg
    tools:
      - name: add_observations
      - name: create_entities
      - name: create_relations
      - name: delete_entities
      - name: delete_observations
      - name: delete_relations
      - name: open_nodes
      - name: read_graph
      - name: search_nodes
    volumes:
      - claude-memory:/app/dist
    prompts: 0
    resources: {}
    metadata:
      githubStars: 66823
      category: ai
      tags:
        - mcp
        - ai
      license: MIT License
      owner: modelcontextprotocol
  mercado-libre-remote:
    description: E-Commerce.
    title: Mercado Libre
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/mercado-libre-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/mercado-libre-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.mercadolibre.com
    icon: https://www.google.com/s2/favicons?domain=mercadolibre.com&sz=64
    tools: []
    secrets:
      - name: mercado-libre-remote.api_key
        env: MERCADO_LIBRE_REMOTE_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: commerce
      tags:
        - commerce
        - marketplace
        - latin-america
        - remote
      license: Apache License 2.0
      owner: docker
  mercado-pago-remote:
    description: Payments.
    title: Mercado Pago
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/mercado-pago-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/mercado-pago-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.mercadopago.com
    icon: https://www.google.com/s2/favicons?domain=mercadopago.com&sz=64
    tools: []
    secrets:
      - name: mercado-pago-remote.api_key
        env: MERCADO_PAGO_REMOTE_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: payments
      tags:
        - payments
        - finance
        - latin-america
        - remote
      license: Apache License 2.0
      owner: docker
  meta-ads-remote:
    description: Advertising.
    title: Meta Ads by Pipeboard
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/meta-ads-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/meta-ads-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.pipeboard.co/sse
    icon: https://www.google.com/s2/favicons?domain=pipeboard.co&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: marketing
      tags:
        - marketing
        - advertising
        - meta
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: meta-ads-remote
  metabase:
    description: A comprehensive MCP server for Metabase with 70+ tools.
    title: Metabase MCP
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/metabase
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/metabase.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/metabase.json
    source: https://github.com/easecloudio/mcp-metabase-server/tree/v1.0.2
    upstream: https://github.com/easecloudio/mcp-metabase-server
    icon: https://avatars.githubusercontent.com/u/10520629?s=48&v=4
    tools:
      - name: add_card_to_dashboard
      - name: create_card
      - name: create_collection
      - name: create_dashboard
      - name: create_database_connection
      - name: create_permission_group
      - name: create_user
      - name: delete_card
      - name: delete_dashboard
      - name: execute_card
      - name: execute_query
      - name: get_dashboard_cards
      - name: get_database_schema
      - name: get_database_sync_status
      - name: get_database_tables
      - name: list_cards
      - name: list_collections
      - name: list_dashboards
      - name: list_databases
      - name: list_permission_groups
      - name: list_users
      - name: remove_card_from_dashboard
      - name: search_content
      - name: sync_database_schema
      - name: test_database_connection
      - name: update_card
      - name: update_dashboard
      - name: update_dashboard_card
    secrets:
      - name: metabase.MetaBase API Key
        env: METABASE_API_KEY
        example: metabase api key
      - name: metabase.MetaBase Password
        env: METABASE_PASSWORD
        example: yourpassword
    env:
      - name: METABASE_URL
        value: '{{metabase.metabase_url}}'
      - name: METABASE_USERNAME
        value: '{{metabase.metabase_username}}'
    prompts: 0
    resources: {}
    config:
      - name: metabase
        description: Configure the connection to MetaBase MCP
        type: object
        properties:
          metabaseurl:
            type: string
          metabaseusername:
            type: string
    metadata:
      githubStars: 2
      category: data-visualization
      tags:
        - data-visualization
      license: MIT License
      owner: easecloudio
  minecraft-wiki:
    description: A MCP Server for browsing the official Minecraft Wiki!.
    title: Minecraft Wiki
    type: server
    dateAdded: "2025-06-05T06:09:26Z"
    image: mcp/minecraft-wiki
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/minecraft-wiki.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/minecraft-wiki.json
    source: https://github.com/L3-N0X/Minecraft-Wiki-MCP/tree/main
    upstream: https://github.com/L3-N0X/Minecraft-Wiki-MCP
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/minecraft.svg
    tools:
      - name: MinecraftWiki_getCategoriesForPage
      - name: MinecraftWiki_getPageContent
      - name: MinecraftWiki_getPageSection
      - name: MinecraftWiki_getPageSummary
      - name: MinecraftWiki_getSectionsInPage
      - name: MinecraftWiki_listAllCategories
      - name: MinecraftWiki_listCategoryMembers
      - name: MinecraftWiki_resolveRedirect
      - name: MinecraftWiki_searchWiki
    prompts: 0
    resources: {}
    metadata:
      githubStars: 5
      category: games
      tags:
        - games
        - minecraft
        - search
      owner: L3-N0X
  monday-remote:
    description: Productivity.
    title: monday.com
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/monday-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/monday-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.monday.com/sse
    icon: https://www.google.com/s2/favicons?domain=monday.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: productivity
      tags:
        - productivity
        - project-management
        - workflow
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: monday-remote
  multiversx-mx:
    description: MCP Server for MultiversX.
    title: MultiversX
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/multiversx-mx
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/multiversx-mx.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/multiversx-mx.json
    source: https://github.com/multiversx/mx-mcp/tree/main
    upstream: https://github.com/multiversx/mx-mcp
    icon: https://avatars.githubusercontent.com/u/114073177?s=200&v=4
    tools:
      - name: create-sft-nft-mesdt-tokens
      - name: create-wallet
      - name: get-balance-of-address
      - name: get-network
      - name: get-tokens-of-address
      - name: get-wallet-address
      - name: issue-fungible-token
      - name: issue-meta-esdt-collection
      - name: issue-nft-collection
      - name: issue-semi-fungible-collection
      - name: send-egld
      - name: send-egld-to-multiple-receivers
      - name: send-fungible-tokens
      - name: send-sft-nft-meta-tokens
    env:
      - name: MVX_NETWORK
        value: '{{multiversx-mx.network}}'
      - name: MVX_WALLET
        value: '{{multiversx-mx.wallet}}'
    prompts: 0
    resources: {}
    config:
      - name: multiversx-mx
        description: Configure the connection to MultiversX blockchain
        type: object
        properties:
          network:
            type: string
          wallet:
            type: string
        required:
          - network
          - wallet
    metadata:
      category: devops
      tags:
        - multiversx-mx
        - devops
      license: Other
      owner: multiversx
  nasdaq-data-link:
    description: MCP server to interact with the data feeds provided by the Nasdaq Data Link. Developed by the community and maintained by Stefano Amorelli.
    title: Nasdaq Data Link
    type: server
    dateAdded: "2025-07-01T14:14:18Z"
    image: mcp/nasdaq-data-link
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/nasdaq-data-link.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/nasdaq-data-link.json
    source: https://github.com/stefanoamorelli/nasdaq-data-link-mcp/tree/main
    upstream: https://github.com/stefanoamorelli/nasdaq-data-link-mcp
    icon: https://raw.githubusercontent.com/stefanoamorelli/nasdaq-data-link-mcp/refs/heads/main/nasdaq-mcp-server-logo.png
    tools:
      - name: country_code
      - name: get_balance_sheet_data
      - name: get_cash_flow_data
      - name: get_company_reference_data
      - name: get_corporate_action_data
      - name: get_detailed_financials
      - name: get_fees_and_expenses
      - name: get_fund_information
      - name: get_fund_master_report
      - name: get_fundamental_data
      - name: get_indicator_value
      - name: get_monthly_flows
      - name: get_performance_analytics
      - name: get_performance_benchmark
      - name: get_performance_statistics
      - name: get_price_history
      - name: get_recent_price_history
      - name: get_rtat
      - name: get_rtat10
      - name: get_share_class_information
      - name: get_share_class_master
      - name: get_stock_stats
      - name: get_trade_summary_data
      - name: list_balance_sheet_fields
      - name: list_cash_flow_fields
      - name: list_corporate_action_fields
      - name: list_detailed_financial_fields
      - name: list_fundamental_fields
      - name: list_reference_data_fields
      - name: list_stock_stat_fields
      - name: list_worldbank_indicators
      - name: search_worldbank_indicators
    secrets:
      - name: nasdaq_data_link_api_key
        env: NASDAQ_DATA_LINK_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      githubStars: 38
      category: finance
      tags:
        - nasdaq
        - finance
        - data
        - intelligence
      license: MIT License
      owner: stefanoamorelli
  needle-mcp:
    description: Production-ready RAG service to search and retrieve data from your documents.
    title: Needle
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/needle-mcp
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/needle-mcp.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/needle-mcp.json
    source: https://github.com/needle-ai/needle-mcp/tree/main
    upstream: https://github.com/needle-ai/needle-mcp
    icon: https://avatars.githubusercontent.com/u/194782563?s=200&v=4
    tools:
      - name: needle_add_file
      - name: needle_create_collection
      - name: needle_get_collection_details
      - name: needle_get_collection_stats
      - name: needle_list_collections
      - name: needle_list_files
      - name: needle_search
    secrets:
      - name: needle-mcp.api_key
        env: NEEDLE_API_KEY
        example: your-needle-api-key-here
    prompts: 0
    resources: {}
    metadata:
      githubStars: 79
      category: search
      tags:
        - needle
        - search
        - productivity
        - rag
        - semantic-search
        - document-management
      license: MIT License
      owner: needle-ai
  needle-remote:
    description: RAG-as-a-service.
    title: Needle
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/needle-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/needle-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.needle-ai.com
    icon: https://www.google.com/s2/favicons?domain=needle-ai.com&sz=64
    tools: []
    secrets:
      - name: needle-remote.api_key
        env: NEEDLE_REMOTE_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: ai
      tags:
        - ai
        - rag
        - knowledge-base
        - remote
      license: Apache License 2.0
      owner: docker
  neo4j-cloud-aura-api:
    description: Manage Neo4j Aura database instances through the Neo4j Aura API.
    title: Neo4j Cloud Aura Api
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/neo4j-cloud-aura-api
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/neo4j-cloud-aura-api.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/neo4j-cloud-aura-api.json
    source: https://github.com/neo4j-contrib/mcp-neo4j/tree/main/servers/mcp-neo4j-cloud-aura-api
    upstream: https://github.com/neo4j-contrib/mcp-neo4j
    icon: https://avatars.githubusercontent.com/u/916372?s=200&v=4
    tools:
      - name: create_instance
      - name: delete_instance
      - name: get_instance_by_name
      - name: get_instance_details
      - name: get_tenant_details
      - name: list_instances
      - name: list_tenants
      - name: pause_instance
      - name: resume_instance
      - name: update_instance_memory
      - name: update_instance_name
      - name: update_instance_vector_optimization
    secrets:
      - name: neo4j.password
        env: NEO4J_AURA_CLIENT_SECRET
        example: <your-client-secret>
    env:
      - name: NEO4J_AURA_CLIENT_ID
        value: '{{neo4j-cloud-aura-api.client_id}}'
    prompts: 0
    resources: {}
    config:
      - name: neo4j-cloud-aura-api
        description: Configure the connection to Neo4j Aura
        type: object
        properties:
          client_id:
            type: string
        required:
          - client_id
    metadata:
      githubStars: 666
      category: devops
      tags:
        - neo4j-cloud-aura-api
        - devops
      license: MIT License
      owner: neo4j-contrib
  neo4j-cypher:
    description: Interact with Neo4j using Cypher graph queries.
    title: Neo4j Cypher
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/neo4j-cypher
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/neo4j-cypher.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/neo4j-cypher.json
    source: https://github.com/neo4j-contrib/mcp-neo4j/tree/main/servers/mcp-neo4j-cypher
    upstream: https://github.com/neo4j-contrib/mcp-neo4j
    icon: https://avatars.githubusercontent.com/u/916372?s=200&v=4
    tools:
      - name: get_neo4j_schema
      - name: read_neo4j_cypher
      - name: write_neo4j_cypher
    secrets:
      - name: neo4j.password
        env: NEO4J_PASSWORD
        example: password
    env:
      - name: NEO4J_URL
        value: '{{neo4j-cypher.url}}'
      - name: NEO4J_USERNAME
        value: '{{neo4j-cypher.username}}'
    prompts: 0
    resources: {}
    config:
      - name: neo4j-cypher
        description: Configure the connection to Neo4j
        type: object
        properties:
          url:
            type: string
          username:
            type: string
        required:
          - url
          - username
    metadata:
      githubStars: 666
      category: devops
      tags:
        - neo4j-cypher
        - devops
      license: MIT License
      owner: neo4j-contrib
  neo4j-memory:
    description: Provide persistent memory capabilities through Neo4j graph database integration.
    title: Neo4j Memory
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/neo4j-memory
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/neo4j-memory.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/neo4j-memory.json
    source: https://github.com/neo4j-contrib/mcp-neo4j/tree/main/servers/mcp-neo4j-memory
    upstream: https://github.com/neo4j-contrib/mcp-neo4j
    icon: https://avatars.githubusercontent.com/u/916372?s=200&v=4
    tools:
      - name: add_observations
      - name: create_entities
      - name: create_relations
      - name: delete_entities
      - name: delete_observations
      - name: delete_relations
      - name: find_memories_by_name
      - name: read_graph
      - name: search_memories
    secrets:
      - name: neo4j.password
        env: NEO4J_PASSWORD
        example: password
    env:
      - name: NEO4J_URL
        value: '{{neo4j-memory.url}}'
      - name: NEO4J_USERNAME
        value: '{{neo4j-memory.username}}'
    prompts: 0
    resources: {}
    config:
      - name: neo4j-memory
        description: Configure the connection to Neo4j
        type: object
        properties:
          url:
            type: string
          username:
            type: string
        required:
          - url
          - username
    metadata:
      githubStars: 666
      category: devops
      tags:
        - neo4j-memory
        - devops
      license: MIT License
      owner: neo4j-contrib
  neon-remote:
    description: Software Development.
    title: Neon
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/neon-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/neon-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.neon.tech/sse
    icon: https://www.google.com/s2/favicons?domain=neon.tech&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: database
      tags:
        - database
        - postgres
        - serverless
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: neon-remote
  netlify-remote:
    description: Software Development.
    title: Netlify
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/netlify-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/netlify-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.netlify.com/sse
    icon: https://www.google.com/s2/favicons?domain=netlify.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: devops
      tags:
        - devops
        - hosting
        - deployment
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: netlify-remote
  node-code-sandbox:
    description: A Node.js–based Model Context Protocol server that spins up disposable Docker containers to execute arbitrary JavaScript.
    title: Node.js Sandbox
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/node-code-sandbox
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/node-code-sandbox.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/node-code-sandbox.json
    source: https://github.com/alfonsograziano/node-code-sandbox-mcp/tree/master
    upstream: https://github.com/alfonsograziano/node-code-sandbox-mcp
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/nodedotjs.svg
    tools:
      - name: get_dependency_types
      - name: run_js
      - name: run_js_ephemeral
      - name: sandbox_exec
      - name: sandbox_initialize
      - name: sandbox_stop
      - name: search_npm_packages
    prompts: 0
    resources: {}
    metadata:
      githubStars: 92
      category: devops
      tags:
        - node-code-sandbox
        - devops
      owner: alfonsograziano
  notion-remote:
    description: Project Management.
    title: Notion
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/notion-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/notion-remote.json
    source: ""
    remote:
      transport_type: streaming
      url: https://mcp.notion.com/mcp
    icon: https://www.google.com/s2/favicons?domain=notion.so&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: productivity
      tags:
        - productivity
        - documentation
        - collaboration
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: notion-remote
  novita:
    description: Seamless interaction with Novita AI platform resources.
    title: Novita
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/novita
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/novita.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/novita.json
    source: https://github.com/novitalabs/novita-mcp-server/tree/main
    upstream: https://github.com/novitalabs/novita-mcp-server
    icon: https://avatars.githubusercontent.com/u/145963681?v=4
    tools:
      - name: create-container-registry-auth
      - name: create-gpu-instance
      - name: create-network-storage
      - name: create-template
      - name: delete-container-registry-auth
      - name: delete-gpu-instance
      - name: delete-network-storage
      - name: delete-template
      - name: get-gpu-instance
      - name: get-template
      - name: list-clusters
      - name: list-container-registry-auths
      - name: list-gpu-instances
      - name: list-network-storage
      - name: list-products
      - name: list-templates
      - name: restart-gpu-instance
      - name: start-gpu-instance
      - name: stop-gpu-instance
      - name: update-network-storage
    env:
      - name: NOVITA_API_KEY
        value: ""
    prompts: 0
    resources: {}
    metadata:
      githubStars: 12
      category: ai
      tags:
        - novita
        - ai
      license: MIT License
      owner: novitalabs
  npm-sentinel:
    description: MCP server that enables intelligent NPM package analysis powered by AI.
    title: NPM Sentinel
    type: server
    dateAdded: "2025-07-01T14:14:18Z"
    image: mcp/npm-sentinel
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/npm-sentinel.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/npm-sentinel.json
    source: https://github.com/Nekzus/npm-sentinel-mcp/tree/main
    upstream: https://github.com/Nekzus/npm-sentinel-mcp
    icon: https://avatars.githubusercontent.com/u/85507589?v=4
    tools:
      - name: npmAlternatives
      - name: npmChangelogAnalysis
      - name: npmCompare
      - name: npmDeprecated
      - name: npmDeps
      - name: npmLatest
      - name: npmLicenseCompatibility
      - name: npmMaintainers
      - name: npmMaintenance
      - name: npmPackageReadme
      - name: npmQuality
      - name: npmRepoStats
      - name: npmScore
      - name: npmSearch
      - name: npmSize
      - name: npmTrends
      - name: npmTypes
      - name: npmVersions
      - name: npmVulnerabilities
    prompts: 0
    resources: {}
    metadata:
      githubStars: 7
      category: devops
      tags:
        - npm
        - npm-package
      license: MIT License
      owner: Nekzus
  obsidian:
    description: MCP server that interacts with Obsidian via the Obsidian rest API community plugin.
    title: Obsidian
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/obsidian
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/obsidian.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/obsidian.json
    source: https://github.com/docker/mcp-obsidian/tree/docker-support
    upstream: https://github.com/MarkusPfundstein/mcp-obsidian
    icon: https://avatars.githubusercontent.com/u/65011256?s=200&v=4
    tools:
      - name: obsidian_append_content
      - name: obsidian_batch_get_file_contents
      - name: obsidian_complex_search
      - name: obsidian_delete_file
      - name: obsidian_get_file_contents
      - name: obsidian_get_periodic_note
      - name: obsidian_get_recent_changes
      - name: obsidian_get_recent_periodic_notes
      - name: obsidian_list_files_in_dir
      - name: obsidian_list_files_in_vault
      - name: obsidian_patch_content
      - name: obsidian_simple_search
    secrets:
      - name: obsidian.api_key
        env: OBSIDIAN_API_KEY
        example: YOUR_OBSIDIAN_API_KEY
    env:
      - name: OBSIDIAN_HOST
        value: host.docker.internal
    prompts: 0
    resources: {}
    metadata:
      githubStars: 1905
      category: productivity
      tags:
        - obsidian
        - productivity
      license: MIT License
      owner: MarkusPfundstein
  octagon-remote:
    description: Market Intelligence.
    title: Octagon
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/octagon-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/octagon-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.octagonai.co/sse
    icon: https://www.google.com/s2/favicons?domain=octagonai.co&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: analytics
      tags:
        - analytics
        - market-intelligence
        - data
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: octagon-remote
  okta-mcp-fctr:
    description: Secure Okta identity and access management via Model Context Protocol (MCP). Access Okta users, groups, applications, logs, and policies through AI assistants with enterprise-grade security.
    title: Okta MCP Server
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/okta-mcp-fctr
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/okta-mcp-fctr.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/okta-mcp-fctr.json
    source: https://github.com/fctr-id/okta-mcp-server/tree/main
    upstream: https://github.com/fctr-id/okta-mcp-server
    icon: https://avatars.githubusercontent.com/u/198773578?v=4
    tools:
      - name: get_current_time
      - name: get_okta_application
      - name: get_okta_event_logs
      - name: get_okta_group
      - name: get_okta_policy_rule
      - name: get_okta_user
      - name: list_okta_application_groups
      - name: list_okta_application_users
      - name: list_okta_applications
      - name: list_okta_group_users
      - name: list_okta_groups
      - name: list_okta_network_zones
      - name: list_okta_policy_rules
      - name: list_okta_user_applications
      - name: list_okta_user_factors
      - name: list_okta_user_groups
      - name: list_okta_users
      - name: parse_relative_time
    secrets:
      - name: okta-mcp-fctr.api_token
        env: OKTA_API_TOKEN
        example: 00aBcDeFGhIjkLmNoPqRsTuVwxYz
    env:
      - name: OKTA_CLIENT_ORGURL
        value: '{{okta-mcp-fctr.client_orgurl}}'
      - name: LOG_LEVEL
        value: '{{okta-mcp-fctr.log_level}}'
      - name: OKTA_CONCURRENT_LIMIT
        value: '{{okta-mcp-fctr.concurrent_limit}}'
    prompts: 0
    resources: {}
    config:
      - name: okta-mcp-fctr
        description: Configure the connection to Okta
        type: object
        properties:
          client_orgurl:
            type: string
            description: Okta organization URL (e.g., https://dev-123456.okta.com)
          log_level:
            type: string
            description: Logging level for server output
          concurrent_limit:
            type: string
            description: Maximum concurrent requests to Okta API
        required:
          - client_orgurl
    metadata:
      githubStars: 31
      category: ai
      tags:
        - ai
        - okta
        - identity
        - access-management
        - security
        - authentication
        - audit
        - compliance
        - enterprise
      license: Apache License 2.0
      owner: fctr-id
  omi:
    description: A Model Context Protocol server for Omi interaction and automation. This server provides tools to read, search, and manipulate Memories and Conversations.
    title: omi-mcp
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/omi
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/omi.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/omi.json
    source: https://github.com/BasedHardware/omi/tree/main/mcp
    upstream: https://github.com/BasedHardware/omi
    icon: https://avatars.githubusercontent.com/u/162546372?v=4
    tools:
      - name: create_memory
      - name: delete_memory
      - name: edit_memory
      - name: get_conversation_by_id
      - name: get_conversations
      - name: get_memories
    secrets:
      - name: omi.api_key
        env: OMI_API_KEY
        example: <OMI_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      githubStars: 6203
      category: ai
      tags:
        - ai
      license: MIT License
      owner: BasedHardware
  onecontext-remote:
    description: RAG-as-a-Service.
    title: OneContext
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/onecontext-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/onecontext-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.onecontext.ai/sse
    icon: https://www.google.com/s2/favicons?domain=onecontext.ai&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: ai
      tags:
        - ai
        - rag
        - context
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: onecontext-remote
  onlyoffice-docspace:
    description: ONLYOFFICE DocSpace is a room-based collaborative platform which allows organizing a clear file structure depending on users' needs or project goals.
    title: ONLYOFFICE DocSpace
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/onlyoffice-docspace
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/onlyoffice-docspace.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/onlyoffice-docspace.json
    source: https://github.com/ONLYOFFICE/docspace-mcp/tree/main
    upstream: https://github.com/ONLYOFFICE/docspace-mcp
    icon: https://avatars.githubusercontent.com/u/1426033?v=4
    tools:
      - name: archive_room
      - name: copy_batch_items
      - name: create_folder
      - name: create_room
      - name: delete_file
      - name: delete_folder
      - name: download_file_as_text
      - name: get_all_people
      - name: get_file_info
      - name: get_folder_content
      - name: get_folder_info
      - name: get_my_folder
      - name: get_room_access_levels
      - name: get_room_info
      - name: get_room_security_info
      - name: get_room_types
      - name: get_rooms_folder
      - name: move_batch_items
      - name: rename_folder
      - name: set_room_security
      - name: update_file
      - name: update_room
      - name: upload_file
    secrets:
      - name: onlyoffice-docspace.api_key
        env: DOCSPACE_API_KEY
        example: sk-a499e...
      - name: onlyoffice-docspace.auth_token
        env: DOCSPACE_AUTH_TOKEN
        example: Fe4Hrgl6...
      - name: onlyoffice-docspace.username
        env: DOCSPACE_USERNAME
        example: henry.milton@onlyoffice.com
      - name: onlyoffice-docspace.password
        env: DOCSPACE_PASSWORD
        example: ditgor-p...
    env:
      - name: DOCSPACE_BASE_URL
        value: '{{onlyoffice-docspace.base_url}}'
      - name: DOCSPACE_ORIGIN
        value: '{{onlyoffice-docspace.origin}}'
      - name: DOCSPACE_USER_AGENT
        value: '{{onlyoffice-docspace.user_agent}}'
      - name: DOCSPACE_DYNAMIC
        value: '{{onlyoffice-docspace.dynamic}}'
      - name: DOCSPACE_TOOLSETS
        value: '{{onlyoffice-docspace.toolsets}}'
    prompts: 0
    resources: {}
    config:
      - name: onlyoffice-docspace
        description: Configure the connection to ONLYOFFICE DocSpace
        type: object
        properties:
          base_url:
            type: string
          origin:
            type: string
          user_agent:
            type: string
          dynamic:
            type: boolean
          toolsets:
            type: string
    metadata:
      githubStars: 3
      category: productivity
      tags:
        - onlyoffice
        - docspace
        - productivity
      license: Apache License 2.0
      owner: ONLYOFFICE
  openapi-schema:
    description: OpenAPI Schema Model Context Protocol Server.
    title: OpenAPI Schema
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/openapi-schema
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/openapi-schema.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/openapi-schema.json
    source: https://github.com/slimslenderslacks/mcp-openapi-schema/tree/master
    upstream: https://github.com/hannesj/mcp-openapi-schema
    icon: https://avatars.githubusercontent.com/u/16343502?s=200&v=4
    tools:
      - name: get-component
      - name: get-endpoint
      - name: get-examples
      - name: get-path-parameters
      - name: get-request-body
      - name: get-response-schema
      - name: list-components
      - name: list-endpoints
      - name: list-security-schemes
      - name: search-schema
    volumes:
      - '{{openApiSchemaPath|or:[]|volume|into}}'
    prompts: 0
    resources: {}
    metadata:
      githubStars: 41
      category: devops
      tags:
        - openapi-schema
        - devops
      owner: hannesj
  openbnb-airbnb:
    description: MCP Server for searching Airbnb and get listing details.
    title: Airbnb Search
    type: server
    dateAdded: "2025-07-01T12:14:18Z"
    image: mcp/openbnb-airbnb
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/openbnb-airbnb.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/openbnb-airbnb.json
    source: https://github.com/openbnb-org/mcp-server-airbnb/tree/main
    upstream: https://github.com/openbnb-org/mcp-server-airbnb
    icon: https://avatars.githubusercontent.com/u/202564951?v=4
    tools:
      - name: airbnb_listing_details
      - name: airbnb_search
    prompts: 0
    resources: {}
    metadata:
      githubStars: 272
      category: search
      tags:
        - airbnb
        - openbnb
      license: MIT License
      owner: openbnb-org
  openmesh-remote:
    description: Service Discovery.
    title: OpenMesh
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/openmesh-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/openmesh-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.openmesh.dev
    icon: https://www.google.com/s2/favicons?domain=openmesh.network&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: infrastructure
      tags:
        - infrastructure
        - discovery
        - mesh
        - remote
      license: Apache License 2.0
      owner: docker
  openweather:
    description: A simple MCP service that provides current weather and 5-day forecast using the free OpenWeatherMap API.
    title: Openweather
    type: server
    dateAdded: "2025-07-01T12:14:18Z"
    image: mcp/openweather
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/openweather.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/openweather.json
    source: https://github.com/mschneider82/mcp-openweather/tree/main
    upstream: https://github.com/mschneider82/mcp-openweather
    icon: https://avatars.githubusercontent.com/u/1743227?s=200&v=4
    tools:
      - name: weather
    secrets:
      - name: openweather.owm_api_key
        env: OWM_API_KEY
        example: <OWM_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      githubStars: 9
      category: search
      tags:
        - weather-api
      license: MIT License
      owner: mschneider82
  openzeppelin-cairo-remote:
    description: Software Development.
    title: OpenZeppelin Cairo Contracts
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/openzeppelin-cairo-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/openzeppelin-cairo-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.openzeppelin.com/cairo
    icon: https://www.google.com/s2/favicons?domain=openzeppelin.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: blockchain
      tags:
        - blockchain
        - cairo
        - smart-contracts
        - remote
      license: Apache License 2.0
      owner: docker
  openzeppelin-solidity-remote:
    description: Software Development.
    title: OpenZeppelin Solidity Contracts
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/openzeppelin-solidity-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/openzeppelin-solidity-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.openzeppelin.com/solidity
    icon: https://www.google.com/s2/favicons?domain=openzeppelin.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: blockchain
      tags:
        - blockchain
        - solidity
        - smart-contracts
        - remote
      license: Apache License 2.0
      owner: docker
  openzeppelin-stellar-remote:
    description: Software Development.
    title: OpenZeppelin Stellar Contracts
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/openzeppelin-stellar-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/openzeppelin-stellar-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.openzeppelin.com/stellar
    icon: https://www.google.com/s2/favicons?domain=openzeppelin.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: blockchain
      tags:
        - blockchain
        - stellar
        - smart-contracts
        - remote
      license: Apache License 2.0
      owner: docker
  openzeppelin-stylus-remote:
    description: Software Development.
    title: OpenZeppelin Stylus Contracts
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/openzeppelin-stylus-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/openzeppelin-stylus-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.openzeppelin.com/stylus
    icon: https://www.google.com/s2/favicons?domain=openzeppelin.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: blockchain
      tags:
        - blockchain
        - stylus
        - smart-contracts
        - remote
      license: Apache License 2.0
      owner: docker
  opik:
    description: Model Context Protocol (MCP) implementation for Opik enabling seamless IDE integration and unified access to prompts, projects, traces, and metrics.
    title: Opik
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/opik
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/opik.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/opik.json
    source: https://github.com/comet-ml/opik-mcp/tree/main
    upstream: https://github.com/comet-ml/opik-mcp
    icon: https://avatars.githubusercontent.com/u/31487821?s=200&v=4
    tools:
      - name: create-project
      - name: create-prompt
      - name: create-prompt-version
      - name: delete-project
      - name: delete-prompt
      - name: get-metrics
      - name: get-opik-examples
      - name: get-opik-help
      - name: get-opik-tracing-info
      - name: get-project-by-id
      - name: get-prompt-by-id
      - name: get-server-info
      - name: get-trace-by-id
      - name: get-trace-stats
      - name: list-projects
      - name: list-prompts
      - name: list-traces
      - name: update-project
      - name: update-prompt
    secrets:
      - name: opik.api_key
        env: OPIK_API_KEY
        example: your_api_key
    env:
      - name: OPIK_API_BASE_URL
        value: '{{opik.api_base_url}}'
      - name: OPIK_WORKSPACE_NAME
        value: '{{opik.workspace_name}}'
    prompts: 0
    resources: {}
    config:
      - name: opik
        description: Configure the connection to Opik
        type: object
        properties:
          api_base_url:
            type: string
          workspace_name:
            type: string
    metadata:
      githubStars: 165
      category: devops
      tags:
        - opik
        - devops
      license: Apache License 2.0
      owner: comet-ml
  osp_marketing_tools:
    description: A Model Context Protocol (MCP) server that empowers LLMs to use some of Open Srategy Partners' core writing and product marketing techniques.
    title: OSP Marketing Tools
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/osp_marketing_tools
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/osp_marketing_tools.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/osp_marketing_tools.json
    source: https://github.com/open-strategy-partners/osp_marketing_tools/tree/main
    upstream: https://github.com/open-strategy-partners/osp_marketing_tools
    icon: https://avatars.githubusercontent.com/u/47528973?s=200&v=4
    tools:
      - name: get_editing_codes
      - name: get_meta_guide
      - name: get_on_page_seo_guide
      - name: get_value_map_positioning_guide
      - name: get_writing_guide
      - name: health_check
    prompts: 0
    resources: {}
    metadata:
      githubStars: 225
      category: devops
      tags:
        - osp_marketing_tools
        - devops
      license: Creative Commons Attribution Share Alike 4.0 International
      owner: open-strategy-partners
  oxylabs:
    description: A Model Context Protocol (MCP) server that enables AI assistants like Claude to seamlessly access web data through Oxylabs' powerful web scraping technology.
    title: Oxylabs
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/oxylabs
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/oxylabs.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/oxylabs.json
    source: https://github.com/oxylabs/oxylabs-mcp/tree/main
    upstream: https://github.com/oxylabs/oxylabs-mcp
    icon: https://avatars.githubusercontent.com/u/43960873?s=200&v=4
    tools:
      - name: amazon_product_scraper
      - name: amazon_search_scraper
      - name: google_search_scraper
      - name: universal_scraper
    secrets:
      - name: oxylabs.password
        env: OXYLABS_PASSWORD
        example: YOUR_PASSWORD_HERE
    env:
      - name: OXYLABS_USERNAME
        value: '{{oxylabs.username}}'
    prompts: 0
    resources: {}
    config:
      - name: oxylabs
        description: Configure the connection to Oxylabs Scraper
        type: object
        properties:
          username:
            type: string
        required:
          - username
    metadata:
      githubStars: 61
      category: devops
      tags:
        - oxylabs
        - devops
      license: MIT License
      owner: oxylabs
  paper-search:
    description: A MCP for searching and downloading academic papers from multiple sources like arXiv, PubMed, bioRxiv, etc.
    title: Paper Search
    type: server
    dateAdded: "2025-06-05T05:10:44Z"
    image: mcp/paper-search
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/paper-search.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/paper-search.json
    source: https://github.com/openags/paper-search-mcp/tree/main
    upstream: https://github.com/openags/paper-search-mcp
    icon: https://avatars.githubusercontent.com/u/197887910?v=4
    tools:
      - name: download_arxiv
      - name: download_biorxiv
      - name: download_crossref
      - name: download_iacr
      - name: download_medrxiv
      - name: download_pubmed
      - name: download_semantic
      - name: get_crossref_paper_by_doi
      - name: read_arxiv_paper
      - name: read_biorxiv_paper
      - name: read_crossref_paper
      - name: read_iacr_paper
      - name: read_medrxiv_paper
      - name: read_pubmed_paper
      - name: read_semantic_paper
      - name: search_arxiv
      - name: search_biorxiv
      - name: search_crossref
      - name: search_google_scholar
      - name: search_iacr
      - name: search_medrxiv
      - name: search_pubmed
      - name: search_semantic
    prompts: 0
    resources: {}
    metadata:
      githubStars: 299
      category: search
      tags:
        - academic
        - search
      license: MIT License
      owner: openags
  paypal-remote:
    description: Payments.
    title: PayPal
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/paypal-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/paypal-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.paypal.com/sse
    icon: https://www.google.com/s2/favicons?domain=paypal.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: payments
      tags:
        - payments
        - finance
        - transactions
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: paypal-remote
  perplexity-ask:
    description: Connector for Perplexity API, to enable real-time, web-wide research.
    title: Perplexity
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/perplexity-ask
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/perplexity-ask.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/perplexity-ask.json
    source: https://github.com/ppl-ai/modelcontextprotocol/tree/f0a927c250e04b389ff5c34f6a2a85ad625668e8
    upstream: https://github.com/ppl-ai/modelcontextprotocol
    icon: https://avatars.githubusercontent.com/u/110299016?s=200&v=4
    tools:
      - name: perplexity_ask
      - name: perplexity_reason
      - name: perplexity_research
    secrets:
      - name: perplexity-ask.api_key
        env: PERPLEXITY_API_KEY
        example: YOUR_PERPLEXITY_API_KEY
    prompts: 0
    resources: {}
    metadata:
      githubStars: 1552
      category: devops
      tags:
        - perplexity-ask
        - devops
      license: MIT License
      owner: perplexityai
  pia:
    description: An MCP server to help make U.S. Government open datasets AI-friendly.
    title: Program Integrity Alliance
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/pia
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/pia.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/pia.json
    source: https://github.com/Program-Integrity-Alliance/pia-mcp-local/tree/main
    upstream: https://github.com/Program-Integrity-Alliance/pia-mcp-local
    icon: http://programintegrity.org/wp-content/uploads/2025/08/docker-mcp-pia-icon-512.png
    tools:
      - name: pia_search_content
      - name: pia_search_content_facets
      - name: pia_search_titles
      - name: pia_search_titles_facets
    secrets:
      - name: pia.api-key
        env: PIA_API_KEY
        example: pia_5cFd9jtG3zbY4VpREewTP17uzdfnvMt8_3m778O2dv8
    prompts: 0
    resources: {}
    metadata:
      category: ai
      tags:
        - ai
      license: MIT License
      owner: Program-Integrity-Alliance
  pinecone:
    description: Pinecone Assistant MCP server.
    title: Pinecone Assistant
    type: server
    dateAdded: "2025-06-05T06:44:51Z"
    image: mcp/pinecone
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/pinecone.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/pinecone.json
    source: https://github.com/pinecone-io/assistant-mcp/tree/main
    upstream: https://github.com/pinecone-io/assistant-mcp
    icon: https://avatars.githubusercontent.com/u/54333248?v=4
    tools:
      - name: assistant_context
    secrets:
      - name: pinecone.api_key
        env: PINECONE_API_KEY
        example: <YOUR_PINECONE_API_KEY_HERE>
    env:
      - name: PINECONE_ASSISTANT_HOST
        value: '{{pinecone.assistant_host}}'
    prompts: 0
    resources: {}
    config:
      - name: pinecone
        description: Configure the connection to Pinecone Assistant
        type: object
        properties:
          assistant_host:
            type: string
    metadata:
      githubStars: 37
      category: database
      tags:
        - database
        - machine-learning
      license: MIT License
      owner: pinecone-io
  plaid-remote:
    description: Payments.
    title: Plaid
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/plaid-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/plaid-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://api.dashboard.plaid.com/mcp/sse
    icon: https://www.google.com/s2/favicons?domain=plaid.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: fintech
      tags:
        - fintech
        - banking
        - financial-data
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: plaid-remote
  playwright:
    description: Playwright MCP server.
    title: Playwright
    type: server
    longLived: true
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/playwright
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/playwright.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/playwright.json
    source: https://github.com/microsoft/playwright-mcp/tree/main
    upstream: https://github.com/microsoft/playwright-mcp
    icon: https://avatars.githubusercontent.com/u/6154722?v=4
    tools:
      - name: browser_click
      - name: browser_close
      - name: browser_console_messages
      - name: browser_drag
      - name: browser_evaluate
      - name: browser_file_upload
      - name: browser_fill_form
      - name: browser_handle_dialog
      - name: browser_hover
      - name: browser_install
      - name: browser_navigate
      - name: browser_navigate_back
      - name: browser_network_requests
      - name: browser_press_key
      - name: browser_resize
      - name: browser_select_option
      - name: browser_snapshot
      - name: browser_tabs
      - name: browser_take_screenshot
      - name: browser_type
      - name: browser_wait_for
    prompts: 0
    resources: {}
    metadata:
      githubStars: 19036
      category: devops
      tags:
        - playwright
        - devops
      license: Apache License 2.0
      owner: microsoft
  playwright-mcp-server:
    description: "Playwright Model Context Protocol Server - Tool to automate Browsers and APIs in Claude Desktop, Cline, Cursor IDE and More \U0001F50C."
    title: ExecuteAutomation Playwright MCP
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/mcp-playwright
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/playwright-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/playwright-mcp-server.json
    source: https://github.com/executeautomation/mcp-playwright/tree/main
    upstream: https://github.com/executeautomation/mcp-playwright
    icon: https://avatars.githubusercontent.com/u/10337030?v=4
    tools:
      - name: clear_codegen_session
      - name: end_codegen_session
      - name: get_codegen_session
      - name: playwright_assert_response
      - name: playwright_click
      - name: playwright_click_and_switch_tab
      - name: playwright_close
      - name: playwright_console_logs
      - name: playwright_custom_user_agent
      - name: playwright_delete
      - name: playwright_drag
      - name: playwright_evaluate
      - name: playwright_expect_response
      - name: playwright_fill
      - name: playwright_get
      - name: playwright_get_visible_html
      - name: playwright_get_visible_text
      - name: playwright_go_back
      - name: playwright_go_forward
      - name: playwright_hover
      - name: playwright_iframe_click
      - name: playwright_iframe_fill
      - name: playwright_navigate
      - name: playwright_patch
      - name: playwright_post
      - name: playwright_press_key
      - name: playwright_put
      - name: playwright_save_as_pdf
      - name: playwright_screenshot
      - name: playwright_select
      - name: playwright_upload_file
      - name: start_codegen_session
    volumes:
      - '{{playwright-mcp-server.data}}:{{playwright-mcp-server.}}'
    prompts: 0
    resources: {}
    metadata:
      githubStars: 4697
      category: ai
      tags:
        - ai
      license: MIT License
      owner: executeautomation
  pluggedin-mcp-proxy:
    description: A unified MCP proxy that aggregates multiple MCP servers into one interface, enabling seamless tool discovery and management across all your AI interactions. Manage all your MCP servers from a single connection point with RAG capabilities and real-time notifications.
    title: Plugged.in MCP Proxy
    type: server
    dateAdded: "2025-07-01T14:14:18Z"
    image: mcp/pluggedin-mcp-proxy
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/pluggedin-mcp-proxy.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/pluggedin-mcp-proxy.json
    source: https://github.com/VeriTeknik/pluggedin-mcp-proxy/tree/main
    upstream: https://github.com/VeriTeknik/pluggedin-mcp-proxy
    icon: https://www.plugged.in/favicon.ico
    tools:
      - name: pluggedin_delete_notification
      - name: pluggedin_discover_tools
      - name: pluggedin_list_notifications
      - name: pluggedin_mark_notification_done
      - name: pluggedin_rag_query
      - name: pluggedin_send_notification
    secrets:
      - name: pluggedin-mcp-proxy.pluggedin_api_key
        env: PLUGGEDIN_API_KEY
        example: YOUR_PLUGGEDIN_API_KEY
    env:
      - name: PLUGGEDIN_API_BASE_URL
        value: '{{pluggedin-mcp-proxy.pluggedin_api_base_url}}'
    prompts: 0
    resources: {}
    config:
      - name: pluggedin-mcp-proxy
        description: Configure your Plugged.in API connection. Get your API key from https://plugged.in in the API Keys section.
        type: object
        properties:
          pluggedin_api_base_url:
            type: string
            description: Base URL for the Plugged.in API (optional, defaults to https://plugged.in for cloud or http://localhost:12005 for self-hosted)
    metadata:
      githubStars: 88
      category: productivity
      tags:
        - productivity
        - proxy
        - management
        - tools
        - ai
      license: Apache License 2.0
      owner: VeriTeknik
  polar-signals-remote:
    description: Software Development.
    title: Polar Signals
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/polar-signals-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/polar-signals-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://api.polarsignals.com/api/mcp/
    icon: https://www.google.com/s2/favicons?domain=polarsignals.com&sz=64
    tools: []
    secrets:
      - name: polar-signals-remote.api_key
        env: POLAR_SIGNALS_REMOTE_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: devops
      tags:
        - devops
        - profiling
        - performance
        - remote
      license: Apache License 2.0
      owner: docker
  postgres:
    description: Connect with read-only access to PostgreSQL databases. This server enables LLMs to inspect database schemas and execute read-only queries.
    title: PostgreSQL readonly (Archived)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/postgres
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/postgres.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/postgres.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/177543?s=200&v=4
    tools:
      - name: query
    secrets:
      - name: postgres.url
        env: POSTGRES_URL
        example: postgresql://host.docker.internal:5432/mydb
    command:
      - $POSTGRES_URL
    prompts: 0
    resources: {}
    metadata:
      githubStars: 66823
      category: database
      tags:
        - postgres
        - database
      license: MIT License
      owner: modelcontextprotocol
  pref-editor:
    description: Pref Editor is a tool for viewing and editing Android app preferences during development.
    title: Pref Editor
    type: server
    dateAdded: "2025-07-01T14:14:18Z"
    image: mcp/pref-editor
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/pref-editor.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/pref-editor.json
    source: https://github.com/charlesmuchene/pref-editor-mcp-server/tree/main
    upstream: https://github.com/charlesmuchene/pref-editor-mcp-server
    icon: https://raw.githubusercontent.com/charlesmuchene/pref-editor-mcp-server/refs/heads/main/logo.png
    tools:
      - name: add_preference
      - name: change_preference
      - name: delete_preference
      - name: devices
      - name: list_apps
      - name: list_files
      - name: read_preferences
    prompts: 0
    resources: {}
    metadata:
      githubStars: 2
      category: devops
      tags:
        - android preferences
        - android development
        - preferences-datastore
        - shared-preferences
      license: Apache License 2.0
      owner: charlesmuchene
  prisma-postgres-remote:
    description: Database.
    title: Prisma Postgres
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/prisma-postgres-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/prisma-postgres-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.prisma.io/mcp
    icon: https://www.google.com/s2/favicons?domain=prisma.io&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: database
      tags:
        - database
        - postgres
        - orm
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: prisma-postgres-remote
  ramparts:
    description: A comprehensive security scanner for MCP servers with YARA rules and static analysis capabilities.
    title: Ramparts MCP Security Scanner
    type: server
    dateAdded: "2025-09-04T18:21:22Z"
    image: mcp/ramparts
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/ramparts.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/ramparts.json
    source: https://github.com/getjavelin/ramparts/tree/docker-registry-dockerfile
    upstream: https://github.com/getjavelin/ramparts
    icon: https://raw.githubusercontent.com/getjavelin/ramparts/main/assets/ramparts.png
    tools:
      - name: health
      - name: increment_counter
      - name: scan
      - name: scan-config
    env:
      - name: RUST_LOG
        value: info
    prompts: 0
    resources: {}
    metadata:
      githubStars: 54
      category: security
      tags:
        - security
        - vulnerability-scanning
        - mcp-server-analysis
        - yara-rules
      license: Apache License 2.0
      owner: getjavelin
  razorpay:
    description: Razorpay's Official MCP Server.
    title: Razorpay
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/razorpay
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/razorpay.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/razorpay.json
    source: https://github.com/razorpay/razorpay-mcp-server/tree/main
    upstream: https://github.com/razorpay/razorpay-mcp-server
    icon: https://avatars.githubusercontent.com/u/7713209?v=4
    tools:
      - name: capture_payment
      - name: close_qr_code
      - name: create_instant_settlement
      - name: create_order
      - name: create_payment_link
      - name: create_qr_code
      - name: create_refund
      - name: fetch_all_instant_settlements
      - name: fetch_all_orders
      - name: fetch_all_payment_links
      - name: fetch_all_payments
      - name: fetch_all_payouts
      - name: fetch_all_qr_codes
      - name: fetch_all_refunds
      - name: fetch_all_settlements
      - name: fetch_instant_settlement_with_id
      - name: fetch_multiple_refunds_for_payment
      - name: fetch_order
      - name: fetch_order_payments
      - name: fetch_payment
      - name: fetch_payment_card_details
      - name: fetch_payment_link
      - name: fetch_payments_for_qr_code
      - name: fetch_payout_with_id
      - name: fetch_qr_code
      - name: fetch_qr_codes_by_customer_id
      - name: fetch_qr_codes_by_payment_id
      - name: fetch_refund
      - name: fetch_settlement_recon_details
      - name: fetch_settlement_with_id
      - name: fetch_specific_refund_for_payment
      - name: payment_link_notify
      - name: payment_link_upi_create
      - name: update_order
      - name: update_payment
      - name: update_payment_link
      - name: update_refund
    secrets:
      - name: razorpay.key_secret
        env: RAZORPAY_KEY_SECRET
        example: your_razorpay_key_secret
    env:
      - name: RAZORPAY_KEY_ID
        value: '{{razorpay.key_id}}'
    prompts: 0
    resources: {}
    config:
      - name: razorpay
        description: Configure the connection to Razorpay
        type: object
        properties:
          key_id:
            type: string
        required:
          - key_id
    metadata:
      githubStars: 203
      category: devops
      tags:
        - razorpay
        - devops
      license: MIT License
      owner: razorpay
  redis:
    description: Access to Redis database operations.
    title: Redis
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/redis
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/redis.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/redis.json
    source: https://github.com/redis/mcp-redis/tree/main
    upstream: https://github.com/redis/mcp-redis
    icon: https://avatars.githubusercontent.com/u/1529926?v=4
    tools:
      - name: client_list
      - name: create_vector_index_hash
      - name: dbsize
      - name: delete
      - name: expire
      - name: get
      - name: get_index_info
      - name: get_indexed_keys_number
      - name: get_indexes
      - name: get_vector_from_hash
      - name: hdel
      - name: hexists
      - name: hget
      - name: hgetall
      - name: hset
      - name: info
      - name: json_del
      - name: json_get
      - name: json_set
      - name: llen
      - name: lpop
      - name: lpush
      - name: lrange
      - name: publish
      - name: rename
      - name: rpop
      - name: rpush
      - name: sadd
      - name: scan_all_keys
      - name: scan_keys
      - name: set
      - name: set_vector_in_hash
      - name: smembers
      - name: srem
      - name: subscribe
      - name: type
      - name: unsubscribe
      - name: vector_search_hash
      - name: xadd
      - name: xdel
      - name: xrange
      - name: zadd
      - name: zrange
      - name: zrem
    secrets:
      - name: redis.password
        env: REDIS_PWD
        example: ""
    env:
      - name: REDIS_HOST
        value: '{{redis.host}}'
      - name: REDIS_PORT
        value: '{{redis.port}}'
      - name: REDIS_USERNAME
        value: '{{redis.username}}'
      - name: REDIS_SSL
        value: '{{redis.ssl}}'
      - name: REDIS_CA_PATH
        value: '{{redis.ca_path}}'
      - name: REDIS_SSL_KEYFILE
        value: '{{redis.ssl_keyfile}}'
      - name: REDIS_SSL_CERTFILE
        value: '{{redis.ssl_certfile}}'
      - name: REDIS_CERT_REQS
        value: '{{redis.cert_reqs}}'
      - name: REDIS_CA_CERTS
        value: '{{redis.ca_certs}}'
      - name: REDIS_CLUSTER_MODE
        value: '{{redis.cluster_mode}}'
    prompts: 0
    resources: {}
    config:
      - name: redis
        description: Configure the connection to Redis
        type: object
        properties:
          host:
            type: string
          port:
            type: integer
          username:
            type: string
          ssl:
            type: boolean
          ca_path:
            type: string
          ssl_keyfile:
            type: string
          ssl_certfile:
            type: string
          cert_reqs:
            type: string
          ca_certs:
            type: string
          cluster_mode:
            type: boolean
    metadata:
      githubStars: 230
      category: database
      tags:
        - redis
        - database
      license: MIT License
      owner: redis
  redis-cloud:
    description: MCP Server for Redis Cloud's API, allowing you to manage your Redis Cloud resources using natural language.
    title: Redis Cloud
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/redis-cloud
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/redis-cloud.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/redis-cloud.json
    source: https://github.com/redis/mcp-redis-cloud/tree/main
    upstream: https://github.com/redis/mcp-redis-cloud
    icon: https://avatars.githubusercontent.com/u/1529926?s=200&v=4
    tools:
      - name: create-essential-database
      - name: create-essential-subscription
      - name: create-pro-database
      - name: create-pro-subscription
      - name: delete-essential-subscription
      - name: get-current-account
      - name: get-current-payment-methods
      - name: get-database-modules
      - name: get-essential-databases
      - name: get-essential-subscription-by-id
      - name: get-essential-subscriptions
      - name: get-essentials-plans
      - name: get-pro-databases
      - name: get-pro-plans-regions
      - name: get-pro-subscription
      - name: get-pro-subscriptions
      - name: get-task-by-id
      - name: get-tasks
    secrets:
      - name: redis-cloud.secret_key
        env: SECRET_KEY
        example: <redis_cloud_api_secret_key>
    env:
      - name: API_KEY
        value: '{{redis-cloud.api_key}}'
    prompts: 0
    resources: {}
    config:
      - name: redis-cloud
        description: Configure the connection to Redis Cloud
        type: object
        properties:
          api_key:
            type: string
        required:
          - api_key
    metadata:
      githubStars: 33
      category: database
      tags:
        - redis-cloud
        - database
      license: MIT License
      owner: redis
  Ref:
    description: Ref powerful search tool connets your coding tools with documentation context. It includes an up-to-date index of public documentation and it can ingest your private documentation (eg. GitHub repos, PDFs) as well.
    title: Ref - up-to-date docs
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/ref-tools-mcp
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/Ref.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/Ref.json
    source: https://github.com/ref-tools/ref-tools-mcp/tree/main
    upstream: https://github.com/ref-tools/ref-tools-mcp
    icon: https://avatars.githubusercontent.com/u/210568548?v=4
    tools:
      - name: ref_read_url
      - name: ref_search_documentation
    secrets:
      - name: Ref.REF_API_KEY
        env: REF_API_KEY
        example: ref-abcdefghi123
    prompts: 0
    resources: {}
    metadata:
      githubStars: 514
      category: devops
      tags:
        - devops
        - documentation
      license: MIT License
      owner: ref-tools
  remote-mcp-remote:
    description: MCP Directory.
    title: Remote MCP
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/remote-mcp-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/remote-mcp-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.remote-mcp.com
    icon: https://www.google.com/s2/favicons?domain=remote-mcp.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: tools
      tags:
        - tools
        - mcp
        - directory
        - remote
      license: Apache License 2.0
      owner: docker
  render:
    description: Interact with your Render resources via LLMs.
    title: Render
    type: server
    dateAdded: "2025-05-23T20:08:35Z"
    image: mcp/render
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/render.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/render.json
    source: https://github.com/render-oss/render-mcp-server/tree/main
    upstream: https://github.com/render-oss/render-mcp-server
    icon: https://avatars.githubusercontent.com/u/114033652?v=4
    tools:
      - name: create_key_value
      - name: create_postgres
      - name: create_static_site
      - name: create_web_service
      - name: get_deploy
      - name: get_key_value
      - name: get_metrics
      - name: get_postgres
      - name: get_selected_workspace
      - name: get_service
      - name: list_deploys
      - name: list_key_value
      - name: list_log_label_values
      - name: list_logs
      - name: list_postgres_instances
      - name: list_services
      - name: list_workspaces
      - name: query_render_postgres
      - name: select_workspace
      - name: update_environment_variables
      - name: update_static_site
      - name: update_web_service
    secrets:
      - name: render.api_key
        env: RENDER_API_KEY
        example: DUMMY
    prompts: 0
    resources: {}
    metadata:
      githubStars: 42
      category: devops
      tags:
        - render
        - devops
      license: Apache License 2.0
      owner: render-oss
  resend:
    description: Send emails directly from Cursor with this email sending MCP server.
    title: Send emails
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/resend
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/resend.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/resend.json
    source: https://github.com/slimslenderslacks/mcp-send-email/tree/slim/docker
    upstream: https://github.com/resend/mcp-send-email
    icon: https://avatars.githubusercontent.com/u/109384852?s=200&v=4
    tools:
      - name: send-email
    secrets:
      - name: resend.api_key
        env: RESEND_API_KEY
        example: YOUR_RESEND_API_KEY
    env:
      - name: REPLY_TO_EMAIL_ADDRESSES
        value: '{{resend.reply_to}}'
      - name: SENDER_EMAIL_ADDRESS
        value: '{{resend.sender}}'
    prompts: 0
    resources: {}
    config:
      - name: resend
        description: Configure sender and reply email addresses
        type: object
        properties:
          reply_to:
            type: string
            description: comma separated list of reply to email addresses
          sender:
            type: string
            description: sender email address
        required:
          - reply_to
          - sender
    metadata:
      githubStars: 395
      category: communication
      tags:
        - resend
        - email
      owner: resend
  risken:
    description: RISKEN's official MCP Server.
    title: RISKEN
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/risken
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/risken.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/risken.json
    source: https://github.com/ca-risken/risken-mcp-server/tree/main
    upstream: https://github.com/ca-risken/risken-mcp-server
    icon: https://avatars.githubusercontent.com/u/88366693?s=200&v=4
    tools:
      - name: archive_finding
      - name: get_project
      - name: search_alert
      - name: search_finding
    secrets:
      - name: risken.access_key
        env: RISKEN_ACCESS_TOKEN
        example: your_access_token
    env:
      - name: RISKEN_URL
        value: '{{risken.url}}'
    command:
      - stdio
    prompts: 0
    resources: {}
    config:
      - name: risken
        description: Configure the connection to Risken
        type: object
        properties:
          url:
            type: string
    metadata:
      githubStars: 6
      category: devops
      tags:
        - risken
        - devops
      license: MIT License
      owner: ca-risken
  root:
    description: MCP server that provides container image vulnerability scanning and remediation capabilities through Root.io.
    title: Root.io Vulnerability Remediation MCP
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/root
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/root.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/root.json
    source: https://github.com/rootio-avr/mcp-proxy/tree/main
    upstream: https://github.com/rootio-avr/mcp-proxy
    icon: https://raw.githubusercontent.com/rootio-avr/mcp-proxy/refs/heads/main/assets/root-logo.svg
    tools:
      - name: create_registry_integration
      - name: get_image_remediation
      - name: get_remediation_continuity_summary
      - name: get_remediation_details_by_scan_id
      - name: get_remediation_status
      - name: get_user_info
      - name: list_remediation_continuity_summaries
      - name: list_unique_fqins
      - name: ping
      - name: registries_credentials_list
      - name: trigger_remediation
    secrets:
      - name: root.api_access_token
        env: API_ACCESS_TOKEN
        example: sk_your_access_token
    prompts: 0
    resources: {}
    metadata:
      githubStars: 2
      category: security
      tags:
        - security
        - vulnerability
        - scanning
        - remediation
      license: MIT License
      owner: rootio-avr
  rube-remote:
    description: Other.
    title: Rube
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/rube-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/rube-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://rube.composio.dev
    icon: https://www.google.com/s2/favicons?domain=composio.dev&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: tools
      tags:
        - tools
        - automation
        - remote
      license: Apache License 2.0
      owner: docker
  schemacrawler-ai:
    description: The SchemaCrawler AI MCP Server enables natural language interaction with your database schema using an MCP client in "Agent" mode. It allows users to explore tables, columns, foreign keys, triggers, stored procedures and more simply by asking questions like "Explain the code for the interest calculation stored procedure". You can also ask it to help with SQL, since it knows your schema. This is ideal for developers, DBAs, and data analysts who want to streamline schema comprehension and query development without diving into dense documentation.
    title: SchemaCrawler AI
    type: server
    longLived: true
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/schemacrawler-ai
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/schemacrawler-ai.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/schemacrawler-ai.json
    source: https://github.com/schemacrawler/SchemaCrawler-AI/tree/docker-mcp-registry
    upstream: https://github.com/schemacrawler/SchemaCrawler-AI
    icon: https://avatars.githubusercontent.com/u/58572?v=4
    tools:
      - name: describe-routines
      - name: describe-tables
      - name: get-schemacrawler-version
      - name: lint
      - name: list
      - name: list-across-tables
      - name: server-information
      - name: table-sample
    secrets:
      - name: schemacrawler-ai.database_user
        env: SCHCRWLR_DATABASE_USER
        example: SA
      - name: schemacrawler-ai.database_password
        env: SCHCRWLR_DATABASE_PASSWORD
        example: super_S3cret
    env:
      - name: SCHCRWLR_JDBC_URL
        value: '{{schemacrawler-ai.url_connection.jdbc_url}}'
      - name: SCHCRWLR_SERVER
        value: '{{schemacrawler-ai.server_connection.server}}'
      - name: SCHCRWLR_HOST
        value: '{{schemacrawler-ai.server_connection.host}}'
      - name: SCHCRWLR_PORT
        value: '{{schemacrawler-ai.server_connection.port}}'
      - name: SCHCRWLR_DATABASE
        value: '{{schemacrawler-ai.server_connection.database}}'
      - name: SCHCRWLR_INFO_LEVEL
        value: '{{schemacrawler-ai.general.info_level}}'
      - name: SCHCRWLR_LOG_LEVEL
        value: '{{schemacrawler-ai.general.log_level}}'
    volumes:
      - '{{schemacrawler-ai.volume.host_share}}:/share'
    prompts: 0
    resources: {}
    config:
      - name: schemacrawler-ai
        description: Configure SchemaCrawler AI and its connection to the database
        type: object
        properties:
          url_connection:
            type: object
            properties:
              jdbc_url:
                type: string
                description: --url JDBC URL for database connection
            required:
              - jdbc_url
          server_connection:
            type: object
            properties:
              server:
                type: string
                description: --server SchemaCrawler database plugin
              host:
                type: string
                description: --host Database host (optional)
              port:
                type: integer
                description: --port Database port (optional)
              database:
                type: string
                description: --database Database to connect to (optional)
            required:
              - server
          general:
            type: object
            properties:
              info_level:
                type: string
                description: --info-level How much database metadata to retrieve
                default: standard
            required:
              - info_level
          volume:
            type: object
            properties:
              host_share:
                type: string
                description: Host volume to map within the Docker container
            required:
              - host_share
        anyOf:
          - required:
              - url_connection
          - required:
              - server_connection
    metadata:
      githubStars: 2
      category: database
      tags:
        - ai
        - database
      license: Other
      owner: schemacrawler
  schogini-mcp-image-border:
    description: This adds a border to an image and returns base64 encoded image.
    title: Schogini MCP Image Border
    type: server
    dateAdded: "2025-09-04T18:21:22Z"
    image: mcp/schogini_mcp_image_border
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/schogini-mcp-image-border.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/schogini-mcp-image-border.json
    source: https://github.com/schogini/schogini_mcp_image_border/tree/main
    upstream: https://github.com/schogini/schogini_mcp_image_border
    icon: https://d1yei2z3i6k35z.cloudfront.net/7429984/669a56c4ca69e_SCHOGINI-LOGO-ROUND.png
    tools:
      - name: add-two-numbers
      - name: image-border
      - name: image-meta
    prompts: 0
    resources: {}
    metadata:
      category: productivity
      tags:
        - productivity
      owner: schogini
  scorecard-remote:
    description: AI Evaluation.
    title: Scorecard
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/scorecard-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/scorecard-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://scorecard-mcp.dare-d5b.workers.dev/sse
    icon: https://www.google.com/s2/favicons?domain=workers.dev&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: ai
      tags:
        - ai
        - evaluation
        - testing
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: scorecard-remote
  scrapegraph:
    description: ScapeGraph MCP Server.
    title: ScrapeGraph
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/scrapegraph
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/scrapegraph.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/scrapegraph.json
    source: https://github.com/ScrapeGraphAI/scrapegraph-mcp/tree/main
    upstream: https://github.com/ScrapeGraphAI/scrapegraph-mcp
    icon: https://avatars.githubusercontent.com/u/171017415?s=200&v=4
    tools:
      - name: markdownify
      - name: searchscraper
      - name: smartcrawler_fetch_results
      - name: smartcrawler_initiate
      - name: smartscraper
    secrets:
      - name: scrapegraph.api_key
        env: SGAI_API_KEY
        example: YOUR_SGAI_API_KEY
    prompts: 0
    resources: {}
    metadata:
      githubStars: 36
      category: devops
      tags:
        - scrapegraph
        - devops
      license: MIT License
      owner: ScrapeGraphAI
  scrapezy:
    description: A Model Context Protocol server for Scrapezy that enables AI models to extract structured data from websites.
    title: Scrapezy
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/scrapezy
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/scrapezy.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/scrapezy.json
    source: https://github.com/Scrapezy/mcp/tree/main
    upstream: https://github.com/Scrapezy/mcp
    icon: https://avatars.githubusercontent.com/u/196929482?s=200&v=4
    tools:
      - name: extract-structured-data
    secrets:
      - name: scrapezy.auth_token
        env: SCRAPEZY_API_KEY
        example: your_api_key
    prompts: 0
    resources: {}
    metadata:
      githubStars: 7
      category: devops
      tags:
        - scrapezy
        - devops
      license: MIT License
      owner: Scrapezy
  securenote-link-mcp-server:
    description: SecureNote.link MCP Server - allowing AI agents to securely share sensitive information through end-to-end encrypted notes.
    title: Securenote.link mcp server
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/securenote-link-mcp-server
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/securenote-link-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/securenote-link-mcp-server.json
    source: https://github.com/jackalterman/securenote-link-MCP-server/tree/main
    upstream: https://github.com/jackalterman/securenote-link-MCP-server
    icon: https://avatars.githubusercontent.com/u/5723207?v=5
    tools:
      - name: check_api_health
      - name: get_instructions
      - name: retrieve_and_decrypt_secret
      - name: send_secure_note
      - name: send_secure_note_return_api_url_and_key
    prompts: 0
    resources: {}
    metadata:
      category: communication
      tags:
        - communication
      owner: jackalterman
  semgrep-remote:
    description: Software Development.
    title: Semgrep
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/semgrep-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/semgrep-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.semgrep.ai/sse
    icon: https://www.google.com/s2/favicons?domain=semgrep.ai&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: security
      tags:
        - security
        - code-analysis
        - sast
        - remote
      license: Apache License 2.0
      owner: docker
  sentry:
    description: A Model Context Protocol server for retrieving and analyzing issues from Sentry.io. This server provides tools to inspect error reports, stacktraces, and other debugging information from your Sentry account.
    title: Sentry (Archived)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/sentry
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/sentry.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/sentry.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24/src/sentry
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/1396951?s=200&v=4
    tools:
      - name: get_sentry_issue
    secrets:
      - name: sentry.auth_token
        env: SENTRY_AUTH_TOKEN
        example: YOUR_SENTRY_TOKEN
    command:
      - --auth-token
      - $SENTRY_AUTH_TOKEN
    prompts: 0
    resources: {}
    metadata:
      githubStars: 66823
      category: devops
      tags:
        - sentry
        - devops
      license: MIT License
      owner: modelcontextprotocol
  sentry-remote:
    description: Software Development.
    title: Sentry
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/sentry-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/sentry-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.sentry.dev/sse
    icon: https://www.google.com/s2/favicons?domain=sentry.io&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: monitoring
      tags:
        - monitoring
        - error-tracking
        - debugging
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: sentry-remote
  sequa:
    description: Stop stitching context for Copilot and Cursor. With Sequa MCP, your AI tools know your entire codebase and docs out of the box.
    title: Sequa.AI
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/sequa
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/sequa.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/sequa.json
    source: https://github.com/sequa-ai/sequa-mcp/tree/main
    upstream: https://github.com/sequa-ai/sequa-mcp
    icon: https://avatars.githubusercontent.com/u/187640573?v=4
    tools:
      - name: system_context_mfL47pSj
    secrets:
      - name: sequa.api_key
        env: API_KEY
        example: your_sequa_api_key
    env:
      - name: MCP_SERVER_URL
        value: '{{sequa.mcp_server_url}}'
    prompts: 0
    resources: {}
    config:
      - name: sequa
        description: Configure the connection to Sequa.AI
        type: object
        properties:
          mcp_server_url:
            type: string
    metadata:
      githubStars: 5
      category: devops
      tags:
        - search
        - ai
        - devops
      license: MIT License
      owner: sequa-ai
  sequentialthinking:
    description: Dynamic and reflective problem-solving through thought sequences.
    title: Sequential Thinking (Reference)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/sequentialthinking
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/sequentialthinking.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/sequentialthinking.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.6/src/sequentialthinking
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: sequentialthinking
    prompts: 0
    resources: {}
    metadata:
      githubStars: 66823
      category: ai
      tags:
        - mcp
        - ai
      license: MIT License
      owner: modelcontextprotocol
  short-io-remote:
    description: Link shortener.
    title: Short.io
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/short-io-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/short-io-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://ai-assistant.short.io/mcp
    icon: https://www.google.com/s2/favicons?domain=short.io&sz=64
    tools: []
    secrets:
      - name: short-io-remote.api_key
        env: SHORT_IO_REMOTE_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: tools
      tags:
        - tools
        - url-shortener
        - analytics
        - remote
      license: Apache License 2.0
      owner: docker
  simplescraper-remote:
    description: Web Scraping.
    title: Simplescraper
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/simplescraper-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/simplescraper-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.simplescraper.io/mcp
    icon: https://www.google.com/s2/favicons?domain=simplescraper.io&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: automation
      tags:
        - automation
        - web-scraping
        - data-extraction
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: simplescraper-remote
  singlestore:
    description: MCP server for interacting with SingleStore Management API and services.
    title: Singlestore
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/singlestore
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/singlestore.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/singlestore.json
    source: https://github.com/singlestore-labs/mcp-server-singlestore/tree/main
    upstream: https://github.com/singlestore-labs/mcp-server-singlestore
    icon: https://avatars.githubusercontent.com/u/79943160?v=4
    tools:
      - name: create_job_from_notebook
      - name: create_notebook_file
      - name: create_starter_workspace
      - name: delete_job
      - name: get_job
      - name: get_user_info
      - name: list_regions
      - name: list_sharedtier_regions
      - name: list_starter_workspaces
      - name: organization_info
      - name: resume_workspace
      - name: run_sql
      - name: terminate_starter_workspace
      - name: upload_notebook_file
      - name: workspace_groups_info
      - name: workspaces_info
    secrets:
      - name: singlestore.mcp_api_key
        env: MCP_API_KEY
        example: <MCP_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      githubStars: 26
      category: database
      tags:
        - singlestore
        - database
      license: MIT License
      owner: singlestore-labs
  slack:
    description: Interact with Slack Workspaces over the Slack API.
    title: Slack (Archived)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/slack
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/slack.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/slack.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/6911160?s=200&v=4
    tools:
      - name: slack_add_reaction
      - name: slack_get_channel_history
      - name: slack_get_thread_replies
      - name: slack_get_user_profile
      - name: slack_get_users
      - name: slack_list_channels
      - name: slack_post_message
      - name: slack_reply_to_thread
    secrets:
      - name: slack.bot_token
        env: SLACK_BOT_TOKEN
        example: xoxb-your-bot-token
    env:
      - name: SLACK_TEAM_ID
        value: '{{slack.team_id}}'
      - name: SLACK_CHANNEL_IDS
        value: '{{slack.channel_ids}}'
    prompts: 0
    resources: {}
    config:
      - name: slack
        description: Configure the connection to Slack
        type: object
        properties:
          team_id:
            type: string
          channel_ids:
            type: string
        required:
          - team_id
    metadata:
      githubStars: 66823
      category: communication
      tags:
        - slack
        - communication
      license: MIT License
      owner: modelcontextprotocol
  smartbear:
    description: SmartBear's official MCP Server for API Hub, Test Hub and Insight Hub.
    title: SmartBear MCP Server
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/smartbear
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/smartbear.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/smartbear.json
    source: https://github.com/SmartBear/smartbear-mcp/tree/main
    upstream: https://github.com/SmartBear/smartbear-mcp
    icon: https://avatars.githubusercontent.com/u/1644671?s=200&v=4
    tools:
      - name: api_hub_create_portal
      - name: api_hub_create_portal_product
      - name: api_hub_delete_portal
      - name: api_hub_delete_portal_product
      - name: api_hub_get_portal
      - name: api_hub_get_portal_product
      - name: api_hub_list_portal_products
      - name: api_hub_list_portals
      - name: api_hub_update_portal
      - name: api_hub_update_portal_product
      - name: reflect_cancel_suite_execution
      - name: reflect_execute_suite
      - name: reflect_get_suite_execution_status
      - name: reflect_get_test_status
      - name: reflect_list_suite_executions
      - name: reflect_list_suites
      - name: reflect_list_tests
      - name: reflect_run_test
    secrets:
      - name: smartbear.insight_hub_auth_token
        env: INSIGHT_HUB_AUTH_TOKEN
        example: ""
      - name: smartbear.insight_hub_project_api_key
        env: INSIGHT_HUB_PROJECT_API_KEY
        example: ""
      - name: smartbear.reflect_api_token
        env: REFLECT_API_TOKEN
        example: <your-reflect-api-token>
      - name: smartbear.api_hub_api_key
        env: API_HUB_API_KEY
        example: <your-api-hub-api-key>
    env:
      - name: MCP_SERVER_INSIGHT_HUB_API_KEY
        value: '{{smartbear.mcp_server_insight_hub_api_key}}'
    prompts: 0
    resources: {}
    config:
      - name: smartbear
        description: Configure the connection to SmartBear services
        type: object
        properties:
          mcp_server_insight_hub_api_key:
            type: string
    metadata:
      githubStars: 17
      category: devops
      tags:
        - smartbear
        - devops
        - api-testing
        - monitoring
      license: MIT License
      owner: SmartBear
  sonarqube:
    description: Interact with SonarQube Cloud, Server and Community build over the web API. Analyze code to identify quality and security issues.
    title: SonarQube
    type: server
    dateAdded: "2025-07-01T12:14:18Z"
    image: mcp/sonarqube
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/sonarqube.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/sonarqube.json
    source: https://github.com/SonarSource/sonarqube-mcp-server/tree/master
    upstream: https://github.com/SonarSource/sonarqube-mcp-server
    icon: https://avatars.githubusercontent.com/u/545988?s=200&v=4
    tools:
      - name: analyze_code_snippet
      - name: change_sonar_issue_status
      - name: create_webhook
      - name: get_component_measures
      - name: get_project_quality_gate_status
      - name: get_raw_source
      - name: get_scm_info
      - name: get_system_health
      - name: get_system_info
      - name: get_system_logs
      - name: get_system_status
      - name: list_languages
      - name: list_portfolios
      - name: list_quality_gates
      - name: list_rule_repositories
      - name: list_webhooks
      - name: ping_system
      - name: search_metrics
      - name: search_my_sonarqube_projects
      - name: search_sonar_issues_in_projects
      - name: show_rule
    secrets:
      - name: sonarqube.token
        env: SONARQUBE_TOKEN
        example: YOUR_SONARQUBE_TOKEN
    env:
      - name: SONARQUBE_URL
        value: '{{sonarqube.url}}'
      - name: SONARQUBE_ORG
        value: '{{sonarqube.org}}'
    prompts: 0
    resources: {}
    config:
      - name: sonarqube
        description: Configure the connection to SonarQube
        type: object
        properties:
          url:
            type: string
            description: URL of the SonarQube instance, to provide only for SonarQube Server or Community Build
          org:
            type: string
            description: Organization key for SonarQube Cloud, not required for SonarQube Server or Community Build
    metadata:
      githubStars: 85
      category: productivity
      tags:
        - sonarqube
      license: Other
      owner: SonarSource
  SQLite:
    description: Database interaction and business intelligence capabilities.
    title: SQLite (Archived)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/sqlite
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/SQLite.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/SQLite.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24/src/sqlite
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/48680494?v=4
    tools:
      - name: append_insight
      - name: create_table
      - name: describe_table
      - name: list_tables
      - name: read_query
      - name: write_query
    command:
      - --db-path
      - /mcp/db.sqlite
    volumes:
      - mcp-sqlite:/mcp
    prompts: 0
    resources: {}
    metadata:
      githubStars: 66823
      category: database
      tags:
        - sqlite
        - database
      license: MIT License
      owner: modelcontextprotocol
  square-remote:
    description: Payments.
    title: Square
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/square-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/square-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.squareup.com/sse
    icon: https://www.google.com/s2/favicons?domain=squareup.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: payments
      tags:
        - payments
        - pos
        - commerce
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: square-remote
  stripe-remote:
    description: Payments.
    title: Stripe
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/stripe-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/stripe-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.stripe.com
    icon: https://www.google.com/s2/favicons?domain=stripe.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: payments
      tags:
        - payments
        - finance
        - billing
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: stripe-remote
  stytch-remote:
    description: Authentication.
    title: Stytch
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/stytch-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/stytch-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: http://mcp.stytch.dev/mcp
    icon: https://www.google.com/s2/favicons?domain=stytch.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: security
      tags:
        - security
        - authentication
        - identity
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: stytch-remote
  supadata:
    description: Official Supadata MCP Server - Adds powerful video & web scraping to Cursor, Claude and any other LLM clients.
    title: Supadata
    type: server
    dateAdded: "2025-09-04T18:21:22Z"
    image: ghcr.io/supadata-ai/mcp@sha256:064f49acddbaa4f86080116d6be7332de75f26a409d3e2f1954d87dca1521e2e
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/supadata.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/supadata.json
    source: https://github.com/supadata-ai/mcp/tree/main
    upstream: https://github.com/supadata-ai/mcp
    icon: https://avatars.githubusercontent.com/u/194430777?s=48&v=4
    tools:
      - name: supadata_check_crawl_status
      - name: supadata_check_transcript_status
      - name: supadata_crawl
      - name: supadata_map
      - name: supadata_scrape
      - name: supadata_transcript
    secrets:
      - name: supadata.api_key
        env: SUPADATA_API_KEY
        example: YOUR-API-KEY
    prompts: 0
    resources: {}
    metadata:
      githubStars: 10
      category: search
      tags:
        - supadata
        - transcript
        - scraping
        - youtube
        - tiktok
        - twitter
        - whisper
      license: MIT License
      owner: supadata-ai
  suzieq:
    description: MCP Server to interact with a SuzieQ network observability instance via its REST API.
    title: Suzieq MCP
    type: server
    dateAdded: "2025-06-11T14:18:50Z"
    image: mcp/suzieq-mcp
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/suzieq.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/suzieq.json
    source: https://github.com/PovedaAqui/suzieq-mcp/tree/main
    upstream: https://github.com/PovedaAqui/suzieq-mcp
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: run_suzieq_show
      - name: run_suzieq_summarize
    secrets:
      - name: suzieq.api_key
        env: SUZIEQ_API_KEY
        example: none
    env:
      - name: SUZIEQ_API_ENDPOINT
        value: '{{suzieq.api_endpoint}}'
    prompts: 0
    resources: {}
    metadata:
      githubStars: 3
      category: monitoring
      tags:
        - observability
      license: MIT License
      owner: PovedaAqui
  task-orchestrator:
    description: Model Context Protocol (MCP) server for comprehensive task and feature management, providing AI assistants with a structured, context-efficient way to interact with project data.
    title: Task orchestrator
    type: server
    dateAdded: "2025-09-04T18:21:22Z"
    image: ghcr.io/jpicklyk/task-orchestrator@sha256:a33dc82a0874111f33bbdffe3eaaf5c2acf7411159940069eefb0d3b717f2c2a
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/task-orchestrator.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/task-orchestrator.json
    source: https://github.com/jpicklyk/task-orchestrator/tree/main
    upstream: https://github.com/jpicklyk/task-orchestrator
    icon: https://avatars.githubusercontent.com/u/5747775?v=4
    tools:
      - name: add_section
      - name: add_template_section
      - name: apply_template
      - name: bulk_create_sections
      - name: bulk_delete_sections
      - name: bulk_update_sections
      - name: create_dependency
      - name: create_feature
      - name: create_project
      - name: create_task
      - name: create_template
      - name: delete_dependency
      - name: delete_feature
      - name: delete_project
      - name: delete_section
      - name: delete_task
      - name: delete_template
      - name: disable_template
      - name: enable_template
      - name: get_feature
      - name: get_overview
      - name: get_project
      - name: get_sections
      - name: get_task
      - name: get_task_dependencies
      - name: get_template
      - name: list_templates
      - name: reorder_sections
      - name: search_features
      - name: search_projects
      - name: search_tasks
      - name: update_feature
      - name: update_project
      - name: update_section
      - name: update_section_metadata
      - name: update_section_text
      - name: update_task
      - name: update_template_metadata
    volumes:
      - mcp-task-data:/app/data
    prompts: 0
    resources: {}
    metadata:
      githubStars: 72
      category: ai
      tags:
        - tasks
        - database
      license: MIT License
      owner: jpicklyk
  tavily:
    description: The Tavily MCP server provides seamless interaction with the tavily-search and tavily-extract tools, real-time web search capabilities through the tavily-search tool and Intelligent data extraction from web pages via the tavily-extract tool.
    title: Tavily
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/tavily
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/tavily.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/tavily.json
    source: https://github.com/tavily-ai/tavily-mcp/tree/main
    upstream: https://github.com/tavily-ai/tavily-mcp
    icon: https://avatars.githubusercontent.com/u/170207473?s=200&v=4
    tools:
      - name: tavily-crawl
      - name: tavily-extract
      - name: tavily-map
      - name: tavily-search
    secrets:
      - name: tavily.api_token
        env: TAVILY_API_KEY
        example: your-tavily-apikey-here
    prompts: 0
    resources: {}
    metadata:
      githubStars: 727
      category: search
      tags:
        - tavily
        - search
      license: MIT License
      owner: tavily-ai
  teamwork:
    description: Tools for Teamwork.com products.
    title: Teamwork
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/teamwork
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/teamwork.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/teamwork.json
    source: https://github.com/teamwork/mcp/tree/main
    upstream: https://github.com/teamwork/mcp
    icon: https://avatars.githubusercontent.com/u/4037476?v=4
    tools:
      - name: twprojects-add_project_member
      - name: twprojects-complete_timer
      - name: twprojects-create_comment
      - name: twprojects-create_company
      - name: twprojects-create_milestone
      - name: twprojects-create_project
      - name: twprojects-create_tag
      - name: twprojects-create_task
      - name: twprojects-create_tasklist
      - name: twprojects-create_team
      - name: twprojects-create_timelog
      - name: twprojects-create_timer
      - name: twprojects-create_user
      - name: twprojects-get_comment
      - name: twprojects-get_company
      - name: twprojects-get_milestone
      - name: twprojects-get_project
      - name: twprojects-get_tag
      - name: twprojects-get_task
      - name: twprojects-get_tasklist
      - name: twprojects-get_team
      - name: twprojects-get_timelog
      - name: twprojects-get_timer
      - name: twprojects-get_user
      - name: twprojects-get_user_me
      - name: twprojects-list_activities
      - name: twprojects-list_activities_by_project
      - name: twprojects-list_comments
      - name: twprojects-list_comments_by_file_version
      - name: twprojects-list_comments_by_milestone
      - name: twprojects-list_comments_by_notebook
      - name: twprojects-list_comments_by_task
      - name: twprojects-list_companies
      - name: twprojects-list_milestones
      - name: twprojects-list_milestones_by_project
      - name: twprojects-list_projects
      - name: twprojects-list_tags
      - name: twprojects-list_tasklists
      - name: twprojects-list_tasklists_by_project
      - name: twprojects-list_tasks
      - name: twprojects-list_tasks_by_project
      - name: twprojects-list_tasks_by_tasklist
      - name: twprojects-list_teams
      - name: twprojects-list_teams_by_company
      - name: twprojects-list_teams_by_project
      - name: twprojects-list_timelogs
      - name: twprojects-list_timelogs_by_project
      - name: twprojects-list_timelogs_by_task
      - name: twprojects-list_timers
      - name: twprojects-list_users
      - name: twprojects-list_users_by_project
      - name: twprojects-pause_timer
      - name: twprojects-resume_timer
      - name: twprojects-update_comment
      - name: twprojects-update_company
      - name: twprojects-update_milestone
      - name: twprojects-update_project
      - name: twprojects-update_tag
      - name: twprojects-update_task
      - name: twprojects-update_tasklist
      - name: twprojects-update_team
      - name: twprojects-update_timelog
      - name: twprojects-update_timer
      - name: twprojects-update_user
    secrets:
      - name: teamwork.tw_mcp_bearer_token
        env: TW_MCP_BEARER_TOKEN
        example: <TW_MCP_BEARER_TOKEN>
        required: true
    prompts: 0
    resources: {}
    metadata:
      githubStars: 5
      category: productivity
      tags:
        - ai
        - artificial-intelligence
        - teamwork
      license: MIT License
      owner: Teamwork
  telnyx-remote:
    description: Communication.
    title: Telnyx
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/telnyx-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/telnyx-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://api.telnyx.com/v2/mcp
    icon: https://www.google.com/s2/favicons?domain=telnyx.com&sz=64
    tools: []
    secrets:
      - name: telnyx-remote.api_key
        env: TELNYX_REMOTE_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: communication
      tags:
        - communication
        - telephony
        - sms
        - remote
      license: Apache License 2.0
      owner: docker
  tembo:
    description: MCP server for Tembo Cloud's platform API.
    title: Tembo
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/tembo
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/tembo.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/tembo.json
    source: https://github.com/tembo-io/mcp-server-tembo/tree/main
    upstream: https://github.com/tembo-io/mcp-server-tembo
    icon: https://avatars.githubusercontent.com/u/113815875?s=200&v=4
    tools:
      - name: ask_tembo
      - name: create_instance
      - name: delete_instance
      - name: get_all_apps
      - name: get_all_instances
      - name: get_app
      - name: get_instance
      - name: get_instance_schema
      - name: patch_instance
      - name: restore_instance
    secrets:
      - name: tembo.api_token
        env: TEMBO_API_KEY
        example: your-tembo-apikey-here
    prompts: 0
    resources: {}
    metadata:
      githubStars: 7
      category: devops
      tags:
        - tembo
        - devops
      license: MIT License
      owner: tembo-io
  terraform:
    description: The Terraform MCP Server provides seamless integration with Terraform ecosystem, enabling advanced automation and interaction capabilities for Infrastructure as Code (IaC) development.
    title: Hashicorp Terraform
    type: server
    dateAdded: "2025-05-20T20:08:35Z"
    image: hashicorp/terraform-mcp-server
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/terraform.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/terraform.json
    source: https://github.com/hashicorp/terraform-mcp-server/tree/main
    upstream: https://github.com/hashicorp/terraform-mcp-server
    icon: https://avatars.githubusercontent.com/u/761456?v=4
    tools:
      - name: get_latest_module_version
      - name: get_latest_provider_version
      - name: get_module_details
      - name: get_policy_details
      - name: get_provider_details
      - name: search_modules
      - name: search_policies
      - name: search_providers
    prompts: 0
    resources: {}
    metadata:
      githubStars: 901
      category: devops
      tags:
        - hashicorp
        - terraform
      license: Mozilla Public License 2.0
      owner: hashicorp
  text-to-graphql:
    description: Transform natural language queries into GraphQL queries using an AI agent. Provides schema management, query validation, execution, and history tracking.
    title: Text-to-GraphQL
    type: server
    dateAdded: "2025-09-04T18:14:00Z"
    image: mcp/text-to-graphql
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/text-to-graphql.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/text-to-graphql.json
    source: https://github.com/Arize-ai/text-to-graphql-mcp/tree/main
    upstream: https://github.com/Arize-ai/text-to-graphql-mcp
    icon: https://upload.wikimedia.org/wikipedia/commons/1/17/GraphQL_Logo.svg
    tools:
      - name: execute_graphql_query
      - name: generate_graphql_query
      - name: get_query_examples
      - name: get_query_history
      - name: validate_graphql_query
    secrets:
      - name: text-to-graphql.openai_api_key
        env: OPENAI_API_KEY
        example: sk-proj-xxx
      - name: text-to-graphql.graphql_endpoint
        env: GRAPHQL_ENDPOINT
        example: https://your-graphql-api.com/graphql
      - name: text-to-graphql.graphql_api_key
        env: GRAPHQL_API_KEY
        example: your_api_key_here
    prompts: 0
    resources: {}
    config:
      - name: text-to-graphql
        description: Configure API keys and model settings for text-to-graphql
        type: object
        properties:
          graphql_auth_type:
            type: string
            description: Authentication method for GraphQL API
          model_name:
            type: string
            description: OpenAI model to use
          model_temperature:
            type: number
            description: Model temperature for responses
    metadata:
      githubStars: 17
      category: devops
      tags:
        - graphql
        - ai
        - natural-language
        - api
        - query-generation
      license: Other
      owner: Arize-ai
  tigris:
    description: Tigris is a globally distributed S3-compatible object storage service that provides low latency anywhere in the world, enabling developers to store and access any amount of data for a wide range of use cases.
    title: Tigris Data
    type: server
    dateAdded: "2025-05-20T20:08:35Z"
    image: mcp/tigris
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/tigris.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/tigris.json
    source: https://github.com/tigrisdata/tigris-mcp-server/tree/main
    upstream: https://github.com/tigrisdata/tigris-mcp-server
    icon: https://avatars.githubusercontent.com/u/95787860?v=4
    tools:
      - name: tigris_create_bucket
      - name: tigris_delete_bucket
      - name: tigris_delete_object
      - name: tigris_get_object
      - name: tigris_get_signed_url_object
      - name: tigris_list_buckets
      - name: tigris_list_objects
      - name: tigris_put_object
      - name: tigris_put_object_from_path
      - name: tigris_upload_file_and_get_url
    secrets:
      - name: tigris.aws_secret_access_key
        env: AWS_SECRET_ACCESS_KEY
        example: tsec_xxxxxxxxxxxxxxxxxxx
    env:
      - name: AWS_ACCESS_KEY_ID
        value: '{{tigris.aws_access_key_id}}'
      - name: AWS_ENDPOINT_URL_S3
        value: '{{tigris.aws_endpoint_url_s3}}'
    prompts: 0
    resources: {}
    config:
      - name: tigris
        description: Configure the connection to Tigris
        type: object
        properties:
          aws_access_key_id:
            type: string
          aws_endpoint_url_s3:
            type: string
        required:
          - aws_access_key_id
          - aws_endpoint_url_s3
    metadata:
      githubStars: 3
      category: devops
      tags:
        - s3-storage
        - storage
        - tigris
        - tigris-data
      license: MIT License
      owner: tigrisdata
  time:
    description: Time and timezone conversion capabilities.
    title: Time (Reference)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/time
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/time.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/time.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24/src/time
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: convert_time
      - name: get_current_time
    prompts: 0
    resources: {}
    metadata:
      githubStars: 66823
      category: devops
      tags:
        - time
        - devops
      license: MIT License
      owner: modelcontextprotocol
  triplewhale:
    description: Triplewhale MCP Server.
    title: Triplewhale
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/triplewhale
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/triplewhale.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/triplewhale.json
    source: https://github.com/Triple-Whale/mcp-server-triplewhale/tree/master
    upstream: https://github.com/Triple-Whale/mcp-server-triplewhale
    icon: https://avatars.githubusercontent.com/u/79388081?s=200&v=4
    tools:
      - name: moby
    secrets:
      - name: triplewhale.api_key
        env: TRIPLEWHALE_API_KEY
        example: your-triplewhale-api-key-here
    prompts: 0
    resources: {}
    metadata:
      githubStars: 2
      category: devops
      tags:
        - triplewhale
        - devops
      license: MIT License
      owner: Triple-Whale
  turkish-airlines-remote:
    description: Airlines.
    title: Turkish Airlines
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/turkish-airlines-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/turkish-airlines-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.turkishtechlab.com/mcp
    icon: https://www.google.com/s2/favicons?domain=turkishtechlab.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: travel
      tags:
        - travel
        - airlines
        - booking
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: turkish-airlines-remote
  vercel-remote:
    description: Software Development.
    title: Vercel
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/vercel-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/vercel-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.vercel.com/
    icon: https://www.google.com/s2/favicons?domain=vercel.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: devops
      tags:
        - devops
        - hosting
        - deployment
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: vercel-remote
  veyrax:
    description: VeyraX MCP is the only connection you need to access all your tools in any MCP-compatible environment.
    title: VeyraX
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/veyrax
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/veyrax.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/veyrax.json
    source: https://github.com/VeyraX/veyrax-mcp/tree/main
    upstream: https://github.com/VeyraX/veyrax-mcp
    icon: https://avatars.githubusercontent.com/u/201344226?s=200&v=4
    tools:
      - name: get_flow
      - name: get_tools
      - name: tool_call
    secrets:
      - name: veyrax.api_key
        env: VEYRAX_API_KEY
        example: your-veyrax-api-key-here
    prompts: 0
    resources: {}
    metadata:
      githubStars: 42
      category: devops
      tags:
        - veyrax
        - devops
      owner: VeyraX
  vizro:
    description: provides tools and templates to create a functioning Vizro chart or dashboard step by step.
    title: Vizro
    type: server
    dateAdded: "2025-05-29T20:04:34Z"
    image: mcp/vizro
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/vizro.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/vizro.json
    source: https://github.com/mckinsey/vizro/tree/main/vizro-mcp
    upstream: https://github.com/mckinsey/vizro
    icon: https://avatars.githubusercontent.com/u/4265350?v=4
    tools:
      - name: get_model_json_schema
      - name: get_sample_data_info
      - name: get_vizro_chart_or_dashboard_plan
      - name: load_and_analyze_data
      - name: validate_chart_code
      - name: validate_dashboard_config
    prompts: 0
    resources: {}
    metadata:
      githubStars: 3312
      category: data-visualization
      tags:
        - dashboard
        - data-visualization
        - plotly
        - plotly-dash
        - pydantic
        - python
        - visualization
      license: Apache License 2.0
      owner: mckinsey
  waystation-remote:
    description: Productivity.
    title: WayStation
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/waystation-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/waystation-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://waystation.ai/mcp
    icon: https://www.google.com/s2/favicons?domain=waystation.ai&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: productivity
      tags:
        - productivity
        - workflow
        - automation
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: waystation-remote
  webflow:
    description: Model Context Protocol (MCP) server for the Webflow Data API.
    title: Webflow
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/webflow
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/webflow.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/webflow.json
    source: https://github.com/slimslenderslacks/mcp-server/tree/slim/docker
    upstream: https://github.com/webflow/mcp-server
    icon: https://avatars.githubusercontent.com/u/1229663?s=200&v=4
    tools:
      - name: collection_fields_create_option
      - name: collection_fields_create_reference
      - name: collection_fields_create_static
      - name: collection_fields_update
      - name: collections_create
      - name: collections_get
      - name: collections_items_create_item
      - name: collections_items_create_item_live
      - name: collections_items_list_items
      - name: collections_items_publish_items
      - name: collections_items_update_items
      - name: collections_items_update_items_live
      - name: collections_list
      - name: pages_get_content
      - name: pages_get_metadata
      - name: pages_list
      - name: pages_update_page_settings
      - name: pages_update_static_content
      - name: sites_get
      - name: sites_list
      - name: sites_publish
    secrets:
      - name: webflow.token
        env: WEBFLOW_TOKEN
        example: your_api_token
    prompts: 0
    resources: {}
    metadata:
      githubStars: 73
      category: devops
      tags:
        - webflow
        - devops
      license: MIT License
      owner: webflow
  webflow-remote:
    description: CMS.
    title: Webflow
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/webflow-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/webflow-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.webflow.com/sse
    icon: https://www.google.com/s2/favicons?domain=webflow.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: web
      tags:
        - web
        - cms
        - design
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: webflow-remote
  wikipedia-mcp:
    description: A Model Context Protocol (MCP) server that retrieves information from Wikipedia to provide context to LLMs.
    title: Wikipedia
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/wikipedia-mcp
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/wikipedia-mcp.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/wikipedia-mcp.json
    source: https://github.com/Rudra-ravi/wikipedia-mcp/tree/main
    upstream: https://github.com/Rudra-ravi/wikipedia-mcp
    icon: https://avatars.githubusercontent.com/u/56668?s=200&v=4
    tools:
      - name: extract_key_facts
      - name: get_article
      - name: get_coordinates
      - name: get_links
      - name: get_related_topics
      - name: get_sections
      - name: get_summary
      - name: search_wikipedia
      - name: summarize_article_for_query
      - name: summarize_article_section
    prompts: 0
    resources: {}
    metadata:
      githubStars: 96
      category: devops
      tags:
        - wikipedia-mcp
        - devops
      license: MIT License
      owner: Rudra-ravi
  wix-remote:
    description: CMS.
    title: Wix
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/wix-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/wix-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.wix.com/sse
    icon: https://www.google.com/s2/favicons?domain=wix.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: web
      tags:
        - web
        - cms
        - website-builder
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: wix-remote
  wolfram-alpha:
    description: Connect your chat repl to wolfram alpha computational intelligence.
    title: WolframAlpha
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/wolfram-alpha
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/wolfram-alpha.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/wolfram-alpha.json
    source: https://github.com/SecretiveShell/MCP-wolfram-alpha/tree/master
    upstream: https://github.com/SecretiveShell/MCP-wolfram-alpha
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/wolfram.svg
    tools:
      - name: query-wolfram-alpha
    secrets:
      - name: wolfram-alpha.api_key
        env: WOLFRAM_API_KEY
        example: your-app-id
    prompts: 0
    resources: {}
    metadata:
      githubStars: 59
      category: devops
      tags:
        - wolfram-alpha
        - devops
      license: MIT License
      owner: SecretiveShell
  youtube_transcript:
    description: Retrieves transcripts for given YouTube video URLs.
    title: YouTube transcripts
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/youtube-transcript
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/youtube_transcript.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/youtube_transcript.json
    source: https://github.com/jkawamoto/mcp-youtube-transcript/tree/main
    upstream: https://github.com/jkawamoto/mcp-youtube-transcript
    icon: https://avatars.githubusercontent.com/u/4052902?s=200&v=4
    tools:
      - name: get_transcript
      - name: get_video_info
    prompts: 0
    resources: {}
    metadata:
      githubStars: 70
      category: search
      tags:
        - youtube
        - search
      license: MIT License
      owner: jkawamoto
  zapier-remote:
    description: Automation.
    title: Zapier
    type: remote
    dateAdded: "2025-09-04T18:21:22Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/zapier-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/zapier-remote.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.zapier.com/sse
    icon: https://www.google.com/s2/favicons?domain=zapier.com&sz=64
    tools: []
    prompts: 0
    resources: {}
    metadata:
      category: automation
      tags:
        - automation
        - integration
        - workflow
        - remote
      license: Apache License 2.0
      owner: docker
    oauth:
      providers:
        - provider: zapier-remote
