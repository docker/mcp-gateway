version: 2
name: docker-mcp
displayName: Docker MCP Catalog
registry:
  atlassian:
    description: Tools for Atlassian products (Confluence and Jira). This integration supports both Atlassian Cloud and Jira Server/Data Center deployments.
    title: Atlassian
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/atlassian@sha256:85b5a316edf04eeee782647ed50edb61a365a59ebe2c8f9c241834061a7d0ad6
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/atlassian.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/atlassian.json
    source: https://github.com/sooperset/mcp-atlassian/tree/v0.11.2
    upstream: https://github.com/sooperset/mcp-atlassian
    icon: https://avatars.githubusercontent.com/u/43281909?s=200&v=4
    tools:
      - name: confluence_add_comment
      - name: confluence_add_label
      - name: confluence_create_page
      - name: confluence_delete_page
      - name: confluence_get_comments
      - name: confluence_get_labels
      - name: confluence_get_page
      - name: confluence_get_page_children
      - name: confluence_search
      - name: confluence_update_page
      - name: jira_add_comment
      - name: jira_add_worklog
      - name: jira_batch_create_issues
      - name: jira_batch_get_changelogs
      - name: jira_create_issue
      - name: jira_create_issue_link
      - name: jira_create_sprint
      - name: jira_delete_issue
      - name: jira_download_attachments
      - name: jira_get_agile_boards
      - name: jira_get_board_issues
      - name: jira_get_issue
      - name: jira_get_link_types
      - name: jira_get_project_issues
      - name: jira_get_project_versions
      - name: jira_get_sprint_issues
      - name: jira_get_sprints_from_board
      - name: jira_get_transitions
      - name: jira_get_user_profile
      - name: jira_get_worklog
      - name: jira_link_to_epic
      - name: jira_remove_issue_link
      - name: jira_search
      - name: jira_search_fields
      - name: jira_transition_issue
      - name: jira_update_issue
      - name: jira_update_sprint
    secrets:
      - name: atlassian.confluence.api_token
        env: CONFLUENCE_API_TOKEN
        example: your_api_token
      - name: atlassian.confluence.personal_token
        env: CONFLUENCE_PERSONAL_TOKEN
        example: your_api_token
      - name: atlassian.jira.api_token
        env: JIRA_API_TOKEN
        example: your_api_token
      - name: atlassian.jira.personal_token
        env: JIRA_PERSONAL_TOKEN
        example: your_api_token
    env:
      - name: CONFLUENCE_URL
        value: '{{atlassian.confluence.url}}'
      - name: CONFLUENCE_USERNAME
        value: '{{atlassian.confluence.username}}'
      - name: JIRA_URL
        value: '{{atlassian.jira.url}}'
      - name: JIRA_USERNAME
        value: '{{atlassian.jira.username}}'
    prompts: 0
    resources: {}
    config:
      - name: atlassian
        description: The MCP server is allowed to access these paths
        type: object
        properties:
          confluence:
            type: object
            properties:
              url:
                type: string
              username:
                type: string
            required:
              - url
          jira:
            type: object
            properties:
              url:
                type: string
              username:
                type: string
            required:
              - url
        anyOf:
          - required:
              - confluence
          - required:
              - jira
    metadata:
      pulls: 25790
      stars: 21
      githubStars: 3191
      category: productivity
      tags:
        - atlassian
        - confluence
        - jira
      license: MIT License
      owner: sooperset
  couchbase:
    description: Couchbase is a distributed document database with a powerful search engine and in-built operational and analytical capabilities.
    title: Couchbase
    type: server
    dateAdded: "2025-07-29T14:05:27Z"
    image: mcp/couchbase@sha256:96856e24d4b5e66325f0e95fbf3783766d698e6686cb4506b5c2ec0f884de1f7
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/couchbase.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/couchbase.json
    source: https://github.com/Couchbase-Ecosystem/mcp-server-couchbase/tree/main
    upstream: https://github.com/Couchbase-Ecosystem/mcp-server-couchbase
    icon: https://avatars.githubusercontent.com/u/605755?s=200&v=4
    tools:
      - name: delete_document_by_id
      - name: get_buckets_in_cluster
      - name: get_collections_in_scope
      - name: get_document_by_id
      - name: get_schema_for_collection
      - name: get_scopes_and_collections_in_bucket
      - name: get_scopes_in_bucket
      - name: get_server_configuration_status
      - name: run_sql_plus_plus_query
      - name: test_cluster_connection
      - name: upsert_document_by_id
    secrets:
      - name: couchbase.cb_password
        env: CB_PASSWORD
        example: <CB_PASSWORD>
    env:
      - name: CB_CONNECTION_STRING
        value: '{{couchbase.cb_connection_string}}'
      - name: CB_USERNAME
        value: '{{couchbase.cb_username}}'
      - name: CB_BUCKET_NAME
        value: '{{couchbase.cb_bucket_name}}'
      - name: CB_MCP_READ_ONLY_QUERY_MODE
        value: '{{couchbase.cb_mcp_read_only_query_mode}}'
    prompts: 0
    resources: {}
    config:
      - name: couchbase
        description: Configure the connection to Couchbase
        type: object
        properties:
          cb_connection_string:
            type: string
            description: Connection string for the Couchbase cluster.
          cb_username:
            type: string
            description: Username for the Couchbase cluster with access to the bucket.
          cb_bucket_name:
            type: string
            description: Bucket in the Couchbase cluster to use for the MCP server.
          cb_mcp_read_only_query_mode:
            type: string
            description: Setting to "true" (default) enables read-only query mode while running SQL++ queries.
    metadata:
      pulls: 1814
      stars: 2
      githubStars: 19
      category: database
      tags:
        - couchbase
        - database
      license: Apache License 2.0
      owner: Couchbase-Ecosystem
  dockerhub:
    description: Docker Hub official MCP server.
    title: Docker Hub
    type: server
    dateAdded: "2025-06-16T15:56:21Z"
    image: mcp/dockerhub@sha256:6d15361c655580c7aad72b0152daef9208b466577e794361f64904aa974f5e67
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/dockerhub.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/dockerhub.json
    source: https://github.com/docker/hub-mcp/tree/main
    upstream: https://github.com/docker/hub-mcp
    icon: https://avatars.githubusercontent.com/u/5429470?s=200&v=4
    tools:
      - name: checkRepository
      - name: checkRepositoryTag
      - name: createRepository
      - name: dockerHardenedImages
      - name: getPersonalNamespace
      - name: getRepositoryInfo
      - name: getRepositoryTag
      - name: listAllNamespacesMemberOf
      - name: listNamespaces
      - name: listRepositoriesByNamespace
      - name: listRepositoryTags
      - name: search
      - name: updateRepositoryInfo
    secrets:
      - name: dockerhub.pat_token
        env: HUB_PAT_TOKEN
        example: your_hub_pat_token
    command:
      - --transport=stdio
      - --username={{dockerhub.username}}
    prompts: 0
    resources: {}
    config:
      - name: dockerhub
        description: Configure connection to Docker Hub
        type: object
        properties:
          username:
            type: string
    metadata:
      pulls: 22168
      stars: 5
      githubStars: 66
      category: devops
      tags:
        - docker
        - dockerhub
      license: Apache License 2.0
      owner: docker
  duckduckgo:
    description: A Model Context Protocol (MCP) server that provides web search capabilities through DuckDuckGo, with additional features for content fetching and parsing.
    title: DuckDuckGo
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/duckduckgo@sha256:68eb20db6109f5c312a695fc5ec3386ad15d93ffb765a0b4eb1baf4328dec14f
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/duckduckgo.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/duckduckgo.json
    source: https://github.com/nickclyde/duckduckgo-mcp-server/tree/main
    upstream: https://github.com/nickclyde/duckduckgo-mcp-server
    icon: https://avatars.githubusercontent.com/u/342708?s=200&v=4
    tools:
      - name: fetch_content
      - name: search
    allowHosts:
      - html.duckduckgo.com:443
    prompts: 0
    resources: {}
    metadata:
      pulls: 74868
      stars: 6
      githubStars: 501
      category: devops
      tags:
        - duckduckgo
        - devops
      license: MIT License
      owner: nickclyde
  elasticsearch:
    description: Interact with your Elasticsearch indices through natural language conversations.
    title: Elasticsearch
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/elasticsearch@sha256:9c978b8277e32be0229e0c2f5c631e4106dd1c9c955ec361814588688582bcfd
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/elasticsearch.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/elasticsearch.json
    source: https://github.com/elastic/mcp-server-elasticsearch/tree/v0.4.0
    upstream: https://github.com/elastic/mcp-server-elasticsearch
    icon: https://avatars.githubusercontent.com/u/6764390?s=200&v=4
    tools:
      - name: esql
      - name: get_mappings
      - name: get_shards
      - name: list_indices
      - name: search
    secrets:
      - name: elasticsearch.api_key
        env: ES_API_KEY
        example: your-api-key
    env:
      - name: ES_URL
        value: '{{elasticsearch.url}}'
    command:
      - stdio
    prompts: 0
    resources: {}
    config:
      - name: elasticsearch
        description: Configure the connection to Elasticsearch
        type: object
        properties:
          url:
            type: string
        required:
          - url
    metadata:
      pulls: 7191
      stars: 10
      githubStars: 491
      category: search
      tags:
        - elasticsearch
        - search
      license: Apache License 2.0
      owner: elastic
  fetch:
    description: Fetches a URL from the internet and extracts its contents as markdown.
    title: Fetch (Reference)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/fetch@sha256:ef9535a3f07249142f9ca5a6033d7024950afdb6dc05e98292794a23e9f5dfbe
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/fetch.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/fetch.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24/src/fetch
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: fetch
    prompts: 0
    resources: {}
    metadata:
      pulls: 669710
      stars: 39
      githubStars: 69195
      category: devops
      tags:
        - fetch
        - devops
      license: MIT License
      owner: modelcontextprotocol
  git:
    description: Git repository interaction and automation.
    title: Git (Reference)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/git@sha256:ad6af958e79466a14b895891e772fdda28fdc12c06fff4a70637b66773303a2c
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/git.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/git.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24/src/git
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/18133?s=200&v=4
    tools:
      - name: git_add
      - name: git_checkout
      - name: git_commit
      - name: git_create_branch
      - name: git_diff
      - name: git_diff_staged
      - name: git_diff_unstaged
      - name: git_init
      - name: git_log
      - name: git_reset
      - name: git_show
      - name: git_status
    volumes:
      - '{{git.paths|volume|into}}'
    prompts: 0
    resources: {}
    config:
      - name: git
        description: The MCP server is allowed to access these paths
        type: object
        properties:
          paths:
            type: array
            items:
              type: string
        required:
          - paths
    metadata:
      pulls: 38205
      stars: 26
      githubStars: 69195
      category: devops
      tags:
        - gitl
        - devops
      license: MIT License
      owner: modelcontextprotocol
  github-official:
    description: Official GitHub MCP Server, by GitHub. Provides seamless integration with GitHub APIs, enabling advanced automation and interaction capabilities for developers and tools.
    title: GitHub Official
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: ghcr.io/github/github-mcp-server@sha256:e8e5663bdac87864ffa72d3a6d7f97e3df1f1b244da329b6b6a5d2d25deecdbb
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/github-official.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/github-official.json
    source: https://github.com/github/github-mcp-server/tree/main
    upstream: https://github.com/github/github-mcp-server
    icon: https://avatars.githubusercontent.com/u/9919?s=200&v=4
    tools:
      - name: add_comment_to_pending_review
      - name: add_issue_comment
      - name: add_sub_issue
      - name: assign_copilot_to_issue
      - name: cancel_workflow_run
      - name: create_and_submit_pull_request_review
      - name: create_branch
      - name: create_gist
      - name: create_issue
      - name: create_or_update_file
      - name: create_pending_pull_request_review
      - name: create_pull_request
      - name: create_repository
      - name: delete_file
      - name: delete_pending_pull_request_review
      - name: delete_workflow_run_logs
      - name: dismiss_notification
      - name: download_workflow_run_artifact
      - name: fork_repository
      - name: get_code_scanning_alert
      - name: get_commit
      - name: get_dependabot_alert
      - name: get_discussion
      - name: get_discussion_comments
      - name: get_file_contents
      - name: get_global_security_advisory
      - name: get_issue
      - name: get_issue_comments
      - name: get_job_logs
      - name: get_latest_release
      - name: get_me
      - name: get_notification_details
      - name: get_project
      - name: get_pull_request
      - name: get_pull_request_diff
      - name: get_pull_request_files
      - name: get_pull_request_review_comments
      - name: get_pull_request_reviews
      - name: get_pull_request_status
      - name: get_release_by_tag
      - name: get_secret_scanning_alert
      - name: get_tag
      - name: get_team_members
      - name: get_teams
      - name: get_workflow_run
      - name: get_workflow_run_logs
      - name: get_workflow_run_usage
      - name: list_branches
      - name: list_code_scanning_alerts
      - name: list_commits
      - name: list_dependabot_alerts
      - name: list_discussion_categories
      - name: list_discussions
      - name: list_gists
      - name: list_global_security_advisories
      - name: list_issue_types
      - name: list_issues
      - name: list_notifications
      - name: list_org_repository_security_advisories
      - name: list_project_fields
      - name: list_projects
      - name: list_pull_requests
      - name: list_releases
      - name: list_repository_security_advisories
      - name: list_secret_scanning_alerts
      - name: list_starred_repositories
      - name: list_sub_issues
      - name: list_tags
      - name: list_workflow_jobs
      - name: list_workflow_run_artifacts
      - name: list_workflow_runs
      - name: list_workflows
      - name: manage_notification_subscription
      - name: manage_repository_notification_subscription
      - name: mark_all_notifications_read
      - name: merge_pull_request
      - name: push_files
      - name: remove_sub_issue
      - name: reprioritize_sub_issue
      - name: request_copilot_review
      - name: rerun_failed_jobs
      - name: rerun_workflow_run
      - name: run_workflow
      - name: search_code
      - name: search_issues
      - name: search_orgs
      - name: search_pull_requests
      - name: search_repositories
      - name: search_users
      - name: star_repository
      - name: submit_pending_pull_request_review
      - name: unstar_repository
      - name: update_gist
      - name: update_issue
      - name: update_pull_request
      - name: update_pull_request_branch
    secrets:
      - name: github.personal_access_token
        env: GITHUB_PERSONAL_ACCESS_TOKEN
        example: <YOUR_TOKEN>
    allowHosts:
      - api.github.com:443
      - github.com:443
      - raw.githubusercontent.com:443
    prompts: 0
    resources: {}
    metadata:
      githubStars: 23116
      category: devops
      tags:
        - github
        - devops
      license: MIT License
      owner: github
    oauth:
      providers:
        - provider: github
          secret: github.personal_access_token
          env: GITHUB_PERSONAL_ACCESS_TOKEN
  grafana:
    description: MCP server for Grafana.
    title: Grafana
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/grafana@sha256:117fb61af572dd16825abaf28888c7641112c010a17e8d159ceb345be5fe67ed
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/grafana.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/grafana.json
    source: https://github.com/grafana/mcp-grafana/tree/main
    upstream: https://github.com/grafana/mcp-grafana
    icon: https://avatars.githubusercontent.com/u/7195757?s=200&v=4
    tools:
      - name: add_activity_to_incident
      - name: create_incident
      - name: fetch_pyroscope_profile
      - name: find_error_pattern_logs
      - name: find_slow_requests
      - name: generate_deeplink
      - name: get_alert_group
      - name: get_alert_rule_by_uid
      - name: get_assertions
      - name: get_current_oncall_users
      - name: get_dashboard_by_uid
      - name: get_dashboard_panel_queries
      - name: get_dashboard_property
      - name: get_dashboard_summary
      - name: get_datasource_by_name
      - name: get_datasource_by_uid
      - name: get_incident
      - name: get_oncall_shift
      - name: get_sift_analysis
      - name: get_sift_investigation
      - name: list_alert_groups
      - name: list_alert_rules
      - name: list_contact_points
      - name: list_datasources
      - name: list_incidents
      - name: list_loki_label_names
      - name: list_loki_label_values
      - name: list_oncall_schedules
      - name: list_oncall_teams
      - name: list_oncall_users
      - name: list_prometheus_label_names
      - name: list_prometheus_label_values
      - name: list_prometheus_metric_metadata
      - name: list_prometheus_metric_names
      - name: list_pyroscope_label_names
      - name: list_pyroscope_label_values
      - name: list_pyroscope_profile_types
      - name: list_sift_investigations
      - name: list_teams
      - name: list_users_by_org
      - name: query_loki_logs
      - name: query_loki_stats
      - name: query_prometheus
      - name: search_dashboards
      - name: update_dashboard
    secrets:
      - name: grafana.api_key
        env: GRAFANA_API_KEY
        example: <your service account token>
    env:
      - name: GRAFANA_URL
        value: '{{grafana.url}}'
    command:
      - --transport=stdio
    prompts: 0
    resources: {}
    config:
      - name: grafana
        description: Configure the connection to Grafana
        type: object
        properties:
          url:
            type: string
    metadata:
      pulls: 83010
      stars: 17
      githubStars: 1626
      category: monitoring
      tags:
        - grafana
        - monitoring
      license: Apache License 2.0
      owner: grafana
  heroku:
    description: Heroku Platform MCP Server using the Heroku CLI.
    title: Heroku
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/heroku@sha256:bc972fc22f0091b9719b672613f6544f0b3752c86c27f63872a44f933f5fa8e0
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/heroku.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/heroku.json
    source: https://github.com/heroku/heroku-mcp-server/tree/refs/pull/24/merge
    upstream: https://github.com/heroku/heroku-mcp-server
    icon: https://avatars.githubusercontent.com/u/23211?s=200&v=4
    tools:
      - name: create_addon
      - name: create_app
      - name: deploy_one_off_dyno
      - name: deploy_to_heroku
      - name: get_addon_info
      - name: get_app_info
      - name: get_app_logs
      - name: list_addon_plans
      - name: list_addon_services
      - name: list_addons
      - name: list_apps
      - name: list_private_spaces
      - name: list_teams
      - name: maintenance_off
      - name: maintenance_on
      - name: pg_backups
      - name: pg_credentials
      - name: pg_info
      - name: pg_kill
      - name: pg_locks
      - name: pg_maintenance
      - name: pg_outliers
      - name: pg_ps
      - name: pg_psql
      - name: pg_upgrade
      - name: pipelines_create
      - name: pipelines_info
      - name: pipelines_list
      - name: pipelines_promote
      - name: ps_list
      - name: ps_restart
      - name: ps_scale
      - name: rename_app
      - name: transfer_app
    secrets:
      - name: heroku.api_key
        env: HEROKU_API_KEY
        example: <YOUR_HEROKU_AUTH_TOKEN>
    prompts: 0
    resources: {}
    metadata:
      pulls: 2858
      stars: 2
      githubStars: 68
      category: devops
      tags:
        - heroku
        - devops
      license: Apache License 2.0
      owner: heroku
  mongodb:
    description: A Model Context Protocol server to connect to MongoDB databases and MongoDB Atlas Clusters.
    title: MongoDB
    type: server
    dateAdded: "2025-05-15T20:04:34Z"
    image: mcp/mongodb@sha256:9a097c677d844b61c82c59ee567859c2bda30696b23f546770a6013e9b3b949e
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/mongodb.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/mongodb.json
    source: https://github.com/mongodb-js/mongodb-mcp-server/tree/main
    upstream: https://github.com/mongodb-js/mongodb-mcp-server
    icon: https://avatars.githubusercontent.com/u/11214950?v=4
    tools:
      - name: aggregate
      - name: collection-indexes
      - name: collection-schema
      - name: collection-storage-size
      - name: connect
      - name: count
      - name: create-collection
      - name: create-index
      - name: db-stats
      - name: delete-many
      - name: drop-collection
      - name: drop-database
      - name: explain
      - name: export
      - name: find
      - name: insert-many
      - name: list-collections
      - name: list-databases
      - name: mongodb-logs
      - name: rename-collection
      - name: update-many
    secrets:
      - name: mongodb.connection_string
        env: MDB_MCP_CONNECTION_STRING
        example: mongodb+srv://username:password@cluster.mongodb.net/myDatabase
    prompts: 0
    resources: {}
    metadata:
      pulls: 21405
      stars: 5
      githubStars: 652
      category: database
      tags:
        - mongodb
        - database
      license: Apache License 2.0
      owner: mongodb-js
  neon:
    description: MCP server for interacting with Neon Management API and databases.
    title: Neon
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/neon@sha256:fab32eb73fb01e858b1effecc735c907488ba42536f7498e034b0567729051de
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/neon.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/neon.json
    source: https://github.com/neondatabase-labs/mcp-server-neon/tree/dbfa184afd9fc677c0d6b007a62b33194e883821
    upstream: https://github.com/neondatabase-labs/mcp-server-neon
    icon: https://avatars.githubusercontent.com/u/183852044?s=200&v=4
    tools:
      - name: __node_version
      - name: complete_database_migration
      - name: complete_query_tuning
      - name: create_branch
      - name: create_project
      - name: delete_branch
      - name: delete_project
      - name: describe_branch
      - name: describe_project
      - name: describe_table_schema
      - name: explain_sql_statement
      - name: get_connection_string
      - name: get_database_tables
      - name: list_projects
      - name: prepare_database_migration
      - name: prepare_query_tuning
      - name: provision_neon_auth
      - name: run_sql
      - name: run_sql_transaction
    secrets:
      - name: neon.api_key
        env: NEON_API_KEY
        example: YOUR_API_KEY_HERE
    prompts: 0
    resources: {}
    metadata:
      pulls: 3979
      stars: 4
      githubStars: 474
      category: database
      tags:
        - neon
        - database
      license: MIT License
      owner: neondatabase
  notion:
    description: Official Notion MCP Server.
    title: Notion
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/notion@sha256:27fc9ba99c6b9840c9631d2ae4cfc7665e6f2fa6607c0cee413be4d5e99aeea2
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/notion.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/notion.json
    source: https://github.com/makenotion/notion-mcp-server/tree/main
    upstream: https://github.com/makenotion/notion-mcp-server
    icon: https://avatars.githubusercontent.com/u/4792552?s=200&v=4
    tools:
      - name: API-create-a-comment
      - name: API-create-a-database
      - name: API-delete-a-block
      - name: API-get-block-children
      - name: API-get-self
      - name: API-get-user
      - name: API-get-users
      - name: API-patch-block-children
      - name: API-patch-page
      - name: API-post-database-query
      - name: API-post-page
      - name: API-post-search
      - name: API-retrieve-a-block
      - name: API-retrieve-a-comment
      - name: API-retrieve-a-database
      - name: API-retrieve-a-page
      - name: API-retrieve-a-page-property
      - name: API-update-a-block
      - name: API-update-a-database
    secrets:
      - name: notion.internal_integration_token
        env: INTERNAL_INTEGRATION_TOKEN
        example: ntn_****
    env:
      - name: OPENAPI_MCP_HEADERS
        value: '{"Authorization": "Bearer $INTERNAL_INTEGRATION_TOKEN", "Notion-Version": "2022-06-28"}'
    prompts: 0
    resources: {}
    metadata:
      pulls: 37595
      stars: 29
      githubStars: 3246
      category: productivity
      tags:
        - notion
        - secrets
      license: MIT License
      owner: makenotion
  puppeteer:
    description: Browser automation and web scraping using Puppeteer.
    title: Puppeteer (Archived)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/puppeteer@sha256:c1e2bda6d92d400e900e497b743552a670a33631799c0a6478e91096e389bd27
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/puppeteer.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/puppeteer.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/6906516?s=200&v=4
    tools:
      - name: puppeteer_click
      - name: puppeteer_evaluate
      - name: puppeteer_fill
      - name: puppeteer_hover
      - name: puppeteer_navigate
      - name: puppeteer_screenshot
      - name: puppeteer_select
    env:
      - name: DOCKER_CONTAINER
        value: "true"
    prompts: 0
    resources: {}
    metadata:
      pulls: 87912
      stars: 30
      githubStars: 69195
      category: devops
      tags:
        - puppeteer
        - devops
      license: MIT License
      owner: modelcontextprotocol
  stripe:
    description: Interact with Stripe services over the Stripe API.
    title: Stripe
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/stripe@sha256:a7cbb0b0095824a91eaf1a6274da47c32b181e052d8f04b676ffc2d77aa4844e
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/stripe.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/stripe.json
    source: https://github.com/stripe/agent-toolkit/tree/main/modelcontextprotocol
    upstream: https://github.com/stripe/agent-toolkit
    icon: https://avatars.githubusercontent.com/u/856813?s=200&v=4
    tools:
      - name: cancel_subscription
      - name: create_coupon
      - name: create_customer
      - name: create_invoice
      - name: create_invoice_item
      - name: create_payment_link
      - name: create_price
      - name: create_product
      - name: create_refund
      - name: finalize_invoice
      - name: list_coupons
      - name: list_customers
      - name: list_disputes
      - name: list_invoices
      - name: list_payment_intents
      - name: list_prices
      - name: list_products
      - name: list_subscriptions
      - name: retrieve_balance
      - name: search_stripe_documentation
      - name: update_dispute
      - name: update_subscription
    secrets:
      - name: stripe.secret_key
        env: STRIPE_SECRET_KEY
        example: sk_STRIPE_SECRET_KEY
    command:
      - --tools=all
    prompts: 0
    resources: {}
    metadata:
      pulls: 7308
      stars: 8
      githubStars: 964
      category: finance
      tags:
        - stripe
        - finance
      license: MIT License
      owner: stripe
  airtable-mcp-server:
    description: Provides AI assistants with direct access to Airtable bases, allowing them to read schemas, query records, and interact with your Airtable data. Supports listing bases, retrieving table structures, and searching through records to help automate workflows and answer questions about your organized data.
    title: Airtable MCP Server
    type: server
    dateAdded: "2025-09-17T06:19:29Z"
    image: mcp/airtable-mcp-server@sha256:ea7c265057018337a5fe7a98b4e10568a688a5161f4e2261e20b8616a1db065f
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/airtable-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/airtable-mcp-server.json
    source: https://github.com/domdomegg/airtable-mcp-server/tree/master
    upstream: https://github.com/domdomegg/airtable-mcp-server
    icon: https://www.google.com/s2/favicons?domain=airtable.com&sz=64
    tools:
      - name: create_field
      - name: create_record
      - name: create_table
      - name: delete_records
      - name: describe_table
      - name: get_record
      - name: list_bases
      - name: list_records
      - name: list_tables
      - name: search_records
      - name: update_field
      - name: update_records
      - name: update_table
    secrets:
      - name: airtable-mcp-server.api_key
        env: AIRTABLE_API_KEY
        example: patABC123.def456ghi789jkl012mno345pqr678stu901vwx
    env:
      - name: NODE_ENV
        value: '{{airtable-mcp-server.nodeenv}}'
    prompts: 0
    resources: {}
    config:
      - name: airtable-mcp-server
        description: Configure the connection to Airtable mcp server
        type: object
        properties:
          nodeenv:
            type: string
    metadata:
      pulls: 498
      githubStars: 307
      category: productivity
      tags:
        - productivity
      license: MIT License
      owner: domdomegg
  aks:
    description: Azure Kubernetes Service (AKS) official MCP server.
    title: Azure Kubernetes Service (AKS)
    type: server
    dateAdded: "2025-08-20T06:26:55Z"
    image: mcp/aks@sha256:4214615a53c8d122bd2a11c82b7fc796c20bd662bb489ccd85df02d809341ed7
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/aks.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/aks.json
    source: https://github.com/Azure/aks-mcp/tree/main
    upstream: https://github.com/Azure/aks-mcp
    icon: https://raw.githubusercontent.com/Azure/AKS/master/blog/assets/images/400x400.png
    tools:
      - name: az_advisor_recommendation
      - name: az_aks_operations
      - name: az_compute_operations
      - name: az_fleet
      - name: az_monitoring
      - name: az_network_resources
      - name: get_aks_vmss_info
      - name: inspektor_gadget_observability
      - name: kubectl_cluster
      - name: kubectl_config
      - name: kubectl_diagnostics
      - name: kubectl_resources
      - name: list_detectors
      - name: run_detector
      - name: run_detectors_by_category
    command:
      - --transport=stdio
      - --access-level={{aks.access_level}}
      - --allow-namespaces={{aks.allow_namespaces}}
      - --additional-tools={{aks.additional_tools}}
    volumes:
      - '{{aks.azure_dir}}:/home/mcp/.azure'
      - '{{aks.kubeconfig}}:/home/mcp/.kube/config'
    user: '{{aks.container_user}}'
    prompts: 0
    resources: {}
    config:
      - name: aks
        description: Configuration for AKS-MCP server
        type: object
        properties:
          azure_dir:
            type: string
            description: Path to the Azure configuration directory (e.g. /home/azureuser/.azure). Used for Azure CLI authentication, you should be logged in (e.g. run `az login`) on the host before starting the MCP server.
          kubeconfig:
            type: string
            description: Path to the kubeconfig file for the AKS cluster (e.g. /home/azureuser/.kube/config). Used to connect to the AKS cluster.
          access_level:
            type: string
            description: Access level for the MCP server, One of [ readonly, readwrite, admin ]
          allow_namespaces:
            type: string
            description: Comma-separated list of namespaces to allow access to. If not specified, all namespaces are allowed.
          additional_tools:
            type: string
            description: Comma-separated list of additional tools, One of [ helm, cilium ]
          container_user:
            type: string
            description: Username or UID of the container user (format <name|uid>[:<group|gid>] e.g. 10000), ensuring correct permissions to access the Azure and kubeconfig files. Leave empty to use default user in the container.
        required:
          - azure_dir
          - kubeconfig
          - access_level
    metadata:
      pulls: 1329
      stars: 1
      githubStars: 91
      category: devops
      tags:
        - devops
        - azure
        - kubernetes
        - aks
      license: MIT License
      owner: Azure
  apify:
    description: Apify is the world's largest marketplace of tools for web scraping, data extraction, and web automation. You can extract structured data from social media, e-commerce, search engines, maps, travel sites, or any other website.
    title: Apify Remote MCP Server
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/apify.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/apify.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.apify.com
      headers:
        Authorization: "Bearer ${APIFY_API_KEY}"
    icon: https://www.google.com/s2/favicons?domain=apify.com&sz=64
    tools: []
    secrets:
      - name: apify.api_key
        env: APIFY_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: automation
      tags:
        - automation
        - web-scraping
        - data-extraction
        - remote
      license: Apache License 2.0
      owner: docker
  apify-mcp-server:
    description: Apify is the world's largest marketplace of tools for web scraping, data extraction, and web automation. You can extract structured data from social media, e-commerce, search engines, maps, travel sites, or any other website.
    title: Apify MCP Server
    type: server
    dateAdded: "2025-08-22T06:21:38Z"
    image: mcp/apify-mcp-server@sha256:1e11dfb50ce9b46b66851734ecb747c56808a53e09b051703458b8817a4c1adb
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/apify-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/apify-mcp-server.json
    source: https://github.com/apify/actors-mcp-server/tree/master
    upstream: https://github.com/apify/actors-mcp-server
    icon: https://avatars.githubusercontent.com/u/24586296?s=200&v=4
    tools:
      - name: apify-slash-rag-web-browser
      - name: call-actor
      - name: fetch-actor-details
      - name: fetch-apify-docs
      - name: get-actor-output
      - name: search-actors
      - name: search-apify-docs
    secrets:
      - name: apify-mcp-server.apify_token
        env: APIFY_TOKEN
        example: your-apify-token
    env:
      - name: TOOLS
        value: '{{apify-mcp-server.tools}}'
    prompts: 0
    resources: {}
    config:
      - name: apify-mcp-server
        description: Configure the Apify MCP Server
        type: object
        properties:
          tools:
            type: string
            description: 'Comma-separated list of tools to enable. Can be either a tool category, a specific tool, or an Apify Actor. For example: "actors,docs,apify/rag-web-browser". For more details visit https://mcp.apify.com.'
    metadata:
      pulls: 2157
      githubStars: 413
      category: productivity
      tags:
        - productivity
        - search
        - mcp
        - automation
        - web scraping
        - api
        - data extraction
      license: MIT License
      owner: apify
  arxiv-mcp-server:
    description: 'The ArXiv MCP Server provides a comprehensive bridge between AI assistants and arXiv''s research repository through the Model Context Protocol (MCP).   Features: • Search arXiv papers with advanced filtering • Download and store papers locally as markdown • Read and analyze paper content • Deep research analysis prompts • Local paper management and storage • Enhanced tool descriptions optimized for local AI models • Docker MCP Gateway compatible with detailed context  Perfect for researchers, academics, and AI assistants conducting literature reviews and research analysis.  **Recent Update**: Enhanced tool descriptions specifically designed to resolve local AI model confusion and improve Docker MCP Gateway compatibility.'
    title: ArXiv MCP Server
    type: server
    dateAdded: "2025-07-16T06:22:24Z"
    image: mcp/arxiv-mcp-server@sha256:6dc6bba6dfed97f4ad6eb8d23a5c98ef5b7fa6184937d54b2d675801cd9dd29e
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/arxiv-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/arxiv-mcp-server.json
    source: https://github.com/jasonleinart/arxiv-mcp-server/tree/main
    upstream: https://github.com/jasonleinart/arxiv-mcp-server
    icon: https://avatars.githubusercontent.com/u/15390319?v=4
    tools:
      - name: download_paper
      - name: list_papers
      - name: read_paper
      - name: search_papers
    env:
      - name: ARXIV_STORAGE_PATH
        value: /app/papers
    volumes:
      - '{{arxiv-mcp-server.storage_path}}:/app/papers'
    prompts: 0
    resources: {}
    config:
      - name: arxiv-mcp-server
        description: Configure local storage path for downloaded papers
        type: object
        properties:
          storage_path:
            type: string
            description: Directory path where downloaded papers will be stored
        required:
          - storage_path
    metadata:
      pulls: 3398
      stars: 2
      githubStars: 16
      category: search
      tags:
        - arxiv
        - research
        - academic
        - papers
        - search
        - ai
        - local-models
        - docker-gateway
        - enhanced-descriptions
      license: Apache License 2.0
      owner: jasonleinart
  ast-grep:
    description: ast-grep is a fast and polyglot tool for code structural search, lint, rewriting at large scale.
    title: ast-grep
    type: server
    dateAdded: "2025-09-04T06:24:28Z"
    image: mcp/ast-grep@sha256:bdb6bdb4fb4732cece8ce45e90e352cb89eab9e5d30acf9c6317827b9383fc12
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/ast-grep.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/ast-grep.json
    source: https://github.com/dgageot/mcp-ast-grep/tree/main
    upstream: https://github.com/dgageot/mcp-ast-grep
    icon: https://avatars.githubusercontent.com/u/114017360?s=200&v=4
    tools:
      - name: ast-grep
      - name: ast-grep-help
    volumes:
      - '{{ast-grep.path|volume-target}}:/src'
    prompts: 0
    resources: {}
    config:
      - name: ast-grep
        description: The MCP server is allowed to access this directory
        type: object
        properties:
          path:
            type: string
        required:
          - path
    metadata:
      pulls: 732
      stars: 1
      category: code
      tags:
        - code
        - refactoring
        - grep
      license: Apache License 2.0
      owner: dgageot
  astra-db:
    description: An MCP server for Astra DB workloads.
    title: Astra DB
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/astra-db@sha256:5f80909d7182448a1f7c2a84901de61ce2832b28defb729164e591e1312a92e0
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/astra-db.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/astra-db.json
    source: https://github.com/datastax/astra-db-mcp/tree/main
    upstream: https://github.com/datastax/astra-db-mcp
    icon: https://avatars.githubusercontent.com/u/573369?s=200&v=4
    tools:
      - name: BulkCreateRecords
      - name: BulkDeleteRecords
      - name: BulkUpdateRecords
      - name: CreateCollection
      - name: CreateRecord
      - name: DeleteCollection
      - name: DeleteRecord
      - name: EstimateDocumentCount
      - name: FindRecord
      - name: GetCollections
      - name: GetRecord
      - name: HelpAddToClient
      - name: ListRecords
      - name: OpenBrowser
      - name: UpdateCollection
      - name: UpdateRecord
    secrets:
      - name: astra-db.application_token
        env: ASTRA_DB_APPLICATION_TOKEN
        example: your_astra_db_token
    env:
      - name: ASTRA_DB_API_ENDPOINT
        value: '{{astra-db.endpoint}}'
    prompts: 0
    resources: {}
    config:
      - name: astra-db
        description: Configure the connection to Astra DB
        type: object
        properties:
          endpoint:
            type: string
    metadata:
      pulls: 2163
      githubStars: 31
      category: database
      tags:
        - astra-db
        - database
      license: Apache License 2.0
      owner: datastax
  astro-docs:
    description: Access the latest Astro web framework documentation, guides, and API references.
    title: Astro Docs
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/astro-docs.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/astro-docs.json
    source: ""
    upstream: https://github.com/withastro/docs-mcp
    remote:
      transport_type: streamable-http
      url: https://mcp.docs.astro.build/mcp
    icon: https://astro.build/favicon.svg
    tools:
      - name: search_astro_docs
    prompts: 0
    resources: {}
    metadata:
      category: documentation
      tags:
        - documentation
        - astro
        - web-framework
        - remote
      license: Apache License 2.0
      owner: docker
  atlan:
    description: MCP server for interacting with Atlan services including asset search, updates, and lineage traversal for comprehensive data governance and discovery.
    title: Atlan MCP Server
    type: server
    dateAdded: "2025-07-18T06:21:15Z"
    image: mcp/atlan@sha256:b7a3400454cd1156987052372567fdecb5b98dc4f336a7fce05cba919b886dd9
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/atlan.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/atlan.json
    source: https://github.com/atlanhq/agent-toolkit/tree/main/modelcontextprotocol
    upstream: https://github.com/atlanhq/agent-toolkit
    icon: https://avatars.githubusercontent.com/u/47002402?s=200&v=4
    tools:
      - name: create_glossaries
      - name: create_glossary_categories
      - name: create_glossary_terms
      - name: get_assets_by_dsl_tool
      - name: search_assets_tool
      - name: traverse_lineage_tool
      - name: update_assets_tool
    secrets:
      - name: atlan.atlan_api_key
        env: ATLAN_API_KEY
        example: <YOUR_ATLAN_API_KEY>
      - name: atlan.atlan_base_url
        env: ATLAN_BASE_URL
        example: https://your-instance.atlan.com
    prompts: 0
    resources: {}
    metadata:
      pulls: 968
      githubStars: 19
      category: database
      tags:
        - atlan
        - metadata
      license: MIT License
      owner: atlanhq
  atlas-docs:
    description: Provide LLMs hosted, clean markdown documentation of libraries and frameworks.
    title: Atlas Docs
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/atlas-docs@sha256:4d235adb74986ea8f8ff1751a4f5d28532d0e2aa03d3c55a3fcb1c57e3917079
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/atlas-docs.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/atlas-docs.json
    source: https://github.com/CartographAI/atlas-docs-mcp/tree/master
    upstream: https://github.com/CartographAI/atlas-docs-mcp
    icon: https://avatars.githubusercontent.com/u/184709581?s=200&v=4
    tools:
      - name: get_docs_full
      - name: get_docs_index
      - name: get_docs_page
      - name: list_docs
      - name: search_docs
    env:
      - name: ATLAS_API_URL
        value: '{{atlas-docs.api_url}}'
    prompts: 0
    resources: {}
    config:
      - name: atlas-docs
        description: Configure the connection to Atlas Docs
        type: object
        properties:
          api_url:
            type: string
    metadata:
      pulls: 3692
      stars: 2
      githubStars: 33
      category: devops
      tags:
        - atlas-docs
        - devops
      license: MIT License
      owner: CartographAI
  audiense-insights:
    description: Audiense Insights MCP Server is a server based on the Model Context Protocol (MCP) that allows Claude and other MCP-compatible clients to interact with your Audiense Insights account.
    title: Audiense Insights
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/audiense-insights@sha256:064623a07a6b1d4282a94cb338ca5872db1326dd09591f8f6b708d15326bf962
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/audiense-insights.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/audiense-insights.json
    source: https://github.com/AudienseCo/mcp-audiense-insights/tree/main
    upstream: https://github.com/AudienseCo/mcp-audiense-insights
    icon: https://avatars.githubusercontent.com/u/2454008?s=200&v=4
    tools:
      - name: compare-audience-influencers
      - name: get-audience-content
      - name: get-audience-insights
      - name: get-baselines
      - name: get-categories
      - name: get-report-info
      - name: get-reports
      - name: report-summary
    secrets:
      - name: audiense-insights.client_secret
        env: AUDIENSE_CLIENT_SECRET
        example: your_client_secret_here
      - name: audiense-insights.twitter_bearer_token
        env: TWITTER_BEARER_TOKEN
        example: your_token_here
    env:
      - name: AUDIENSE_CLIENT_ID
        value: '{{audiense-insights.client_id}}'
    prompts: 0
    resources: {}
    config:
      - name: audiense-insights
        description: Configure the connection to Audiense Insights
        type: object
        properties:
          client_id:
            type: string
        required:
          - client_id
    metadata:
      pulls: 2263
      githubStars: 17
      category: devops
      tags:
        - audiense-insights
        - devops
      license: Apache License 2.0
      owner: AudienseCo
  aws-cdk-mcp-server:
    description: AWS Cloud Development Kit (CDK) best practices, infrastructure as code patterns, and security compliance with CDK Nag.
    title: AWS CDK
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/aws-cdk-mcp-server@sha256:73b7ecb48adbc9dd3b170c859c4a11d03b6167590d4b0dee5396e6b61aa1a0eb
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/aws-cdk-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/aws-cdk-mcp-server.json
    source: https://github.com/awslabs/mcp/tree/main/src/cdk-mcp-server
    upstream: https://github.com/awslabs/mcp
    icon: https://avatars.githubusercontent.com/u/3299148?v=4
    tools:
      - name: CDKGeneralGuidance
      - name: CheckCDKNagSuppressions
      - name: ExplainCDKNagRule
      - name: GenerateBedrockAgentSchema
      - name: GetAwsSolutionsConstructPattern
      - name: LambdaLayerDocumentationProvider
      - name: SearchGenAICDKConstructs
    prompts: 0
    resources: {}
    metadata:
      pulls: 10045
      githubStars: 6545
      category: devops
      tags:
        - aws-cdk-mcp-server
        - devops
      license: Apache License 2.0
      owner: awslabs
  aws-core-mcp-server:
    description: Starting point for using the awslabs MCP servers.
    title: AWS Core MCP Server
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/aws-core-mcp-server@sha256:8acdccef88507a6a91fe9047a645af72cdc78164328408940716195224dae49c
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/aws-core-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/aws-core-mcp-server.json
    source: https://github.com/awslabs/mcp/tree/main/src/core-mcp-server
    upstream: https://github.com/awslabs/mcp
    icon: https://avatars.githubusercontent.com/u/3299148?v=4
    tools:
      - name: prompt_understanding
    prompts: 0
    resources: {}
    metadata:
      pulls: 34734
      githubStars: 6545
      category: devops
      tags:
        - aws-core-mcp-server
        - devops
      license: Apache License 2.0
      owner: awslabs
  aws-diagram:
    description: Seamlessly create diagrams using the Python diagrams package DSL. This server allows you to generate AWS diagrams, sequence diagrams, flow diagrams, and class diagrams using Python code.
    title: AWS Diagram
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/aws-diagram@sha256:9f7eac66272a36761ab1864723696f9092c822903a0cdfc6ae3d5a0325457cc9
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/aws-diagram.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/aws-diagram.json
    source: https://github.com/awslabs/mcp/tree/main/src/aws-diagram-mcp-server
    upstream: https://github.com/awslabs/mcp
    icon: https://avatars.githubusercontent.com/u/3299148?v=4
    tools:
      - name: generate_diagram
      - name: get_diagram_examples
      - name: list_icons
    prompts: 0
    resources: {}
    metadata:
      pulls: 13011
      stars: 1
      githubStars: 6545
      category: devops
      tags:
        - aws-diagram
        - devops
      license: Apache License 2.0
      owner: awslabs
  aws-documentation:
    description: Tools to access AWS documentation, search for content, and get recommendations.
    title: AWS Documentation
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/aws-documentation@sha256:b468957edbab8c27ac312e4656a54ce267b3dd59f59143786c7f726a1c3cf94f
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/aws-documentation.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/aws-documentation.json
    source: https://github.com/awslabs/mcp/tree/main/src/aws-documentation-mcp-server
    upstream: https://github.com/awslabs/mcp
    icon: https://avatars.githubusercontent.com/u/3299148?v=4
    tools:
      - name: read_documentation
      - name: recommend
      - name: search_documentation
    prompts: 0
    resources: {}
    metadata:
      pulls: 27622
      stars: 1
      githubStars: 6545
      category: devops
      tags:
        - aws-documentation
        - devops
      license: Apache License 2.0
      owner: awslabs
  aws-kb-retrieval-server:
    description: An MCP server implementation for retrieving information from the AWS Knowledge Base using the Bedrock Agent Runtime.
    title: AWS KB Retrieval (Archived)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/aws-kb-retrieval-server@sha256:1522c7ffee3f84faf7a157f7c185cb0923123823f19bfd14ce26498fcd1377db
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/aws-kb-retrieval-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/aws-kb-retrieval-server.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: retrieve_from_aws_kb
    secrets:
      - name: aws.secret_access_key
        env: AWS_SECRET_ACCESS_KEY
        example: YOUR_SECRET_ACCESS_KEY_HERE
    env:
      - name: AWS_ACCESS_KEY_ID
        value: '{{aws-kb-retrieval-server.access_key_id}}'
    prompts: 0
    resources: {}
    config:
      - name: aws-kb-retrieval-server
        description: Configure the connection to AWS
        type: object
        properties:
          access_key_id:
            type: string
        required:
          - access_key_id
    metadata:
      pulls: 3520
      stars: 6
      githubStars: 69195
      category: devops
      tags:
        - aws
        - devops
      license: MIT License
      owner: modelcontextprotocol
  aws-terraform:
    description: Terraform on AWS best practices, infrastructure as code patterns, and security compliance with Checkov.
    title: AWS Terraform
    type: server
    dateAdded: "2025-05-22T20:04:34Z"
    image: mcp/aws-terraform@sha256:2949c45e747b265f7e8609fbc0c148b22444cc5dd28b5aa1294833b1b3770e88
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/aws-terraform.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/aws-terraform.json
    source: https://github.com/awslabs/mcp/tree/main/src/terraform-mcp-server
    upstream: https://github.com/awslabs/mcp
    icon: https://avatars.githubusercontent.com/u/3299148?v=4
    tools:
      - name: ExecuteTerraformCommand
      - name: ExecuteTerragruntCommand
      - name: RunCheckovScan
      - name: SearchAwsProviderDocs
      - name: SearchAwsccProviderDocs
      - name: SearchSpecificAwsIaModules
      - name: SearchUserProvidedModule
    prompts: 0
    resources: {}
    metadata:
      pulls: 10732
      githubStars: 6545
      category: devops
      tags:
        - aws
        - terraform
      license: Apache License 2.0
      owner: awslabs
  azure:
    description: The Azure MCP Server, bringing the power of Azure to your agents.
    title: Azure
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcr.microsoft.com/azure-sdk/azure-mcp@sha256:5274460a1827a6539791ccb1a3199b68377b21d772a4d7f01d254e281ea8b912
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/azure.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/azure.json
    source: https://github.com/Azure/azure-mcp/tree/main
    upstream: https://github.com/Azure/azure-mcp
    icon: https://avatars.githubusercontent.com/u/6844498?s=200&v=4
    tools:
      - name: azmcp-appconfig-account-list
      - name: azmcp-appconfig-kv-delete
      - name: azmcp-appconfig-kv-list
      - name: azmcp-appconfig-kv-lock
      - name: azmcp-appconfig-kv-set
      - name: azmcp-appconfig-kv-show
      - name: azmcp-appconfig-kv-unlock
      - name: azmcp-cosmos-account-list
      - name: azmcp-cosmos-database-container-item-query
      - name: azmcp-cosmos-database-container-list
      - name: azmcp-cosmos-database-list
      - name: azmcp-extension-az
      - name: azmcp-extension-azd
      - name: azmcp-group-list
      - name: azmcp-monitor-log-query
      - name: azmcp-monitor-table-list
      - name: azmcp-monitor-workspace-list
      - name: azmcp-search-index-describe
      - name: azmcp-search-index-list
      - name: azmcp-search-index-query
      - name: azmcp-search-service-list
      - name: azmcp-storage-account-list
      - name: azmcp-storage-blob-container-details
      - name: azmcp-storage-blob-container-list
      - name: azmcp-storage-blob-list
      - name: azmcp-storage-table-list
      - name: azmcp-subscription-list
    command:
      - server
      - start
    prompts: 0
    resources: {}
    metadata:
      githubStars: 1160
      category: devops
      tags:
        - azure
        - devops
      license: MIT License
      owner: Azure
  beagle-security:
    description: Connects with the Beagle Security backend using a user token to manage applications, run automated security tests, track vulnerabilities across environments, and gain intelligence from Application and API vulnerability data.
    title: Beagle security MCP server
    type: server
    dateAdded: "2025-07-08T13:38:25Z"
    image: mcp/beagle-security-mcp-server@sha256:4be5e4ae43698ba5317d303052723b8201002e1237b0e515d0a5461c49c797f2
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/beagle-security.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/beagle-security.json
    source: https://github.com/beaglesecurity/beagle-security-mcp-server/tree/main
    upstream: https://github.com/beaglesecurity/beagle-security-mcp-server
    icon: https://cdn.beaglesecurity.com/assets/brand/png/beagle-blue-icon.png
    tools:
      - name: beagle_create_application
      - name: beagle_create_project
      - name: beagle_delete_application
      - name: beagle_delete_project
      - name: beagle_get_application
      - name: beagle_get_domain_signature
      - name: beagle_get_test_result
      - name: beagle_get_test_status
      - name: beagle_list_applications
      - name: beagle_list_projects
      - name: beagle_list_running_tests
      - name: beagle_list_test_sessions
      - name: beagle_modify_application
      - name: beagle_modify_project
      - name: beagle_start_test
      - name: beagle_stop_test
      - name: beagle_verify_domain
    secrets:
      - name: beagle-security.Beagle-Security-Personal-access-token
        env: BEAGLE_SECURITY_API_TOKEN
        example: your_personal_access_token
    prompts: 0
    resources: {}
    metadata:
      pulls: 808
      stars: 1
      category: devops
      tags:
        - devops
      license: MIT License
      owner: beaglesecurity
  bitrefill:
    description: A Model Context Protocol Server connector for Bitrefill public API, to enable AI agents to search and shop on Bitrefill.
    title: Bitrefill
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/bitrefill@sha256:612bbf82394ab4974ee0f39aba38f48aed61a9cb06adab0f3fce1b648d8ade16
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/bitrefill.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/bitrefill.json
    source: https://github.com/bitrefill/bitrefill-mcp-server/tree/master
    upstream: https://github.com/bitrefill/bitrefill-mcp-server
    icon: https://avatars.githubusercontent.com/u/10897174?s=200&v=4
    tools:
      - name: categories
      - name: create_invoice
      - name: detail
      - name: get_account_balance
      - name: get_invoice
      - name: get_invoices
      - name: get_order
      - name: get_orders
      - name: pay_invoice
      - name: ping
      - name: search
      - name: unseal_order
    secrets:
      - name: bitrefill.api_secret
        env: BITREFILL_API_SECRET
        example: your_api_key_here
    env:
      - name: BITREFILL_API_ID
        value: '{{bitrefill.api_id}}'
    prompts: 0
    resources: {}
    config:
      - name: bitrefill
        description: Configure the connection to Bitrefill
        type: object
        properties:
          api_id:
            type: string
        required:
          - api_id
    metadata:
      pulls: 2109
      githubStars: 5
      category: devops
      tags:
        - bitrefill
        - devops
      license: MIT License
      owner: bitrefill
  box:
    description: An MCP server capable of interacting with the Box API.
    title: Box
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/box@sha256:4db7963505c2ea80c0f8c867e7062f74d96c839687f1b79cedb3836a74498656
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/box.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/box.json
    source: https://github.com/dgageot/mcp-server-box/tree/dockerfile
    upstream: https://github.com/dgageot/mcp-server-box
    icon: https://avatars.githubusercontent.com/u/8659759?s=200&v=4
    tools:
      - name: box_ai_extract_data
      - name: box_ask_ai_tool
      - name: box_ask_ai_tool_multi_file
      - name: box_authorize_app_tool
      - name: box_download_file_tool
      - name: box_list_folder_content_by_folder_id
      - name: box_manage_folder_tool
      - name: box_read_tool
      - name: box_search_folder_by_name
      - name: box_search_tool
      - name: box_upload_file_tool
      - name: box_who_am_i
    secrets:
      - name: box.client_secret
        env: BOX_CLIENT_SECRET
        example: your_client_secret
    env:
      - name: BOX_CLIENT_ID
        value: '{{box.client_id}}'
    prompts: 0
    resources: {}
    config:
      - name: box
        description: Configure the connection to Box
        type: object
        properties:
          client_id:
            type: string
        required:
          - client_id
    metadata:
      pulls: 2545
      stars: 3
      category: devops
      tags:
        - box
        - devops
      owner: dgageot
  brave:
    description: Search the Web for pages, images, news, videos, and more using the Brave Search API.
    title: Brave Search
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/brave-search@sha256:92dc13804224df2f966cdbbc9d6a5469ceae70edc0f63dfd1c42eda8b30b74ec
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/brave.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/brave.json
    source: https://github.com/brave/brave-search-mcp-server/tree/main
    upstream: https://github.com/brave/brave-search-mcp-server
    icon: https://avatars.githubusercontent.com/u/12301619?s=200&v=4
    tools:
      - name: brave_image_search
      - name: brave_local_search
      - name: brave_news_search
      - name: brave_summarizer
      - name: brave_video_search
      - name: brave_web_search
    secrets:
      - name: brave.api_key
        env: BRAVE_API_KEY
        example: YOUR_API_KEY_HERE
    env:
      - name: BRAVE_MCP_TRANSPORT
        value: stdio
    prompts: 0
    resources: {}
    metadata:
      pulls: 41430
      stars: 20
      githubStars: 225
      category: search
      tags:
        - brave
        - search
      license: MIT License
      owner: brave
  buildkite:
    description: Buildkite MCP lets agents interact with Buildkite Builds, Jobs, Logs, Packages and Test Suites.
    title: Buildkite
    type: server
    dateAdded: "2025-07-21T12:46:15Z"
    image: mcp/buildkite@sha256:34b92f96661a521813dcbb368ea10d789f42a9ffbb1c5b4b0d1234198c32635d
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/buildkite.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/buildkite.json
    source: https://github.com/buildkite/buildkite-mcp-server/tree/main
    upstream: https://github.com/buildkite/buildkite-mcp-server
    icon: https://avatars.githubusercontent.com/u/5055988?v=4
    tools:
      - name: access_token
      - name: create_build
      - name: create_pipeline
      - name: current_user
      - name: get_artifact
      - name: get_build
      - name: get_build_test_engine_runs
      - name: get_cluster
      - name: get_cluster_queue
      - name: get_failed_executions
      - name: get_job_logs
      - name: get_jobs
      - name: get_pipeline
      - name: get_test
      - name: get_test_run
      - name: list_annotations
      - name: list_artifacts
      - name: list_builds
      - name: list_cluster_queues
      - name: list_clusters
      - name: list_pipelines
      - name: list_test_runs
      - name: update_pipeline
      - name: user_token_organization
    secrets:
      - name: buildkite.api_key
        env: BUILDKITE_API_TOKEN
        example: bkua_xxxxx
    prompts: 0
    resources: {}
    metadata:
      pulls: 883
      githubStars: 37
      category: devops
      tags:
        - devops
      license: MIT License
      owner: buildkite
  camunda:
    description: Tools to interact with the Camunda 7 Community Edition Engine using the Model Context Protocol (MCP). Whether you're automating workflows, querying process instances, or integrating with external systems, Camunda MCP Server is your agentic solution for seamless interaction with Camunda.
    title: Camunda BPM process engine MCP Server
    type: server
    dateAdded: "2025-09-02T20:44:02Z"
    image: mcp/camunda@sha256:fbea3848bcb6ab4ee7ef287f31d7b14c28f081ae61c456dd3b495e15bf02b834
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/camunda.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/camunda.json
    source: https://github.com/lepoco/mcp-camunda/tree/main
    upstream: https://github.com/lepoco/mcp-camunda
    icon: https://raw.githubusercontent.com/lepoco/mcp-camunda/refs/heads/main/build/icon.png
    tools:
      - name: complete_user_task
      - name: count_incidents
      - name: count_instances
      - name: count_user_tasks
      - name: count_variables
      - name: list_definitions
      - name: list_incidents
      - name: list_instances
      - name: list_user_tasks
      - name: list_variables
      - name: resolve_incident
      - name: send_message
    env:
      - name: CAMUNDA_HOST
        value: '{{camunda.camundahost}}'
    prompts: 0
    resources: {}
    config:
      - name: camunda
        description: Configure the connection to Camunda BPM process engine MCP Server
        type: object
        properties:
          camundahost:
            type: string
    metadata:
      pulls: 337
      githubStars: 4
      category: productivity
      tags:
        - productivity
      license: MIT License
      owner: lepoco
  cdata-connectcloud:
    description: This fully functional MCP Server allows you to connect to any data source in Connect Cloud from Claude Desktop.
    title: CData Connect Cloud
    type: server
    dateAdded: "2025-05-15T20:08:35Z"
    image: mcp/cdata-connectcloud@sha256:0cf0d5812998d38966ba64e6c4dbaabd153fe20177bcd34ee28647cd7de5929e
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/cdata-connectcloud.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/cdata-connectcloud.json
    source: https://github.com/CDataSoftware/connectcloud-mcp-server/tree/00fe03b372819d143f266fd49e53d98181f4dd12
    upstream: https://github.com/CDataSoftware/connectcloud-mcp-server
    icon: https://avatars.githubusercontent.com/u/24947354?v=4
    tools:
      - name: execData
      - name: getCatalogs
      - name: getColumns
      - name: getExportedKeys
      - name: getImportedKeys
      - name: getIndexes
      - name: getPrimaryKeys
      - name: getProcedureParameters
      - name: getProcedures
      - name: getSchemas
      - name: getTables
      - name: queryData
    secrets:
      - name: cdata-connectcloud.pat
        env: CDATA_PAT
        example: <your-cdata-pat>
    env:
      - name: CDATA_USERNAME
        value: '{{cdata-connectcloud.username}}'
    prompts: 0
    resources: {}
    config:
      - name: cdata-connectcloud
        description: Configure the connection to CData Connect Cloud
        type: object
        properties:
          username:
            type: string
        required:
          - username
    metadata:
      pulls: 1477
      stars: 3
      githubStars: 2
      category: devops
      tags:
        - cdata-connectcloud
        - devops
      owner: CDataSoftware
  charmhealth-mcp-server:
    description: An MCP server for CharmHealth EHR that allows LLMs and MCP clients to interact with patient records, encounters, and practice information.
    title: CharmHealth MCP Server
    type: server
    dateAdded: "2025-09-04T19:31:40Z"
    image: mcp/charmhealth-mcp-server@sha256:55b309736e904905aa8495488587128f2ad27cbf065731f20dacf1a824afc602
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/charmhealth-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/charmhealth-mcp-server.json
    source: https://github.com/CharmHealth/charm-mcp-server/tree/main
    upstream: https://github.com/CharmHealth/charm-mcp-server
    icon: https://raw.githubusercontent.com/CharmHealth/charm-mcp-server/d7928f1ed514f59656e36693749dffea52ab04c2/Charm_icon.png
    tools:
      - name: findPatients
      - name: getPracticeInfo
      - name: manageAppointments
      - name: manageEncounter
      - name: managePatient
      - name: managePatientAllergies
      - name: managePatientDiagnoses
      - name: managePatientDrugs
      - name: managePatientFiles
      - name: managePatientLabs
      - name: managePatientNotes
      - name: managePatientRecalls
      - name: managePatientVitals
      - name: reviewPatientHistory
    secrets:
      - name: charmhealth-mcp-server.charmhealth_api_key
        env: CHARMHEALTH_API_KEY
        example: <CHARMHEALTH_API_KEY>
      - name: charmhealth-mcp-server.charmhealth_refresh_token
        env: CHARMHEALTH_REFRESH_TOKEN
        example: <CHARMHEALTH_REFRESH_TOKEN>
    env:
      - name: CHARMHEALTH_BASE_URL
        value: '{{charmhealth-mcp-server.charmhealth_base_url}}'
      - name: CHARMHEALTH_CLIENT_ID
        value: '{{charmhealth-mcp-server.charmhealth_client_id}}'
      - name: CHARMHEALTH_CLIENT_SECRET
        value: '{{charmhealth-mcp-server.charmhealth_client_secret}}'
      - name: CHARMHEALTH_REDIRECT_URI
        value: '{{charmhealth-mcp-server.charmhealth_redirect_uri}}'
      - name: CHARMHEALTH_TOKEN_URL
        value: '{{charmhealth-mcp-server.charmhealth_token_url}}'
    prompts: 0
    resources: {}
    config:
      - name: charmhealth-mcp-server
        description: Configure the connection to CharmHealth EHR
        type: object
        properties:
          charmhealth_base_url:
            type: string
          charmhealth_client_id:
            type: string
          charmhealth_client_secret:
            type: string
          charmhealth_redirect_uri:
            type: string
          charmhealth_token_url:
            type: string
    metadata:
      pulls: 299
      githubStars: 2
      category: productivity
      tags:
        - charmhealth
        - ehr
        - medical
        - productivity
      license: MIT License
      owner: CharmHealth
  chroma:
    description: A Model Context Protocol (MCP) server implementation that provides database capabilities for Chroma.
    title: Chroma
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/chroma@sha256:c050ca8e1d4e258dd66649fc91acbc77615ce4b89bbc18281a985932bd9c9874
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/chroma.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/chroma.json
    source: https://github.com/chroma-core/chroma-mcp/tree/main
    upstream: https://github.com/chroma-core/chroma-mcp
    icon: https://avatars.githubusercontent.com/u/105881770?s=200&v=4
    tools:
      - name: chroma_add_documents
      - name: chroma_create_collection
      - name: chroma_delete_collection
      - name: chroma_delete_documents
      - name: chroma_fork_collection
      - name: chroma_get_collection_count
      - name: chroma_get_collection_info
      - name: chroma_get_documents
      - name: chroma_list_collections
      - name: chroma_modify_collection
      - name: chroma_peek_collection
      - name: chroma_query_documents
      - name: chroma_update_documents
    secrets:
      - name: chroma.api_key
        env: CHROMA_API_KEY
        example: your-api-key
    prompts: 0
    resources: {}
    metadata:
      pulls: 4499
      stars: 5
      githubStars: 372
      category: devops
      tags:
        - chroma
        - devops
      license: Apache License 2.0
      owner: chroma-core
  circleci:
    description: A specialized server implementation for the Model Context Protocol (MCP) designed to integrate with CircleCI's development workflow. This project serves as a bridge between CircleCI's infrastructure and the Model Context Protocol, enabling enhanced AI-powered development experiences.
    title: CircleCI
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/circleci@sha256:1d0029137061c3769c1ca2ef112c4c5043bf42f1565ccb004ffa4bf2cb99a431
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/circleci.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/circleci.json
    source: https://github.com/cmrigney/mcp-server-circleci/tree/use-cmd-docker
    upstream: https://github.com/CircleCI-Public/mcp-server-circleci
    icon: https://avatars.githubusercontent.com/u/26607840?s=200&v=4
    tools:
      - name: analyze_diff
      - name: config_helper
      - name: create_prompt_template
      - name: find_flaky_tests
      - name: get_build_failure_logs
      - name: get_job_test_results
      - name: get_latest_pipeline_status
      - name: list_followed_projects
      - name: recommend_prompt_template_tests
      - name: rerun_workflow
      - name: run_evaluation_tests
      - name: run_pipeline
    secrets:
      - name: circleci.token
        env: CIRCLECI_TOKEN
        example: your-circleci-token
    env:
      - name: CIRCLECI_BASE_URL
        value: '{{circleci.url}}'
    command:
      - stdio
    prompts: 0
    resources: {}
    config:
      - name: circleci
        description: Configure the connection to CircleCI
        type: object
        properties:
          url:
            type: string
    metadata:
      pulls: 3105
      githubStars: 65
      category: devops
      tags:
        - circleci
        - devops
      license: Other
      owner: CircleCI-Public
  clickhouse:
    description: Official ClickHouse MCP Server.
    title: Official ClickHouse MCP Server
    type: server
    dateAdded: "2025-06-12T18:00:16Z"
    image: mcp/clickhouse@sha256:861aae9d664cc13efe099a30f38f187812937af7c985d72b1bc02cb83f0a4c98
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/clickhouse.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/clickhouse.json
    source: https://github.com/ClickHouse/mcp-clickhouse/tree/main
    upstream: https://github.com/ClickHouse/mcp-clickhouse
    icon: https://avatars.githubusercontent.com/u/54801242?v=4
    tools:
      - name: list_databases
      - name: list_tables
      - name: run_select_query
    secrets:
      - name: clickhouse.password
        env: CLICKHOUSE_PASSWORD
        example: <YOUR_CLICKHOUSE_PASSWORD_HERE>
    env:
      - name: CLICKHOUSE_HOST
        value: '{{clickhouse.host}}'
      - name: CLICKHOUSE_PORT
        value: '{{clickhouse.port}}'
      - name: CLICKHOUSE_USER
        value: '{{clickhouse.user}}'
      - name: CLICKHOUSE_SECURE
        value: '{{clickhouse.secure}}'
      - name: CLICKHOUSE_VERIFY
        value: '{{clickhouse.verify}}'
      - name: CLICKHOUSE_CONNECT_TIMEOUT
        value: '{{clickhouse.connect_timeout}}'
      - name: CLICKHOUSE_SEND_RECEIVE_TIMEOUT
        value: '{{clickhouse.send_receive_timeout}}'
    prompts: 0
    resources: {}
    config:
      - name: clickhouse
        description: Configure the connection to ClickHouse
        type: object
        properties:
          host:
            type: string
          port:
            type: string
          user:
            type: string
          secure:
            type: string
          verify:
            type: string
          connect_timeout:
            type: string
          send_receive_timeout:
            type: string
    metadata:
      pulls: 11902
      stars: 2
      githubStars: 544
      category: database
      tags:
        - database
        - clickhouse
      license: Apache License 2.0
      owner: ClickHouse
  close:
    description: Streamline sales processes with integrated calling, email, SMS, and automated workflows for small and scaling businesses.
    title: Close
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/close.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/close.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.close.com/mcp
      headers:
        Authorization: "Bearer ${CLOSE_API_KEY}"
    icon: https://www.google.com/s2/favicons?domain=close.com&sz=64
    tools: []
    secrets:
      - name: close.api_key
        env: CLOSE_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: crm
      tags:
        - crm
        - sales
        - customer-management
        - remote
      license: Apache License 2.0
      owner: docker
  cloud-run-mcp:
    description: MCP server to deploy apps to Cloud Run.
    title: Cloud Run MCP
    type: server
    dateAdded: "2025-08-08T16:55:52Z"
    image: mcp/cloud-run-mcp@sha256:66c636eb785bedfe7ab1905dab760f6ec73323e87e189989f59caa657cf5eca6
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/cloud-run-mcp.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/cloud-run-mcp.json
    source: https://github.com/GoogleCloudPlatform/cloud-run-mcp/tree/main
    upstream: https://github.com/GoogleCloudPlatform/cloud-run-mcp
    icon: https://avatars.githubusercontent.com/u/2810941?v=4
    tools:
      - name: create_project
      - name: deploy_container_image
      - name: deploy_file_contents
      - name: deploy_local_folder
      - name: get_service
      - name: get_service_log
      - name: list_projects
      - name: list_services
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /app/.config/gcloud/application_default_credentials.json
    volumes:
      - '{{cloud-run-mcp.credentials_path}}:/app/.config/gcloud/application_default_credentials.json'
    prompts: 0
    resources: {}
    config:
      - name: cloud-run-mcp
        description: Configure the connection to Google Cloud Run
        type: object
        properties:
          credentials_path:
            type: string
            description: path to application-default credentials (eg $HOME/.config/gcloud/application_default_credentials.json )
    metadata:
      pulls: 3111
      githubStars: 386
      category: devops
      tags:
        - devops
      license: Apache License 2.0
      owner: GoogleCloudPlatform
  cloudflare-docs:
    description: Access the latest documentation on Cloudflare products such as Workers, Pages, R2, D1, KV.
    title: Cloudflare Docs
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/cloudflare-docs.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/cloudflare-docs.json
    source: ""
    remote:
      transport_type: sse
      url: https://docs.mcp.cloudflare.com/sse
    icon: https://www.cloudflare.com/favicon.ico
    tools:
      - name: search_cloudflare_documentation
      - name: migrate_pages_to_workers_guide
    prompts: 0
    resources: {}
    metadata:
      category: documentation
      tags:
        - documentation
        - cloudflare
        - cloud
        - remote
      license: Apache License 2.0
      owner: docker
  cockroachdb:
    description: Enable AI agents to manage, monitor, and query CockroachDB using natural language. Perform complex database operations, cluster management, and query execution seamlessly through AI-driven workflows. Integrate effortlessly with MCP clients for scalable and high-performance data operations.
    title: CockroachDB
    type: server
    dateAdded: "2025-07-16T06:22:24Z"
    image: mcp/cockroachdb@sha256:4863594a246c6f86a5c4c87383a679353e9a6b4d85c3327c48464669cd236b1e
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/cockroachdb.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/cockroachdb.json
    source: https://github.com/amineelkouhen/mcp-cockroachdb/tree/main
    upstream: https://github.com/amineelkouhen/mcp-cockroachdb
    icon: https://avatars.githubusercontent.com/u/6748139?v=4
    tools:
      - name: analyze_performance
      - name: analyze_schema
      - name: bulk_import
      - name: connect
      - name: connect_database
      - name: create_database
      - name: create_index
      - name: create_table
      - name: create_view
      - name: describe_table
      - name: drop_database
      - name: drop_index
      - name: drop_table
      - name: drop_view
      - name: execute_query
      - name: execute_transaction
      - name: explain_query
      - name: get_active_connections
      - name: get_cluster_status
      - name: get_connection_status
      - name: get_database_settings
      - name: get_query_history
      - name: get_replication_status
      - name: get_table_relationships
      - name: list_databases
      - name: list_tables
      - name: list_views
      - name: show_running_queries
      - name: switch_database
    secrets:
      - name: cockroachdb.password
        env: CRDB_PWD
        example: ""
    env:
      - name: CRDB_HOST
        value: '{{cockroachdb.host}}'
      - name: CRDB_PORT
        value: '{{cockroachdb.port}}'
      - name: CRDB_DATABASE
        value: '{{cockroachdb.database}}'
      - name: CRDB_USERNAME
        value: '{{cockroachdb.username}}'
      - name: CRDB_SSL_MODE
        value: '{{cockroachdb.ssl_mode}}'
      - name: CRDB_SSL_CA_PATH
        value: '{{cockroachdb.ca_path}}'
      - name: CRDB_SSL_KEYFILE
        value: '{{cockroachdb.ssl_keyfile}}'
      - name: CRDB_SSL_CERTFILE
        value: '{{cockroachdb.ssl_certfile}}'
    prompts: 0
    resources: {}
    config:
      - name: cockroachdb
        description: Configure the connection to CockroachDB
        type: object
        properties:
          host:
            type: string
          port:
            type: integer
          database:
            type: string
          username:
            type: string
          ssl_mode:
            type: string
          ca_path:
            type: string
          ssl_keyfile:
            type: string
          ssl_certfile:
            type: string
    metadata:
      pulls: 865
      githubStars: 4
      category: database
      tags:
        - cockroachdb
        - database
      license: MIT License
      owner: amineelkouhen
  context7:
    description: Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors.
    title: Context7
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/context7@sha256:1174e6a29634a83b2be93ac1fefabf63265f498c02c72201fe3464e687dd8836
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/context7.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/context7.json
    source: https://github.com/upstash/context7/tree/v1.0.14
    upstream: https://github.com/upstash/context7
    icon: https://avatars.githubusercontent.com/u/74989412?s=200&v=4
    tools:
      - name: get-library-docs
      - name: resolve-library-id
    env:
      - name: MCP_TRANSPORT
        value: stdio
    prompts: 0
    resources: {}
    metadata:
      pulls: 102926
      stars: 15
      githubStars: 32073
      category: devops
      tags:
        - context7
        - devops
      license: MIT License
      owner: upstash
  curl:
    description: Standard curl tool.
    title: curl
    type: poci
    dateAdded: "2025-05-05T20:04:34Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/curl.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/curl.json
    source: ""
    icon: https://avatars.githubusercontent.com/u/16928085?s=200&v=4
    tools:
      - name: curl
        description: Run a curl command.
        parameters:
          type: object
          properties:
            args:
              type: array
              description: The arguments to pass to curl
              items:
                type: string
          required:
            - args
        container:
          image: alpine/curl@sha256:168563f2fe4b3f5d60fc3071af68ac9a6db40cfe07110ef0e942e91d80754200
          command:
            - '{{args|into}}'
    prompts: 0
    resources: {}
    metadata:
      category: devops
      tags:
        - http
      license: Apache License 2.0
      owner: docker
  cyreslab-ai-shodan:
    description: A Model Context Protocol server that provides access to Shodan API functionality.
    title: Shodan
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/cyreslab-ai-shodan@sha256:f99f2d2d69555aafcc67229ea7b757db57073d501ed1d60beb47049d3f60e08c
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/cyreslab-ai-shodan.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/cyreslab-ai-shodan.json
    source: https://github.com/Cyreslab-AI/shodan-mcp-server/tree/935f7044f60570cf2d094d94596eeea7872fb6be
    upstream: https://github.com/Cyreslab-AI/shodan-mcp-server
    icon: https://avatars.githubusercontent.com/u/178556137?s=200&v=4
    tools:
      - name: get_host_info
      - name: get_ssl_info
      - name: scan_network_range
      - name: search_iot_devices
      - name: search_shodan
    secrets:
      - name: cyreslab-ai-shodan.api_key
        env: SHODAN_API_KEY
        example: YOUR_SHODAN_API_KEY
    prompts: 0
    resources: {}
    metadata:
      pulls: 3338
      stars: 7
      githubStars: 29
      category: devops
      tags:
        - cyreslab-ai-shodan
        - devops
      license: MIT License
      owner: Cyreslab-AI
  dappier:
    description: Enable fast, free real-time web search and access premium data from trusted media brands—news, financial markets, sports, entertainment, weather, and more. Build powerful AI agents with Dappier.
    title: Dappier
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/dappier@sha256:ba9b2d17fc77406a7b8b54c29ee6915a4f8e6be88542f1c06316c589b7b5b7b6
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/dappier.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/dappier.json
    source: https://github.com/dappierai/dappier-mcp/tree/staging
    upstream: https://github.com/dappierai/dappier-mcp
    icon: https://avatars.githubusercontent.com/u/152645347?s=200&v=4
    tools:
      - name: dappier_ai_recommendations
      - name: dappier_real_time_search
    secrets:
      - name: dappier.api_key
        env: DAPPIER_API_KEY
        example: YOUR_API_KEY_HERE
    prompts: 0
    resources: {}
    metadata:
      pulls: 2296
      stars: 2
      githubStars: 32
      category: devops
      tags:
        - dappier
        - devops
      license: MIT License
      owner: DappierAI
  dappier-remote:
    description: Enable fast, free real-time web search and access premium data from trusted media brands—news, financial markets, sports, entertainment, weather, and more. Build powerful AI agents with Dappier.
    title: Dappier Remote MCP Server
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/dappier-remote.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/dappier-remote.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.dappier.com/mcp
      headers:
        Authorization: "Bearer ${DAPPIER_REMOTE_API_KEY}"
    icon: https://avatars.githubusercontent.com/u/152645347?s=200&v=4
    tools: []
    secrets:
      - name: dappier-remote.api_key
        env: DAPPIER_REMOTE_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: ai
      tags:
        - ai
        - rag
        - knowledge-base
        - remote
      license: Apache License 2.0
      owner: docker
  dart:
    description: Dart AI Model Context Protocol (MCP) server.
    title: Dart AI
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/dart@sha256:4f659b1a51ca3367c42022d179c303770525d4aa8027165c9bd1154f274751c6
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/dart.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/dart.json
    source: https://github.com/its-dart/dart-mcp-server/tree/main
    upstream: https://github.com/its-dart/dart-mcp-server
    icon: https://avatars.githubusercontent.com/u/92822028?s=200&v=4
    tools:
      - name: add_task_comment
      - name: create_doc
      - name: create_task
      - name: delete_doc
      - name: delete_task
      - name: get_config
      - name: get_dartboard
      - name: get_doc
      - name: get_folder
      - name: get_task
      - name: get_view
      - name: list_docs
      - name: list_task_comments
      - name: list_tasks
      - name: update_doc
      - name: update_task
    secrets:
      - name: dart.token
        env: DART_TOKEN
        example: dsa_...
    env:
      - name: DART_HOST
        value: '{{dart.host}}'
    prompts: 0
    resources: {}
    config:
      - name: dart
        description: Configure the connection to Dart
        type: object
        properties:
          host:
            type: string
    metadata:
      pulls: 3423
      stars: 1
      githubStars: 118
      category: devops
      tags:
        - dart
        - devops
      license: MIT License
      owner: its-dart
  database-server:
    description: Comprehensive database server supporting PostgreSQL, MySQL, and SQLite with natural language SQL query capabilities. Enables AI agents to interact with databases through both direct SQL and natural language queries.
    title: MCP Database Server
    type: server
    dateAdded: "2025-09-24T20:01:26Z"
    image: souhardyak/mcp-db-server@sha256:5a365d70ecf0ee7a45988515e1296dc38ada1977ae045c357f7c18f15117ea5f
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/database-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/database-server.json
    source: https://github.com/Souhar-dya/mcp-db-server/tree/main
    upstream: https://github.com/Souhar-dya/mcp-db-server
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: query_database
      - name: list_tables
      - name: describe_table
      - name: execute_sql
      - name: connect_to_database
      - name: get_connection_examples
      - name: get_current_database_info
    env:
      - name: DATABASE_URL
        value: '{{database-server.database_url}}'
    prompts: 0
    resources: {}
    config:
      - name: database-server
        description: Configure the database connection. Supports SQLite, PostgreSQL, and MySQL databases with comprehensive querying capabilities.
        type: object
        properties:
          database_url:
            type: string
            description: 'Connection string for your database. Examples: SQLite: sqlite+aiosqlite:///data/mydb.db, PostgreSQL: postgresql+asyncpg://user:password@localhost:5432/mydb, MySQL: mysql+aiomysql://user:password@localhost:3306/mydb'
        required:
          - database_url
    metadata:
      category: database
      tags:
        - database
        - sql
        - postgresql
        - mysql
        - sqlite
        - natural-language
        - ai-assistant
      license: Other
      owner: Souhar-dya
  databutton:
    description: Databutton MCP Server.
    title: Databutton
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/databutton@sha256:17928fc93e10ce510703a5aa0d123e1135ddd35ac7fbb20f59bfecacb9b06362
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/databutton.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/databutton.json
    source: https://github.com/databutton/databutton-mcp/tree/main
    upstream: https://github.com/databutton/databutton-mcp
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: submit_app_requirements
    prompts: 0
    resources: {}
    metadata:
      pulls: 3887
      stars: 1
      githubStars: 26
      category: devops
      tags:
        - databutton
        - devops
      license: MIT License
      owner: databutton
  deepwiki:
    description: Tools for fetching and asking questions about GitHub repositories.
    title: DeepWiki
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/deepwiki.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/deepwiki.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.deepwiki.com/sse
    icon: https://devin.ai/apple-icon.png
    tools:
      - name: read_wiki_structure
      - name: read_wiki_contents
      - name: ask_question
    prompts: 0
    resources: {}
    metadata:
      category: knowledge
      tags:
        - knowledge
        - wiki
        - documentation
        - remote
      license: Apache License 2.0
      owner: docker
  descope:
    description: The Descope Model Context Protocol (MCP) server provides an interface to interact with Descope's Management APIs, enabling the search and retrieval of project-related information.
    title: Descope
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/descope@sha256:554b2b490c18c44556b734b34068d6c754657977fd343a1ec047ce977e44ad87
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/descope.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/descope.json
    source: https://github.com/descope-sample-apps/descope-mcp-server/tree/main
    upstream: https://github.com/descope-sample-apps/descope-mcp-server
    icon: https://avatars.githubusercontent.com/u/119703169?s=200&v=4
    tools:
      - name: create-user
      - name: invite-user
      - name: search-audits
      - name: search-users
    secrets:
      - name: descope.management_key
        env: DESCOPE_MANAGEMENT_KEY
        example: your-descope-management-key-here
    env:
      - name: DESCOPE_PROJECT_ID
        value: '{{descope.project_id}}'
    prompts: 0
    resources: {}
    config:
      - name: descope
        description: Configure the connection to Descope
        type: object
        properties:
          project_id:
            type: string
        required:
          - project_id
    metadata:
      pulls: 2026
      githubStars: 25
      category: devops
      tags:
        - descope
        - devops
      license: MIT License
      owner: descope-sample-apps
  desktop-commander:
    description: Search, update, manage files and run terminal commands with AI.
    title: Desktop Commander
    type: server
    longLived: true
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/desktop-commander@sha256:0b9b5c37261f2bd1c14b4747904ae7872158e401c9df6663de24901c9dd1192b
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/desktop-commander.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/desktop-commander.json
    source: https://github.com/wonderwhy-er/DesktopCommanderMCP/tree/main
    upstream: https://github.com/wonderwhy-er/DesktopCommanderMCP
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: create_directory
      - name: edit_block
      - name: force_terminate
      - name: get_config
      - name: get_file_info
      - name: get_more_search_results
      - name: get_prompts
      - name: get_usage_stats
      - name: give_feedback_to_desktop_commander
      - name: interact_with_process
      - name: kill_process
      - name: list_directory
      - name: list_processes
      - name: list_searches
      - name: list_sessions
      - name: move_file
      - name: read_file
      - name: read_multiple_files
      - name: read_process_output
      - name: set_config_value
      - name: start_process
      - name: start_search
      - name: stop_search
      - name: write_file
    command:
      - npm
      - run
      - start
    volumes:
      - '{{desktop-commander.paths|volume|into}}'
    prompts: 0
    resources: {}
    config:
      - name: desktop-commander
        description: Configure filesystem access and network permissions for Desktop Commander
        type: object
        properties:
          paths:
            type: array
            description: List of directories that Desktop Commander can access
            items:
              type: string
        required:
          - paths
    metadata:
      pulls: 59274
      stars: 20
      githubStars: 4572
      category: devops
      tags:
        - desktop-commander
        - devops
        - filesystem
        - terminal
        - automation
        - file-management
        - productivity
        - local-system
        - tools
        - ai
      license: MIT License
      owner: wonderwhy-er
  devhub-cms:
    description: DevHub CMS LLM integration through the Model Context Protocol.
    title: DevHub CMS
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/devhub-cms@sha256:d09cf1f01b09b4ae67ceecf9f2bf61bbfc59304dee0b5aaa666922c2346cb610
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/devhub-cms.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/devhub-cms.json
    source: https://github.com/devhub/devhub-cms-mcp/tree/main
    upstream: https://github.com/devhub/devhub-cms-mcp
    icon: https://avatars.githubusercontent.com/u/602719?s=200&v=4
    tools:
      - name: create_blog_post
      - name: get_blog_post
      - name: get_businesses
      - name: get_hours_of_operation
      - name: get_locations
      - name: get_nearest_location
      - name: site_from_url
      - name: update_blog_post
      - name: update_hours
      - name: upload_image
    secrets:
      - name: devhub-cms.api_key
        env: DEVHUB_API_KEY
        example: YOUR_KEY_HERE
      - name: devhub-cms.api_secret
        env: DEVHUB_API_SECRET
        example: YOUR_SECRET_HERE
    env:
      - name: DEVHUB_BASE_URL
        value: '{{devhub-cms.url}}'
    prompts: 0
    resources: {}
    config:
      - name: devhub-cms
        description: Configure the connection to DevHub CMS
        type: object
        properties:
          url:
            type: string
        required:
          - url
    metadata:
      pulls: 2158
      githubStars: 6
      category: devops
      tags:
        - devhub-cms
        - devops
      owner: devhub
  docker:
    description: Use the Docker CLI.
    title: Docker
    type: poci
    dateAdded: "2025-05-05T20:04:34Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/docker.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/docker.json
    source: ""
    icon: https://avatars.githubusercontent.com/u/5429470?s=200&v=4
    tools:
      - name: docker
        description: use the docker cli
        parameters:
          type: object
          properties:
            args:
              type: array
              description: Arguments to pass to the Docker command
              items:
                type: string
          required:
            - args
        container:
          image: docker:cli@sha256:6a73c9433f2ba4279815be1e60f5739288b939dda1e48151d8c393537802de37
          command:
            - '{{args|into}}'
          volumes:
            - /var/run/docker.sock:/var/run/docker.sock
    prompts: 0
    resources: {}
    metadata:
      category: devops
      tags:
        - docker
      license: Apache License 2.0
      owner: docker
  dodo-payments:
    description: Tools for cross-border payments, taxes, and compliance.
    title: Dodo Payments
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/dodo-payments.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/dodo-payments.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.dodopayments.com/sse
      headers:
        Authorization: "Bearer ${DODO_PAYMENTS_API_KEY}"
    icon: https://www.google.com/s2/favicons?domain=dodopayments.com&sz=64
    tools: []
    secrets:
      - name: dodo-payments.api_key
        env: DODO_PAYMENTS_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: payments
      tags:
        - payments
        - finance
        - transactions
        - remote
      license: Apache License 2.0
      owner: docker
  dreamfactory-mcp:
    description: DreamFactory is a REST API generation platform with support for hundreds of data sources, including Microsoft SQL Server, MySQL, PostgreSQL, and MongoDB. The DreamFactory MCP Server makes it easy for users to securely interact with their data sources via an MCP client.
    title: DreamFactory MCP Server
    type: server
    dateAdded: "2025-09-17T06:19:29Z"
    image: mcp/df-mcp@sha256:c71c0564003a8dc4409aedd54a0e5bb4a0cd26ff91de849b46526aadb90f3aa8
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/dreamfactory-mcp.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/dreamfactory-mcp.json
    source: https://github.com/dreamfactorysoftware/df-mcp/tree/master
    upstream: https://github.com/dreamfactorysoftware/df-mcp
    icon: https://avatars.githubusercontent.com/u/2593688?v=4
    tools:
      - name: call-stored-function
      - name: call-stored-procedure
      - name: get-stored-functions
      - name: get-stored-procedures
      - name: get-table-data
      - name: get-table-schema
      - name: get-tables
      - name: list-tools
    env:
      - name: DREAMFACTORY_URL
        value: '{{dreamfactory-mcp.dreamfactoryurl}}'
      - name: DREAMFACTORY_API_KEY
        value: '{{dreamfactory-mcp.dreamfactoryapikey}}'
    prompts: 0
    resources: {}
    config:
      - name: dreamfactory-mcp
        description: Configure the connection to DreamFactory MCP Server
        type: object
        properties:
          dreamfactoryurl:
            type: string
          dreamfactoryapikey:
            type: string
    metadata:
      pulls: 156
      githubStars: 3
      category: database
      tags:
        - database
      license: Apache License 2.0
      owner: dreamfactorysoftware
  dynatrace-mcp-server:
    description: This MCP Server allows interaction with the Dynatrace observability platform, brining real-time observability data directly into your development workflow.
    title: Dynatrace MCP Server
    type: server
    dateAdded: "2025-08-11T20:20:11Z"
    image: mcp/dynatrace-mcp-server@sha256:101536db9b2538162dbb1566b96b10bbb513b70442785a97155d5376344de0ec
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/dynatrace-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/dynatrace-mcp-server.json
    source: https://github.com/dynatrace-oss/dynatrace-mcp/tree/main
    upstream: https://github.com/dynatrace-oss/dynatrace-mcp
    icon: https://avatars.githubusercontent.com/u/58178984?s=200&v=4
    tools:
      - name: chat_with_davis_copilot
      - name: create_workflow_for_notification
      - name: execute_dql
      - name: explain_dql_in_natural_language
      - name: find_entity_by_name
      - name: generate_dql_from_natural_language
      - name: get_entity_details
      - name: get_environment_info
      - name: get_kubernetes_events
      - name: get_logs_for_entity
      - name: get_ownership
      - name: list_problems
      - name: list_vulnerabilities
      - name: make_workflow_public
      - name: send_slack_message
      - name: verify_dql
    secrets:
      - name: dynatrace-mcp-server.oauth_client_id
        env: OAUTH_CLIENT_ID
        example: dt0s02.SAMPLE
      - name: dynatrace-mcp-server.oauth_client_secret
        env: OAUTH_CLIENT_SECRET
        example: dt0s02.SAMPLE.abcd1234
    env:
      - name: DT_ENVIRONMENT
        value: '{{dynatrace-mcp-server.url}}'
    prompts: 0
    resources: {}
    config:
      - name: dynatrace-mcp-server
        description: Configure the connection to Dynatrace
        type: object
        properties:
          url:
            type: string
    metadata:
      pulls: 1140
      githubStars: 146
      category: monitoring
      tags:
        - Dynatrace
        - Observability
        - Monitoring
      license: MIT License
      owner: dynatrace-oss
  e2b:
    description: Giving Claude ability to run code with E2B via MCP (Model Context Protocol).
    title: E2B
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/e2b@sha256:d7f0ece1b21f69fec668b35b43686939a222bcd91e43cb8bc26ef6144fea0be1
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/e2b.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/e2b.json
    source: https://github.com/e2b-dev/mcp-server/tree/main
    upstream: https://github.com/e2b-dev/mcp-server
    icon: https://avatars.githubusercontent.com/u/129434473?s=200&v=4
    tools:
      - name: run_code
    secrets:
      - name: e2b.api_key
        env: E2B_API_KEY
        example: YOUR_API_KEY_HERE
    prompts: 0
    resources: {}
    metadata:
      pulls: 2980
      stars: 2
      githubStars: 332
      category: devops
      tags:
        - e2b
        - devops
      license: Apache License 2.0
      owner: e2b-dev
  edubase:
    description: The EduBase MCP server enables Claude and other LLMs to interact with EduBase's comprehensive e-learning platform through the Model Context Protocol (MCP).
    title: EduBase
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/edubase@sha256:7498d77b4363bcba703edf2c748487ed29f762102c1e68db563bebd63a056e42
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/edubase.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/edubase.json
    source: https://github.com/EduBase/MCP/tree/main
    upstream: https://github.com/EduBase/MCP
    icon: https://avatars.githubusercontent.com/u/33938028?s=200&v=4
    tools:
      - name: edubase_delete_class_members
      - name: edubase_delete_class_permission
      - name: edubase_delete_class_tag
      - name: edubase_delete_course_permission
      - name: edubase_delete_course_tag
      - name: edubase_delete_course_transfer
      - name: edubase_delete_event_permission
      - name: edubase_delete_event_tag
      - name: edubase_delete_exam
      - name: edubase_delete_exam_permission
      - name: edubase_delete_exam_tag
      - name: edubase_delete_exam_users
      - name: edubase_delete_integration
      - name: edubase_delete_integration_permission
      - name: edubase_delete_integration_tag
      - name: edubase_delete_organization
      - name: edubase_delete_organization_members
      - name: edubase_delete_organization_permission
      - name: edubase_delete_organization_tag
      - name: edubase_delete_organization_webhook
      - name: edubase_delete_question
      - name: edubase_delete_quiz
      - name: edubase_delete_quiz_permission
      - name: edubase_delete_quiz_questions
      - name: edubase_delete_quiz_tag
      - name: edubase_delete_scorm_permission
      - name: edubase_delete_scorm_tag
      - name: edubase_delete_tag_permission
      - name: edubase_delete_user
      - name: edubase_delete_user_assume
      - name: edubase_delete_user_classes
      - name: edubase_delete_user_login
      - name: edubase_delete_user_organizations
      - name: edubase_delete_video_permission
      - name: edubase_delete_video_tag
      - name: edubase_get_class
      - name: edubase_get_class_assignments
      - name: edubase_get_class_members
      - name: edubase_get_class_permission
      - name: edubase_get_class_tag
      - name: edubase_get_class_tags
      - name: edubase_get_classes
      - name: edubase_get_course_permission
      - name: edubase_get_course_tag
      - name: edubase_get_course_tags
      - name: edubase_get_event_permission
      - name: edubase_get_event_tag
      - name: edubase_get_event_tags
      - name: edubase_get_exam
      - name: edubase_get_exam_certificates_user
      - name: edubase_get_exam_permission
      - name: edubase_get_exam_results_raw
      - name: edubase_get_exam_results_user
      - name: edubase_get_exam_tag
      - name: edubase_get_exam_tags
      - name: edubase_get_exam_users
      - name: edubase_get_exams
      - name: edubase_get_integration
      - name: edubase_get_integration_keys
      - name: edubase_get_integration_permission
      - name: edubase_get_integration_tag
      - name: edubase_get_integration_tags
      - name: edubase_get_integrations
      - name: edubase_get_organization
      - name: edubase_get_organization_members
      - name: edubase_get_organization_permission
      - name: edubase_get_organization_tag
      - name: edubase_get_organization_tags
      - name: edubase_get_organization_webhook
      - name: edubase_get_organizations
      - name: edubase_get_question
      - name: edubase_get_question_id
      - name: edubase_get_questions
      - name: edubase_get_quiz
      - name: edubase_get_quiz_permission
      - name: edubase_get_quiz_play_results
      - name: edubase_get_quiz_questions
      - name: edubase_get_quiz_results_user
      - name: edubase_get_quiz_tag
      - name: edubase_get_quiz_tags
      - name: edubase_get_quizes
      - name: edubase_get_scorm_permission
      - name: edubase_get_scorm_tag
      - name: edubase_get_scorm_tags
      - name: edubase_get_tag
      - name: edubase_get_tag_permission
      - name: edubase_get_tags
      - name: edubase_get_user
      - name: edubase_get_user_classes
      - name: edubase_get_user_group
      - name: edubase_get_user_login
      - name: edubase_get_user_name
      - name: edubase_get_user_organizations
      - name: edubase_get_user_search
      - name: edubase_get_users
      - name: edubase_get_video_permission
      - name: edubase_get_video_tag
      - name: edubase_get_video_tags
      - name: edubase_patch_integration
      - name: edubase_patch_organization
      - name: edubase_patch_organization_webhook
      - name: edubase_patch_user
      - name: edubase_post_class_members
      - name: edubase_post_class_permission
      - name: edubase_post_class_tag
      - name: edubase_post_class_transfer
      - name: edubase_post_classes_members
      - name: edubase_post_course_permission
      - name: edubase_post_course_tag
      - name: edubase_post_custom_metric
      - name: edubase_post_event_permission
      - name: edubase_post_event_tag
      - name: edubase_post_event_transfer
      - name: edubase_post_exam
      - name: edubase_post_exam_certificates_user_download
      - name: edubase_post_exam_permission
      - name: edubase_post_exam_summary
      - name: edubase_post_exam_tag
      - name: edubase_post_exam_transfer
      - name: edubase_post_exam_users
      - name: edubase_post_integration
      - name: edubase_post_integration_keys
      - name: edubase_post_integration_permission
      - name: edubase_post_integration_tag
      - name: edubase_post_integration_transfer
      - name: edubase_post_organization
      - name: edubase_post_organization_members
      - name: edubase_post_organization_permission
      - name: edubase_post_organization_tag
      - name: edubase_post_organization_transfer
      - name: edubase_post_organization_webhook
      - name: edubase_post_organization_webhook_trigger
      - name: edubase_post_organizations_members
      - name: edubase_post_question
      - name: edubase_post_question_export
      - name: edubase_post_question_id
      - name: edubase_post_quiz
      - name: edubase_post_quiz_permission
      - name: edubase_post_quiz_questions
      - name: edubase_post_quiz_tag
      - name: edubase_post_quiz_transfer
      - name: edubase_post_scorm_permission
      - name: edubase_post_scorm_tag
      - name: edubase_post_scorm_transfer
      - name: edubase_post_tag_permission
      - name: edubase_post_tag_transfer
      - name: edubase_post_user
      - name: edubase_post_user_assume
      - name: edubase_post_user_classes
      - name: edubase_post_user_group
      - name: edubase_post_user_login
      - name: edubase_post_user_name
      - name: edubase_post_user_organizations
      - name: edubase_post_video_permission
      - name: edubase_post_video_tag
      - name: edubase_post_video_transfer
    secrets:
      - name: edubase.api_key
        env: EDUBASE_API_KEY
        example: YOUR_EDUBASE_API_KEY
    env:
      - name: EDUBASE_API_APP
        value: '{{edubase.app}}'
      - name: EDUBASE_API_URL
        value: '{{edubase.url}}'
    prompts: 0
    resources: {}
    config:
      - name: edubase
        description: Configure the connection to EduBase
        type: object
        properties:
          app:
            type: string
          url:
            type: string
        required:
          - app
          - url
    metadata:
      pulls: 2344
      stars: 1
      githubStars: 20
      category: devops
      tags:
        - edubase
        - devops
      license: MIT License
      owner: EduBase
  effect-mcp:
    description: Tools and resources for writing Effect code in Typescript.
    title: Effect MCP
    type: server
    dateAdded: "2025-09-02T20:44:02Z"
    image: mcp/effect-mcp@sha256:446da71b58f947b0942fc371e2493ccb38bab8f96a6554c02a52c715cfd3925a
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/effect-mcp.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/effect-mcp.json
    source: https://github.com/tim-smart/effect-mcp/tree/main
    upstream: https://github.com/tim-smart/effect-mcp
    icon: https://avatars.githubusercontent.com/u/77678942?v=4
    tools:
      - name: effect_doc_search
      - name: get_effect_doc
    prompts: 0
    resources: {}
    metadata:
      pulls: 680
      githubStars: 186
      category: productivity
      tags:
        - productivity
      license: MIT License
      owner: tim-smart
  elevenlabs:
    description: Official ElevenLabs Model Context Protocol (MCP) server that enables interaction with powerful Text to Speech and audio processing APIs.
    title: Elevenlabs MCP
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/elevenlabs@sha256:7bea19b12e1bf05a2afc2f77edcd8d39684284095719e6ab27410aeab3107956
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/elevenlabs.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/elevenlabs.json
    source: https://github.com/elevenlabs/elevenlabs-mcp/tree/main
    upstream: https://github.com/elevenlabs/elevenlabs-mcp
    icon: https://avatars.githubusercontent.com/u/94471909?v=4
    tools:
      - name: add_knowledge_base_to_agent
      - name: check_subscription
      - name: compose_music
      - name: create_agent
      - name: create_composition_plan
      - name: create_voice_from_preview
      - name: get_agent
      - name: get_conversation
      - name: get_voice
      - name: isolate_audio
      - name: list_agents
      - name: list_conversations
      - name: list_models
      - name: list_phone_numbers
      - name: make_outbound_call
      - name: play_audio
      - name: search_voice_library
      - name: search_voices
      - name: speech_to_speech
      - name: speech_to_text
      - name: text_to_sound_effects
      - name: text_to_speech
      - name: text_to_voice
      - name: voice_clone
    secrets:
      - name: elevenlabs.api_key
        env: ELEVENLABS_API_KEY
        example: <ELEVENLABS_API_KEY>
    volumes:
      - '{{elevenlabs.data}}:/root/Desktop'
    prompts: 0
    resources: {}
    config:
      - name: elevenlabs
        description: Configure the connection to ElevenLabs. Elevenlabs.data is the path to the data directory where the audio files will be stored.
        type: object
        properties:
          data:
            type: string
        required:
          - data
    metadata:
      pulls: 7151
      stars: 6
      githubStars: 994
      category: ai
      tags:
        - elevenlabs
        - elevenlabs-api
      license: MIT License
      owner: elevenlabs
  everart:
    description: Image generation server using EverArt's API.
    title: EverArt (Archived)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/everart@sha256:98c2aa1b623196f1feaef11bbd284b69dc4aefc1822329794d5f66e388a997f9
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/everart.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/everart.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: generate_image
    secrets:
      - name: everart.api_key
        env: EVERART_API_KEY
        example: your_key_here
    prompts: 0
    resources: {}
    metadata:
      pulls: 2666
      stars: 3
      githubStars: 69195
      category: search
      tags:
        - everart
        - search
      license: MIT License
      owner: modelcontextprotocol
  exa:
    description: Exa MCP for web search and web crawling!.
    title: Exa
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/exa@sha256:61f88e24df5bc379133f97feb7d5865c2531c56759c8a34f8cd88e02bf33867d
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/exa.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/exa.json
    source: https://github.com/exa-labs/exa-mcp-server/tree/6ebf32f550168af016837efe31960c6548c831aa
    upstream: https://github.com/exa-labs/exa-mcp-server
    icon: https://avatars.githubusercontent.com/u/77906174?s=200&v=4
    tools:
      - name: web_search_exa
    secrets:
      - name: exa.api_key
        env: EXA_API_KEY
        example: your-api-key-here
    prompts: 0
    resources: {}
    metadata:
      pulls: 4561
      stars: 4
      githubStars: 2750
      category: search
      tags:
        - exa
        - devops
        - search
      license: MIT License
      owner: exa-labs
  explorium:
    description: Discover companies, contacts, and business insights—powered by dozens of trusted external data sources.
    title: Explorium B2B Data
    type: server
    dateAdded: "2025-09-19T18:59:08Z"
    image: mcp/explorium@sha256:6454e9a8eabc7d889cebbf81a6b3747bf1fd3653d0eaf8e10c4444ebdcbf47ba
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/explorium.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/explorium.json
    source: https://github.com/explorium-ai/mcp-explorium/tree/main
    upstream: https://github.com/explorium-ai/mcp-explorium
    icon: https://marketing-public-links.s3.us-east-1.amazonaws.com/Brand/Logo-dark.png
    tools:
      - name: match-business
      - name: fetch-businesses
      - name: fetch-businesses-statistics
      - name: fetch-businesses-events
      - name: enrich-business
      - name: match-prospects
      - name: fetch-prospects
      - name: fetch-prospects-events
      - name: fetch-prospects-statistics
      - name: enrich-prospects
      - name: autocomplete
      - name: web-search
    secrets:
      - name: explorium.api_key
        env: API_ACCESS_TOKEN
        example: <API_TOKEN>
    prompts: 0
    resources: {}
    metadata:
      pulls: 120
      githubStars: 17
      category: search
      tags:
        - search
        - explorium
        - b2b-data
        - business
        - prospecting
        - emails
        - phone-numbers
        - sales
      license: MIT License
      owner: explorium-ai
  ffmpeg:
    description: Use ffmpeg to process video files.
    title: FFmpeg
    type: poci
    dateAdded: "2025-05-05T20:04:34Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/ffmpeg.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/ffmpeg.json
    source: ""
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/ffmpeg.svg
    tools:
      - name: imagemagick
        description: Run a imagemagick command
        parameters:
          type: object
          properties:
            args:
              type: string
              description: The arguments to pass to imagemagick
          required:
            - args
        container:
          image: vonwig/imagemagick@sha256:e97f4c2afc8fe98513504dab81659d559b778c35cc345223f7fea10ddf8896fd
          command:
            - '{{args|into}}'
      - name: file-exists
        description: check if a file exists
        parameters:
          type: object
          properties:
            path:
              type: string
              description: ""
          required:
            - path
        container:
          image: busybox@sha256:d82f458899c9696cb26a7c02d5568f81c8c8223f8661bb2a7988b269c8b9051e
          command:
            - test
            - -f
            - '{{path}}'
          volumes:
            - '{{path}}:{{path}}'
      - name: ffmpeg
        description: run the ffmpeg command
        parameters:
          type: object
          properties:
            args:
              type: array
              description: arguments to pass to ffmpeg
              items:
                type: string
            basedir:
              type: string
              description: base directory
          required:
            - basedir
            - args
        container:
          image: linuxserver/ffmpeg:version-7.1-cli@sha256:81dced07b567c22cfdbabc9b5f988be54352812fe24ebc5f11f86851681747c5
          command:
            - '{{args|into}}'
          volumes:
            - '{{basedir}}:{{basedir}}'
    prompts: 0
    resources: {}
    metadata:
      category: video
      tags:
        - ffmpeg
        - video
      license: Apache License 2.0
      owner: docker
  fibery:
    description: Interact with your Fibery workspace.
    title: Fibery
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/fibery@sha256:180025908104eefa42f748382d2f25904e07109df3ae53bf960a6c61100f901f
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/fibery.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/fibery.json
    source: https://github.com/Fibery-inc/fibery-mcp-server/tree/main
    upstream: https://github.com/Fibery-inc/fibery-mcp-server
    icon: https://avatars.githubusercontent.com/u/72027989?v=4
    tools:
      - name: create_entities_batch
      - name: create_entity
      - name: current_date
      - name: describe_database
      - name: list_databases
      - name: query_database
      - name: update_entity
    secrets:
      - name: fibery.api_token
        env: FIBERY_API_TOKEN
        example: your-api-token
    env:
      - name: FIBERY_HOST
        value: '{{fibery.host}}'
    prompts: 0
    resources: {}
    config:
      - name: fibery
        description: Configure the connection to Fibery
        type: object
        properties:
          dreamfactoryurl:
            type: string
          dreamfactoryapikey:
            type: string
    metadata:
      pulls: 1821
      githubStars: 26
      category: devops
      tags:
        - fibery
        - devops
      license: MIT License
      owner: Fibery-inc
  filesystem:
    description: Local filesystem access with configurable allowed paths.
    title: Filesystem (Reference)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/filesystem@sha256:35fcf0217ca0d5bf7b0a5bd68fb3b89e08174676c0e0b4f431604512cf7b3f67
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/filesystem.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/filesystem.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: create_directory
      - name: directory_tree
      - name: edit_file
      - name: get_file_info
      - name: list_allowed_directories
      - name: list_directory
      - name: move_file
      - name: read_file
      - name: read_multiple_files
      - name: search_files
      - name: write_file
    command:
      - '{{filesystem.paths|volume-target|into}}'
    volumes:
      - '{{filesystem.paths|volume|into}}'
    disableNetwork: true
    prompts: 0
    resources: {}
    config:
      - name: filesystem
        description: The MCP server is allowed to access these paths
        type: object
        properties:
          paths:
            type: array
            items:
              type: string
        required:
          - paths
    metadata:
      pulls: 52439
      stars: 26
      githubStars: 69195
      category: devops
      tags:
        - filesystem
        - devops
      license: MIT License
      owner: modelcontextprotocol
  find-a-domain:
    description: Tools for finding domain names.
    title: Find-A-Domain
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/find-a-domain.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/find-a-domain.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://api.findadomain.dev/mcp
    icon: https://www.google.com/s2/favicons?domain=findadomain.dev&sz=64
    tools:
      - name: check_domain
      - name: list_tlds
    prompts: 0
    resources: {}
    metadata:
      category: tools
      tags:
        - tools
        - domain
        - productivity
        - remote
      license: Apache License 2.0
      owner: docker
  firecrawl:
    description: "\U0001F525 Official Firecrawl MCP Server - Adds powerful web scraping and search to Cursor, Claude and any other LLM clients."
    title: Firecrawl
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/firecrawl@sha256:c86979f828633a2b2d17720e4114726c9d8254f4044d90131b5a824248e3c023
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/firecrawl.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/firecrawl.json
    source: https://github.com/mendableai/firecrawl-mcp-server/tree/main
    upstream: https://github.com/mendableai/firecrawl-mcp-server
    icon: https://avatars.githubusercontent.com/u/135057108?s=200&v=4
    tools:
      - name: firecrawl_check_crawl_status
      - name: firecrawl_crawl
      - name: firecrawl_extract
      - name: firecrawl_map
      - name: firecrawl_scrape
      - name: firecrawl_search
    secrets:
      - name: firecrawl.api_key
        env: FIRECRAWL_API_KEY
        example: YOUR-API-KEY
    env:
      - name: FIRECRAWL_API_URL
        value: '{{firecrawl.url}}'
      - name: FIRECRAWL_RETRY_MAX_ATTEMPTS
        value: '{{firecrawl.retry_max}}'
      - name: FIRECRAWL_RETRY_INITIAL_DELAY
        value: '{{firecrawl.retry_delay}}'
      - name: FIRECRAWL_RETRY_MAX_DELAY
        value: '{{firecrawl.retry_max_delay}}'
      - name: FIRECRAWL_RETRY_BACKOFF_FACTOR
        value: '{{firecrawl.retry_backoff_factor}}'
      - name: FIRECRAWL_CREDIT_WARNING_THRESHOLD
        value: '{{firecrawl.credit_warning_threshold}}'
      - name: FIRECRAWL_CREDIT_CRITICAL_THRESHOLD
        value: '{{firecrawl.credit_critical_threshold}}'
    prompts: 0
    resources: {}
    config:
      - name: firecrawl
        description: Configure the connection to Firecrawl
        type: object
        properties:
          credit_critical_threshold:
            type: integer
          credit_warning_threshold:
            type: integer
          retry_backoff_factor:
            type: integer
          retry_delay:
            type: integer
          retry_max:
            type: integer
          retry_max_delay:
            type: integer
          url:
            type: string
    metadata:
      pulls: 35759
      stars: 14
      githubStars: 4627
      category: search
      tags:
        - firecrawl
        - search
        - scraping
      license: MIT License
      owner: firecrawl
  firewalla-mcp-server:
    description: Real-time network monitoring, security analysis, and firewall management through 28 specialized tools. Access security alerts, network flows, device status, and firewall rules directly from your Firewalla device.
    title: Firewalla MCP Server
    type: server
    dateAdded: "2025-07-29T14:05:27Z"
    image: mcp/firewalla-mcp-server@sha256:af186f868759476978d884704a2736dd070c207424f23fe3f7d46a8bd385c2ed
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/firewalla-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/firewalla-mcp-server.json
    source: https://github.com/amittell/firewalla-mcp-server/tree/main
    upstream: https://github.com/amittell/firewalla-mcp-server
    icon: https://avatars.githubusercontent.com/u/16805913?s=200&v=4
    tools:
      - name: create_target_list
      - name: delete_target_list
      - name: get_active_alarms
      - name: get_alarm_trends
      - name: get_bandwidth_usage
      - name: get_boxes
      - name: get_device_status
      - name: get_flow_data
      - name: get_flow_insights
      - name: get_network_rules
      - name: get_network_rules_summary
      - name: get_offline_devices
      - name: get_recent_flow_activity
      - name: get_rule_trends
      - name: get_simple_statistics
      - name: get_specific_alarm
      - name: get_specific_target_list
      - name: get_statistics_by_box
      - name: get_statistics_by_region
      - name: get_target_lists
      - name: pause_rule
      - name: resume_rule
      - name: search_alarms
      - name: search_devices
      - name: search_flows
      - name: search_rules
      - name: search_target_lists
      - name: update_target_list
    secrets:
      - name: firewalla-mcp-server.msp_token
        env: FIREWALLA_MSP_TOKEN
        example: your_msp_access_token_here
    env:
      - name: FIREWALLA_MSP_ID
        value: '{{firewalla-mcp-server.msp_id}}'
      - name: FIREWALLA_BOX_ID
        value: '{{firewalla-mcp-server.box_id}}'
      - name: MCP_WAVE0_ENABLED
        value: "true"
      - name: MCP_READ_ONLY_MODE
        value: "false"
      - name: MCP_CACHE_ENABLED
        value: "true"
      - name: MCP_DEBUG_MODE
        value: "false"
      - name: NODE_ENV
        value: production
      - name: LOG_LEVEL
        value: info
      - name: MCP_CACHE_TTL
        value: "300"
      - name: MCP_RATE_LIMIT_WINDOW
        value: "60000"
      - name: MCP_RATE_LIMIT_MAX_REQUESTS
        value: "100"
    prompts: 0
    resources: {}
    config:
      - name: firewalla-mcp-server
        description: Configure your Firewalla MSP connection credentials
        type: object
        properties:
          msp_id:
            type: string
            description: Your Firewalla MSP domain (e.g., yourdomain.firewalla.net)
          box_id:
            type: string
            description: Your Firewalla Box Global ID
    metadata:
      pulls: 822
      githubStars: 6
      category: security
      tags:
        - firewall
        - security
        - monitoring
        - network
        - threat-detection
      license: MIT License
      owner: amittell
  flexprice:
    description: Official flexprice MCP Server.
    title: FlexPrice
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/flexprice@sha256:70c2126ddacdc4f8f3c003d59327288c050802cab6ce6b779821bc2af384a65c
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/flexprice.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/flexprice.json
    source: https://github.com/flexprice/mcp-server/tree/main
    upstream: https://github.com/flexprice/mcp-server
    icon: https://avatars.githubusercontent.com/u/168305045?v=4
    tools:
      - name: getCustomerById
      - name: getCustomerByLookupKey
      - name: getCustomerEntitlements
      - name: getCustomerSubscriptions
      - name: getCustomerUsageSummary
      - name: getCustomers
      - name: getEventsByCustomer
      - name: getInvoiceById
      - name: getInvoiceByNumber
      - name: getInvoices
      - name: getInvoicesByCustomerId
      - name: getPaymentById
      - name: getPayments
      - name: getPlanById
      - name: getPlans
      - name: getPriceById
      - name: getPrices
      - name: getSubscriptionById
      - name: getSubscriptionPauses
      - name: getSubscriptionUsage
      - name: getSubscriptions
      - name: getWalletBalance
      - name: getWalletById
      - name: getWalletTransactions
      - name: getWalletsByCustomerId
    secrets:
      - name: flexprice.api_key
        env: API_KEY
        example: your_api_key_here
    env:
      - name: BASE_URL
        value: '{{flexprice.base_url}}'
    prompts: 0
    resources: {}
    config:
      - name: flexprice
        description: Configure the connection to Redis
        type: object
        properties:
          base_url:
            type: string
    metadata:
      pulls: 1698
      stars: 1
      githubStars: 4
      category: devops
      tags:
        - flexprice
        - devops
      license: Apache License 2.0
      owner: flexprice
  github:
    description: Tools for interacting with the GitHub API, enabling file operations, repository management, search functionality, and more.
    title: GitHub (Archived)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/github@sha256:89fd71b6f2dd098de0d7517c1899b7fe90590d3193e253991d61a800b041bfd4
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/github.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/github.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: add_issue_comment
      - name: create_branch
      - name: create_issue
      - name: create_or_update_file
      - name: create_pull_request
      - name: create_pull_request_review
      - name: create_repository
      - name: fork_repository
      - name: get_file_contents
      - name: get_issue
      - name: get_pull_request
      - name: get_pull_request_comments
      - name: get_pull_request_files
      - name: get_pull_request_reviews
      - name: get_pull_request_status
      - name: list_commits
      - name: list_issues
      - name: list_pull_requests
      - name: merge_pull_request
      - name: push_files
      - name: search_code
      - name: search_issues
      - name: search_repositories
      - name: search_users
      - name: update_issue
      - name: update_pull_request_branch
    secrets:
      - name: github.personal_access_token
        env: GITHUB_PERSONAL_ACCESS_TOKEN
        example: <YOUR_TOKEN>
    prompts: 0
    resources: {}
    metadata:
      pulls: 53573
      stars: 20
      githubStars: 69195
      category: devops
      tags:
        - github
        - devops
      license: MIT License
      owner: modelcontextprotocol
  github-chat:
    description: A Model Context Protocol (MCP) for analyzing and querying GitHub repositories using the GitHub Chat API.
    title: GitHub Chat
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/github-chat@sha256:c9b12a1664919c8dbae726ef3f36761ee42b1a729ae17b820f73e6c59063047b
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/github-chat.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/github-chat.json
    source: https://github.com/AsyncFuncAI/github-chat-mcp/tree/main
    upstream: https://github.com/AsyncFuncAI/github-chat-mcp
    icon: https://avatars.githubusercontent.com/u/194295535?s=200&v=4
    tools:
      - name: index_repository
      - name: query_repository
    secrets:
      - name: github-chat.api_key
        env: GITHUB_API_KEY
        example: YOUR_GITHUB_API_KEY
    prompts: 0
    resources: {}
    metadata:
      pulls: 3566
      stars: 4
      githubStars: 64
      category: devops
      tags:
        - github-chat
        - devops
      license: MIT License
      owner: AsyncFuncAI
  gitlab:
    description: MCP Server for the GitLab API, enabling project management, file operations, and more.
    title: GitLab (Archived)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/gitlab@sha256:a1b8571a210a3c8b17b288498d287cd1c3512c10519330ea71ca48e559e78917
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/gitlab.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/gitlab.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/1086321?s=200&v=4
    tools:
      - name: create_branch
      - name: create_issue
      - name: create_merge_request
      - name: create_or_update_file
      - name: create_repository
      - name: fork_repository
      - name: get_file_contents
      - name: push_files
      - name: search_repositories
    secrets:
      - name: gitlab.personal_access_token
        env: GITLAB_PERSONAL_ACCESS_TOKEN
        example: <YOUR_TOKEN>
    env:
      - name: GITLAB_API_URL
        value: '{{gitlab.url}}'
    prompts: 0
    resources: {}
    config:
      - name: gitlab
        description: Configure the local or Cloud GitLab instance
        type: object
        properties:
          url:
            type: string
            description: api url - optional for self-hosted instances
    metadata:
      pulls: 17069
      stars: 20
      githubStars: 69195
      category: devops
      tags:
        - gitlab
        - devops
      license: MIT License
      owner: modelcontextprotocol
  gitmcp:
    description: Tools for interacting with Git repositories.
    title: GitMCP
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/gitmcp.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/gitmcp.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://gitmcp.io/docs
    icon: https://www.google.com/s2/favicons?domain=gitmcp.io&sz=64
    tools:
      - name: match_common_libs_owner_repo_mapping
      - name: fetch_generic_documentation
      - name: search_generic_documentation
      - name: search_generic_code
      - name: fetch_generic_url_content
    prompts: 0
    resources: {}
    metadata:
      category: development
      tags:
        - git
        - version-control
        - development
        - remote
      license: Apache License 2.0
      owner: docker
  glif:
    description: 'Easily run glif.app AI workflows inside your LLM: image generators, memes, selfies, and more. Glif supports all major multimedia AI models inside one app.'
    title: glif.app
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/glif@sha256:5db922ddab6a29554a3fcc107abfca68b513c3eb34300c8779d156f57f68cb0c
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/glif.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/glif.json
    source: https://github.com/glifxyz/glif-mcp-server/tree/main
    upstream: https://github.com/glifxyz/glif-mcp-server
    icon: https://avatars.githubusercontent.com/u/119348676?s=200&v=4
    tools:
      - name: glif_info
      - name: list_featured_glifs
      - name: list_saved_glif_tools
      - name: my_glif_user_info
      - name: my_glifs
      - name: remove_all_glif_tools
      - name: remove_glif_tool
      - name: run_glif
      - name: save_glif_as_tool
      - name: search_glifs
    secrets:
      - name: glif.api_token
        env: GLIF_API_TOKEN
        example: your-token-here
    env:
      - name: GLIF_IDS
        value: '{{glif.ids}}'
      - name: IGNORE_SAVED_GLIFS
        value: '{{glif.ignored_saved}}'
    prompts: 0
    resources: {}
    config:
      - name: glif
        description: Configure the connection to glif.app
        type: object
        properties:
          ids:
            type: string
          ignored_saved:
            type: boolean
    metadata:
      pulls: 3056
      stars: 2
      githubStars: 26
      category: devops
      tags:
        - glif
        - devops
      license: MIT License
      owner: glifxyz
  gmail-mcp:
    description: A Model Context Protocol server for Gmail operations using IMAP/SMTP with app password authentication. Supports listing messages, searching emails, and sending messages. To create your app password, visit your Google Account settings under Security > App Passwords. Or visit the link https://myaccount.google.com/apppasswords.
    title: Gmail MCP Server
    type: server
    dateAdded: "2025-09-19T06:18:27Z"
    image: yashtekwani/gmail-mcp@sha256:9d806c6ba3752bd83a94782cc65d79929e05b3d4d805a01320d86004e39daf13
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/gmail-mcp.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/gmail-mcp.json
    source: https://github.com/Sallytion/Gmail-MCP/tree/main
    upstream: https://github.com/Sallytion/Gmail-MCP
    icon: https://www.google.com/gmail/about/static/images/logo-gmail.png
    tools:
      - name: listMessages
      - name: findMessage
      - name: sendMessage
    secrets:
      - name: gmail-mcp.email_password
        env: EMAIL_PASSWORD
        example: <your-gmail-app-password>
    env:
      - name: EMAIL_ADDRESS
        value: '{{gmail-mcp.email_address}}'
      - name: IMAP_HOST
        value: imap.gmail.com
      - name: IMAP_PORT
        value: "993"
      - name: SMTP_HOST
        value: smtp.gmail.com
      - name: SMTP_PORT
        value: "587"
    prompts: 0
    resources: {}
    config:
      - name: gmail-mcp
        description: Configure Gmail access with app password authentication
        type: object
        properties:
          email_address:
            type: string
            description: Your Gmail email address
        required:
          - email_address
    metadata:
      githubStars: 1
      category: communication
      tags:
        - email
        - gmail
        - imap
        - smtp
        - communication
      owner: Sallytion
  google-maps:
    description: Tools for interacting with the Google Maps API.
    title: Google Maps (Archived)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/google-maps@sha256:d8652c8c9c52ac9d82e9cadd1dc0468ade7a4f8c53e102e641eb4248894aa914
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/google-maps.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/google-maps.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.6
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: maps_directions
      - name: maps_distance_matrix
      - name: maps_elevation
      - name: maps_geocode
      - name: maps_place_details
      - name: maps_reverse_geocode
      - name: maps_search_places
    secrets:
      - name: google-maps.api_key
        env: GOOGLE_MAPS_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      pulls: 36460
      stars: 15
      githubStars: 69195
      category: devops
      tags:
        - google-maps
        - devops
      license: MIT License
      owner: modelcontextprotocol
  google-maps-comprehensive:
    description: Complete Google Maps integration with 8 tools including geocoding, places search, directions, elevation data, and more using Google's latest APIs.
    title: Google Maps Comprehensive MCP
    type: server
    dateAdded: "2025-09-24T20:01:26Z"
    image: mcp/google-maps-comprehensive@sha256:fc37a12a21f451ae7601cc8a9109af172357196f0bbc50d47947a65690dcb6fb
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/google-maps-comprehensive.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/google-maps-comprehensive.json
    source: https://github.com/vicpeacock/google-maps-comprehensive-mcp/tree/main
    upstream: https://github.com/vicpeacock/google-maps-comprehensive-mcp
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: maps_directions
      - name: maps_distance_matrix
      - name: maps_elevation
      - name: maps_geocode
      - name: maps_ping
      - name: maps_place_details
      - name: maps_reverse_geocode
      - name: maps_search_places
    secrets:
      - name: google-maps-comprehensive.api_key
        env: GOOGLE_MAPS_API_KEY
        example: <YOUR_GOOGLE_MAPS_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      pulls: 241
      githubStars: 1
      category: devops
      tags:
        - google-maps
        - maps
        - geocoding
        - directions
        - places
        - elevation
        - location
        - devops
      owner: vicpeacock
  gyazo:
    description: Official Model Context Protocol server for Gyazo.
    title: Gyazo
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/gyazo@sha256:99dce51f38789e0468051ab2bb6e7cf9325503a62841a88c5980c5154eebe604
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/gyazo.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/gyazo.json
    source: https://github.com/nota/gyazo-mcp-server/tree/main
    upstream: https://github.com/nota/gyazo-mcp-server
    icon: https://avatars.githubusercontent.com/u/113151?v=4
    tools:
      - name: gyazo_image
      - name: gyazo_latest_image
      - name: gyazo_search
      - name: gyazo_upload
    secrets:
      - name: gyazo.access_token
        env: GYAZO_ACCESS_TOKEN
        example: your-access-token-here
    prompts: 0
    resources: {}
    metadata:
      pulls: 2180
      githubStars: 24
      category: devops
      tags:
        - gyazo
        - devops
      license: MIT License
      owner: nota
  hackle:
    description: Model Context Protocol server for Hackle.
    title: Hackle
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/hackle@sha256:03e3a8a3e3b7b9cdc172a34f5aed26e19ab7f7c865d4b991c8dc7f4e309deadb
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/hackle.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/hackle.json
    source: https://github.com/hackle-io/hackle-mcp/tree/main
    upstream: https://github.com/hackle-io/hackle-mcp
    icon: https://avatars.githubusercontent.com/u/65485327?v=4
    tools:
      - name: active-user-series
      - name: analytics-chart-detail
      - name: analytics-chart-list
      - name: data-report-detail
      - name: data-report-list
      - name: experiment-detail
      - name: experiment-list
      - name: in-app-message-detail
      - name: in-app-message-list
      - name: push-message-detail
      - name: push-message-list
      - name: remote-config-create
      - name: remote-config-detail
      - name: remote-config-list
      - name: remote-config-update
      - name: remote-config-update-description
      - name: remote-config-update-user-identifier-criteria
      - name: retention-series
      - name: stickiness-series
    secrets:
      - name: hackle.api_key
        env: API_KEY
        example: YOUR_API_KEY
    prompts: 0
    resources: {}
    metadata:
      pulls: 1751
      githubStars: 2
      category: devops
      tags:
        - hackle
        - devops
      license: MIT License
      owner: hackle-io
  handwriting-ocr:
    description: Model Context Protocol (MCP) Server for Handwriting OCR.
    title: Handwriting OCR
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/handwriting-ocr@sha256:141e2e00e706ab0fcf27973175e3bb68efdc99dd93d170e23eabf9cb96fa52e9
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/handwriting-ocr.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/handwriting-ocr.json
    source: https://github.com/Handwriting-OCR/handwriting-ocr-mcp-server/tree/main
    upstream: https://github.com/Handwriting-OCR/handwriting-ocr-mcp-server
    icon: https://avatars.githubusercontent.com/u/202432073?s=200&v=4
    tools:
      - name: check_status
      - name: get_text
      - name: upload_document
    secrets:
      - name: handwriting-ocr.api_token
        env: API_TOKEN
        example: your-api-token
    prompts: 0
    resources: {}
    metadata:
      pulls: 2352
      stars: 2
      githubStars: 10
      category: devops
      tags:
        - handwriting-ocr
        - devops
      owner: Handwriting-OCR
  hdx:
    description: HDX MCP Server provides access to humanitarian data through the Humanitarian Data Exchange (HDX) API - https://data.humdata.org/hapi. This server offers 33 specialized tools for retrieving humanitarian information including affected populations (refugees, IDPs, returnees), baseline demographics, food security indicators, conflict data, funding information, and operational presence across hundreds of countries and territories. See repository for instructions on getting a free HDX_APP_INDENTIFIER for access.
    title: Humanitarian Data Exchange MCP Server
    type: server
    dateAdded: "2025-09-02T20:44:02Z"
    image: mcp/hdx@sha256:4fc4363ac4076d16cc8774467d64d0e489902c6ae50f1e9332ccf1bf4c21141c
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/hdx.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/hdx.json
    source: https://github.com/dividor/hdx-mcp/tree/main
    upstream: https://github.com/dividor/hdx-mcp
    icon: https://raw.githubusercontent.com/dividor/hdx-mcp/main/assets/hdx_mcp_icon_transparent_512.png
    tools:
      - name: affected_people_humanitarian_needs_get
      - name: affected_people_idps_get
      - name: affected_people_refugees_get
      - name: affected_people_returnees_get
      - name: baseline_population_get
      - name: climate_rainfall_get
      - name: coordination_conflict_events_get
      - name: coordination_funding_get
      - name: coordination_national_risk_get
      - name: coordination_operational_presence_get
      - name: food_prices_get
      - name: food_security_get
      - name: hdx_get_dataset_info
      - name: hdx_search_locations
      - name: hdx_server_info
      - name: metadata_admin1_get
      - name: metadata_admin2_get
      - name: metadata_currency_get
      - name: metadata_data_availability_get
      - name: metadata_dataset_get
      - name: metadata_location_get
      - name: metadata_org_get
      - name: metadata_org_type_get
      - name: metadata_resource_get
      - name: metadata_sector_get
      - name: metadata_wfp_commodity_get
      - name: metadata_wfp_market_get
      - name: poverty_rate_get
      - name: util_version_get
    secrets:
      - name: hdx.HDX_APP_IDENTIFIER
        env: HDX_APP_IDENTIFIER
        example: <HDX_APP_IDENTIFIER>
    prompts: 0
    resources: {}
    metadata:
      pulls: 346
      githubStars: 2
      category: search
      tags:
        - search
      license: MIT License
      owner: dividor
  hostinger-mcp-server:
    description: Interact with Hostinger services over the Hostinger API.
    title: Hostinger API MCP Server
    type: server
    dateAdded: "2025-08-05T16:31:03Z"
    image: mcp/api-mcp-server@sha256:85bb632733ce0cf9651510cc50ee004d07a774d51a3fc7b8d0a83acd16e3714f
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/hostinger-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/hostinger-mcp-server.json
    source: https://github.com/hostinger/api-mcp-server/tree/main
    upstream: https://github.com/hostinger/api-mcp-server
    icon: https://avatars.githubusercontent.com/u/2630767?v=4
    tools:
      - name: DNS_deleteDNSRecordsV1
      - name: DNS_getDNSRecordsV1
      - name: DNS_getDNSSnapshotListV1
      - name: DNS_getDNSSnapshotV1
      - name: DNS_resetDNSRecordsV1
      - name: DNS_restoreDNSSnapshotV1
      - name: DNS_updateDNSRecordsV1
      - name: DNS_validateDNSRecordsV1
      - name: VPS_activateFirewallV1
      - name: VPS_attachPublicKeyV1
      - name: VPS_createFirewallRuleV1
      - name: VPS_createNewFirewallV1
      - name: VPS_createNewProjectV1
      - name: VPS_createPTRRecordV1
      - name: VPS_createPostInstallScriptV1
      - name: VPS_createPublicKeyV1
      - name: VPS_createSnapshotV1
      - name: VPS_deactivateFirewallV1
      - name: VPS_deleteFirewallRuleV1
      - name: VPS_deleteFirewallV1
      - name: VPS_deletePTRRecordV1
      - name: VPS_deletePostInstallScriptV1
      - name: VPS_deleteProjectV1
      - name: VPS_deletePublicKeyV1
      - name: VPS_deleteSnapshotV1
      - name: VPS_getActionDetailsV1
      - name: VPS_getActionsV1
      - name: VPS_getAttachedPublicKeysV1
      - name: VPS_getBackupsV1
      - name: VPS_getDataCenterListV1
      - name: VPS_getFirewallDetailsV1
      - name: VPS_getFirewallListV1
      - name: VPS_getMetricsV1
      - name: VPS_getPostInstallScriptV1
      - name: VPS_getPostInstallScriptsV1
      - name: VPS_getProjectContainersV1
      - name: VPS_getProjectContentsV1
      - name: VPS_getProjectListV1
      - name: VPS_getProjectLogsV1
      - name: VPS_getPublicKeysV1
      - name: VPS_getScanMetricsV1
      - name: VPS_getSnapshotV1
      - name: VPS_getTemplateDetailsV1
      - name: VPS_getTemplatesV1
      - name: VPS_getVirtualMachineDetailsV1
      - name: VPS_getVirtualMachinesV1
      - name: VPS_installMonarxV1
      - name: VPS_purchaseNewVirtualMachineV1
      - name: VPS_recreateVirtualMachineV1
      - name: VPS_resetHostnameV1
      - name: VPS_restartProjectV1
      - name: VPS_restartVirtualMachineV1
      - name: VPS_restoreBackupV1
      - name: VPS_restoreSnapshotV1
      - name: VPS_setHostnameV1
      - name: VPS_setNameserversV1
      - name: VPS_setPanelPasswordV1
      - name: VPS_setRootPasswordV1
      - name: VPS_setupPurchasedVirtualMachineV1
      - name: VPS_startProjectV1
      - name: VPS_startRecoveryModeV1
      - name: VPS_startVirtualMachineV1
      - name: VPS_stopProjectV1
      - name: VPS_stopRecoveryModeV1
      - name: VPS_stopVirtualMachineV1
      - name: VPS_syncFirewallV1
      - name: VPS_uninstallMonarxV1
      - name: VPS_updateFirewallRuleV1
      - name: VPS_updatePostInstallScriptV1
      - name: VPS_updateProjectV1
      - name: billing_cancelSubscriptionV1
      - name: billing_createServiceOrderV1
      - name: billing_deletePaymentMethodV1
      - name: billing_getCatalogItemListV1
      - name: billing_getPaymentMethodListV1
      - name: billing_getSubscriptionListV1
      - name: billing_setDefaultPaymentMethodV1
      - name: domains_checkDomainAvailabilityV1
      - name: domains_createDomainForwardingV1
      - name: domains_createWHOISProfileV1
      - name: domains_deleteDomainForwardingV1
      - name: domains_deleteWHOISProfileV1
      - name: domains_disableDomainLockV1
      - name: domains_disablePrivacyProtectionV1
      - name: domains_enableDomainLockV1
      - name: domains_enablePrivacyProtectionV1
      - name: domains_getDomainDetailsV1
      - name: domains_getDomainForwardingV1
      - name: domains_getDomainListV1
      - name: domains_getWHOISProfileListV1
      - name: domains_getWHOISProfileUsageV1
      - name: domains_getWHOISProfileV1
      - name: domains_purchaseNewDomainV1
      - name: domains_updateDomainNameserversV1
      - name: reach_createANewContactV1
      - name: reach_deleteAContactV1
      - name: reach_listContactGroupsV1
      - name: reach_listContactsV1
    secrets:
      - name: hostinger-mcp-server.api_token
        env: APITOKEN
        example: 0ASvFDoYoloTOoLd6fSRKUx9ihuoejCVbTT6xpmob7adce6d
    prompts: 0
    resources: {}
    metadata:
      pulls: 1319
      githubStars: 36
      category: devops
      tags:
        - devops
      license: MIT License
      owner: hostinger
  hoverfly-mcp-server:
    description: A Model Context Protocol (MCP) server that exposes Hoverfly as a programmable tool for AI assistants like Cursor, Claude, GitHub Copilot, and others supporting MCP. It enables dynamic mocking of third-party APIs to unblock development, automate testing, and simulate unavailable services during integration.
    title: Hoverfly MCP Server
    type: server
    dateAdded: "2025-08-01T06:21:29Z"
    image: kapish88/hoverfly-mcp-server@sha256:80c9fb90eb15703f98729ecb969263aa20c5b5a76fc99f68b616051504149aa1
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/hoverfly-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/hoverfly-mcp-server.json
    source: https://github.com/kapishmalik/hoverfly-mcp-server/tree/main
    upstream: https://github.com/kapishmalik/hoverfly-mcp-server
    icon: https://raw.githubusercontent.com/kapishmalik/hoverfly-mcp-server/main/HoverflyMCPServerDocker.png
    tools:
      - name: add_hoverfly_mock
      - name: clear_hoverfly_mocks
      - name: download_hoverfly_simulation
      - name: fetch_hoverfly_version
      - name: get_hoverfly_debug_logs
      - name: get_hoverfly_documentation
      - name: get_hoverfly_status
      - name: list_hoverfly_mocks
      - name: show_hoverfly_endpoints_info
      - name: start_hoverfly_web_server
      - name: stop_hoverfly_server
      - name: suggest_hoverfly_matchers
    volumes:
      - '{{hoverfly-mcp-server.data}}:/opt/hoverfly-mcp/simulation-data'
    prompts: 0
    resources: {}
    config:
      - name: hoverfly-mcp-server
        description: The MCP server is allowed to access this path for storing simulation files
        type: object
        properties:
          data:
            type: string
        required:
          - data
    metadata:
      githubStars: 6
      category: productivity
      tags:
        - ai
        - service-virtualization
        - http-mocking
        - devtools
      license: Other
      owner: kapishmalik
  hubspot:
    description: Unite marketing, sales, and customer service with AI-powered automation, lead management, and comprehensive analytics.
    title: HubSpot
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/hubspot.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/hubspot.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://app.hubspot.com/mcp/v1/http
      headers:
        Authorization: "Bearer ${HUBSPOT_API_KEY}"
    icon: https://www.google.com/s2/favicons?domain=hubspot.com&sz=64
    tools: []
    secrets:
      - name: hubspot.api_key
        env: HUBSPOT_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: crm
      tags:
        - crm
        - marketing
        - sales
        - remote
      license: Apache License 2.0
      owner: docker
  hugging-face:
    description: Tools for interacting with Hugging Face models, datasets, research papers, and more.
    title: Hugging Face
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/hugging-face.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/hugging-face.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://huggingface.co/mcp
    icon: https://www.google.com/s2/favicons?domain=hf.co&sz=64
    tools:
      - name: hf_whoami
      - name: space_search
      - name: model_search
      - name: paper_search
      - name: dataset_search
      - name: hub_repo_details
      - name: hf_doc_search
      - name: hf_doc_fetch
      - name: gr1_flux1_schnell_infer
    prompts: 0
    resources: {}
    metadata:
      category: ai
      tags:
        - ai
        - machine-learning
        - models
        - remote
      license: Apache License 2.0
      owner: docker
  hummingbot-mcp:
    description: Hummingbot MCP is an open-source toolset that lets you control and monitor your Hummingbot trading bots through AI-powered commands and automation.
    title: 'Hummingbot MCP: Trading Agent'
    type: server
    dateAdded: "2025-08-29T06:26:59Z"
    image: hummingbot/hummingbot-mcp@sha256:b449d02e14b530ad3c004f453e3d4b39b9b700c9f1021e480777ecfee02b8a24
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/hummingbot-mcp.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/hummingbot-mcp.json
    source: https://github.com/hummingbot/mcp/tree/main
    upstream: https://github.com/hummingbot/mcp
    icon: https://avatars.githubusercontent.com/u/88165212?v=4
    tools:
      - name: deploy_bot_with_controllers
      - name: explore_controllers
      - name: get_active_bots_status
      - name: get_candles
      - name: get_funding_rate
      - name: get_order_book
      - name: get_orders
      - name: get_portfolio_balances
      - name: get_positions
      - name: get_prices
      - name: modify_controllers
      - name: place_order
      - name: set_account_position_mode_and_leverage
      - name: setup_connector
      - name: stop_bot_or_controllers
    secrets:
      - name: hummingbot-mcp.username
        env: HUMMINGBOT_API_USERNAME
        example: admin
      - name: hummingbot-mcp.password
        env: HUMMINGBOT_API_PASSWORD
        example: password
    env:
      - name: HUMMINGBOT_API_URL
        value: '{{hummingbot-mcp.api_url}}'
    prompts: 0
    resources: {}
    config:
      - name: hummingbot-mcp
        description: Configure the MCP connection to the Hummingbot API
        type: object
        properties:
          api_url:
            type: string
        required:
          - api_url
    metadata:
      githubStars: 24
      category: finance
      tags:
        - finance
      license: Apache License 2.0
      owner: hummingbot
  husqvarna-automower:
    description: MCP Server for huqsvarna automower.
    title: Husqvarna Automower
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/husqvarna-automower@sha256:05efbdf5e90f0b65f841dd8b3c735b48ccf21a60c410fc49b3e7551a2d7c583b
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/husqvarna-automower.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/husqvarna-automower.json
    source: https://github.com/jeanlaurent/mcp-husqvarna-automower/tree/main
    upstream: https://github.com/jeanlaurent/mcp-husqvarna-automower
    icon: https://avatars.githubusercontent.com/u/17142631?v=4
    tools:
      - name: Husqvarna Automowers Status
    secrets:
      - name: husqvarna.client.secret
        env: HUSQVARNA_CLIENT_SECRET
        example: YOUR_CLIENT_SECRET_HERE
    env:
      - name: HUSQVARNA_CLIENT_ID
        value: '{{husqvarna-automower.client_id}}'
    prompts: 0
    resources: {}
    config:
      - name: husqvarna-automower
        description: Configure the connection to Husqvarna Automower
        type: object
        properties:
          client_id:
            type: string
    metadata:
      pulls: 1451
      githubStars: 1
      category: devops
      tags:
        - husqvarna-automower
        - devops
      owner: jeanlaurent
  hyperbrowser:
    description: A MCP server implementation for hyperbrowser.
    title: Hyperbrowser
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/hyperbrowser@sha256:11ed80138c334c419249c79e5f5acda3f4e7052c04f62f54548f00a3b9815140
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/hyperbrowser.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/hyperbrowser.json
    source: https://github.com/hyperbrowserai/mcp/tree/main
    upstream: https://github.com/hyperbrowserai/mcp
    icon: https://avatars.githubusercontent.com/u/189776885?s=200&v=4
    tools:
      - name: browser_use_agent
      - name: claude_computer_use_agent
      - name: crawl_webpages
      - name: create_profile
      - name: delete_profile
      - name: extract_structured_data
      - name: list_profiles
      - name: openai_computer_use_agent
      - name: scrape_webpage
      - name: search_with_bing
    secrets:
      - name: hyperbrowser.api_key
        env: HYPERBROWSER_API_KEY
        example: <app or user token>
    prompts: 0
    resources: {}
    metadata:
      pulls: 3047
      stars: 3
      githubStars: 618
      category: devops
      tags:
        - hyperbrowser
        - devops
      license: MIT License
      owner: hyperbrowserai
  hyperspell:
    description: Hyperspell MCP Server.
    title: Hyperspell
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/hyperspell@sha256:659fcccbb147478329b45737757c1a889d06c051a93f008534bb1c185a6638ce
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/hyperspell.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/hyperspell.json
    source: https://github.com/hyperspell/hyperspell-mcp/tree/main
    upstream: https://github.com/hyperspell/hyperspell-mcp
    icon: https://avatars.githubusercontent.com/u/170754924?s=200&v=4
    tools:
      - name: Add File
      - name: Add Memory
      - name: Search Hyperspell
    secrets:
      - name: hyperspell.token
        env: HYPERSPELL_TOKEN
        example: <app or user token>
    env:
      - name: USE_RESOURCES
        value: '{{hyperspell.use_resources}}'
      - name: HYPERSPELL_COLLECTION
        value: '{{hyperspell.collection}}'
    prompts: 0
    resources: {}
    config:
      - name: hyperspell
        description: Configure the connection to Hyperspell
        type: object
        properties:
          collection:
            type: string
          use_resources:
            type: boolean
    metadata:
      pulls: 2071
      githubStars: 1
      category: devops
      tags:
        - hyperspell
        - devops
      owner: hyperspell
  iaptic:
    description: Model Context Protocol server for interacting with iaptic.
    title: Iaptic
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/iaptic@sha256:ed978fc5847131aca695a3dc65f25ed397acdeffc19aa5e3bc53163d2c75f2fd
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/iaptic.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/iaptic.json
    source: https://github.com/iaptic/mcp-server-iaptic/tree/main
    upstream: https://github.com/iaptic/mcp-server-iaptic
    icon: https://avatars.githubusercontent.com/u/72789805?s=200&v=4
    tools:
      - name: customer_add_purchase
      - name: customer_get
      - name: customer_list
      - name: customer_subscription
      - name: customer_transactions
      - name: event_list
      - name: iaptic_current_app
      - name: iaptic_reset_app
      - name: iaptic_switch_app
      - name: purchase_get
      - name: purchase_list
      - name: stats_app
      - name: stats_get
      - name: stripe_prices
      - name: transaction_get
      - name: transaction_list
    secrets:
      - name: iaptic.api_key
        env: IAPTIC_API_KEY
        example: your-api-key-here
    env:
      - name: IAPTIC_APP_NAME
        value: '{{iaptic.app_name}}'
    prompts: 0
    resources: {}
    config:
      - name: iaptic
        description: Configure the connection to iaptic
        type: object
        properties:
          app_name:
            type: string
        required:
          - app_name
    metadata:
      pulls: 1880
      githubStars: 4
      category: devops
      tags:
        - iaptic
        - devops
      license: MIT License
      owner: iaptic
  inspektor-gadget:
    description: AI interface to troubleshoot and observe Kubernetes/Container workloads.
    title: Inspektor Gadget
    type: server
    longLived: true
    dateAdded: "2025-07-29T14:05:27Z"
    image: mcp/inspektor-gadget@sha256:0d103deedf6253fed51b49aa99aea0b5869430d892529ad8522882aee3ac9f78
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/inspektor-gadget.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/inspektor-gadget.json
    source: https://github.com/inspektor-gadget/ig-mcp-server/tree/main
    upstream: https://github.com/inspektor-gadget/ig-mcp-server
    icon: https://avatars.githubusercontent.com/u/111520143?s=200&v=4
    tools:
      - name: gadget_advise_networkpolicy
      - name: gadget_advise_seccomp
      - name: gadget_audit_seccomp
      - name: gadget_bpfstats
      - name: gadget_deadlock
      - name: gadget_fdpass
      - name: gadget_fsnotify
      - name: gadget_profile_blockio
      - name: gadget_profile_cpu
      - name: gadget_profile_qdisc_latency
      - name: gadget_profile_tcprtt
      - name: gadget_snapshot_process
      - name: gadget_snapshot_socket
      - name: gadget_top_blockio
      - name: gadget_top_file
      - name: gadget_top_process
      - name: gadget_top_tcp
      - name: gadget_trace_bind
      - name: gadget_trace_capabilities
      - name: gadget_trace_dns
      - name: gadget_trace_exec
      - name: gadget_trace_fsslower
      - name: gadget_trace_lsm
      - name: gadget_trace_malloc
      - name: gadget_trace_mount
      - name: gadget_trace_oomkill
      - name: gadget_trace_open
      - name: gadget_trace_signal
      - name: gadget_trace_sni
      - name: gadget_trace_ssl
      - name: gadget_trace_tcp
      - name: gadget_trace_tcpdrop
      - name: gadget_trace_tcpretrans
      - name: gadget_traceloop
      - name: ig_deploy
      - name: ig_gadgets
    command:
      - -gadget-discoverer=artifacthub
      - -gadget-images={{inspektor-gadget.gadget-images}}
    volumes:
      - '{{inspektor-gadget.kubeconfig}}:/kubeconfig'
    prompts: 0
    resources: {}
    config:
      - name: inspektor-gadget
        description: Configuration for the Inspektor Gadget MCP Server
        type: object
        properties:
          kubeconfig:
            type: string
            description: Path to the kubeconfig file for accessing Kubernetes clusters
          gadget-images:
            type: string
            description: Comma-separated list of gadget images (trace_dns, trace_tcp, etc) to use, allowing control over which gadgets are available as MCP tools
        required:
          - kubeconfig
    metadata:
      pulls: 905
      stars: 2
      githubStars: 14
      category: monitoring
      tags:
        - inspektor-gadget
        - kubernetes
        - monitoring
        - ebpf
      license: Apache License 2.0
      owner: inspektor-gadget
  javadocs:
    description: Access to Java, Kotlin, and Scala library documentation.
    title: Javadocs
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/javadocs.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/javadocs.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://www.javadocs.dev/mcp
    icon: https://www.google.com/s2/favicons?domain=javadocs.dev&sz=64
    tools:
      - name: get_latest_version
      - name: get_javadoc_content_list
      - name: get_javadoc_symbol_contents
    prompts: 0
    resources: {}
    metadata:
      category: documentation
      tags:
        - documentation
        - java
        - api
        - remote
      license: Apache License 2.0
      owner: docker
  jetbrains:
    description: 'A model context protocol server to work with JetBrains IDEs: IntelliJ, PyCharm, WebStorm, etc. Also, works with Android Studio.'
    title: JetBrains
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/jetbrains@sha256:a662cac15c5d318e3519af2700c8b3455dfd7225b47c4d331c0c306255f6fd5b
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/jetbrains.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/jetbrains.json
    source: https://github.com/GannaChernyshova/mcp-jetbrains/tree/main
    upstream: https://github.com/GannaChernyshova/mcp-jetbrains
    icon: https://avatars.githubusercontent.com/u/878437?s=200&v=4
    tools:
      - name: create_new_file_with_text
      - name: execute_action_by_id
      - name: execute_terminal_command
      - name: find_commit_by_message
      - name: find_files_by_name_substring
      - name: get_all_open_file_paths
      - name: get_all_open_file_texts
      - name: get_debugger_breakpoints
      - name: get_file_text_by_path
      - name: get_open_in_editor_file_path
      - name: get_open_in_editor_file_text
      - name: get_progress_indicators
      - name: get_project_dependencies
      - name: get_project_modules
      - name: get_project_vcs_status
      - name: get_run_configurations
      - name: get_selected_in_editor_text
      - name: get_terminal_text
      - name: list_available_actions
      - name: list_directory_tree_in_folder
      - name: list_files_in_folder
      - name: open_file_in_editor
      - name: replace_current_file_text
      - name: replace_file_text_by_path
      - name: replace_selected_text
      - name: replace_specific_text
      - name: run_configuration
      - name: search_in_files_content
      - name: toggle_debugger_breakpoint
      - name: wait
    env:
      - name: IDE_PORT
        value: '{{jetbrains.port}}'
    prompts: 0
    resources: {}
    config:
      - name: jetbrains
        description: Configure the connection to the IDE
        type: object
        properties:
          port:
            type: integer
    metadata:
      pulls: 6632
      stars: 2
      githubStars: 4
      category: devops
      tags:
        - jetbrains
        - devops
      license: Apache License 2.0
      owner: GannaChernyshova
  kafka-schema-reg-mcp:
    description: Comprehensive MCP server for Kafka Schema Registry operations. Features multi-registry support, schema contexts, migration tools, OAuth authentication, and 57+ tools for complete schema management. Supports SLIM_MODE for optimal performance.
    title: Kafka Schema Registry MCP
    type: server
    dateAdded: "2025-09-08T15:06:40Z"
    image: aywengo/kafka-schema-reg-mcp:stable@sha256:3e3111956446aed76abe01e13250f2dd7f947c10acd00ad8a45397fe6a37fc3d
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/kafka-schema-reg-mcp.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/kafka-schema-reg-mcp.json
    source: https://github.com/aywengo/kafka-schema-reg-mcp/tree/main
    upstream: https://github.com/aywengo/kafka-schema-reg-mcp
    icon: https://avatars.githubusercontent.com/u/47359?s=200&v=4
    tools:
      - name: check_compatibility
      - name: count_contexts
      - name: count_schema_versions
      - name: count_schemas
      - name: create_context
      - name: export_schema
      - name: export_subject
      - name: generate_resource_templates
      - name: get_default_registry
      - name: get_global_config
      - name: get_mcp_compliance_status_tool
      - name: get_mode
      - name: get_registry_info
      - name: get_schema
      - name: get_schema_by_id
      - name: get_schema_versions
      - name: get_subject_config
      - name: get_subject_mode
      - name: get_subjects_by_schema_id
      - name: list_available_resources
      - name: list_contexts
      - name: list_registries
      - name: list_subjects
      - name: ping
      - name: register_schema
      - name: set_default_registry
      - name: suggest_resource_for_tool
      - name: test_all_registries
      - name: test_registry_connection
    secrets:
      - name: kafka-schema-reg-mcp.registry_user
        env: SCHEMA_REGISTRY_USER
        example: <REGISTRY_USERNAME>
      - name: kafka-schema-reg-mcp.registry_password
        env: SCHEMA_REGISTRY_PASSWORD
        example: <REGISTRY_PASSWORD>
    env:
      - name: SCHEMA_REGISTRY_URL
        value: '{{kafka-schema-reg-mcp.registry_url}}'
      - name: SLIM_MODE
        value: '{{kafka-schema-reg-mcp.slim_mode}}'
      - name: VIEWONLY
        value: '{{kafka-schema-reg-mcp.viewonly}}'
    allowHosts:
      - '*:8081'
      - '*:443'
    prompts: 0
    resources: {}
    config:
      - name: kafka-schema-reg-mcp
        description: Configure connection to Kafka Schema Registry
        type: object
        properties:
          registry_url:
            type: string
            description: Schema Registry URL
          slim_mode:
            type: string
            description: Enable SLIM_MODE for better performance
          viewonly:
            type: string
            description: Enable read-only mode
        required:
          - registry_url
    metadata:
      githubStars: 23
      category: database
      tags:
        - kafka
        - schema-registry
        - database
        - devops
        - streaming
      license: MIT License
      owner: aywengo
  kagisearch:
    description: The Official Model Context Protocol (MCP) server for Kagi search & other tools.
    title: Kagi search
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/kagisearch@sha256:a04696f75f842225462060a8b5f4207e6ca086e59dc38c3fb52ae02d36d41403
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/kagisearch.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/kagisearch.json
    source: https://github.com/kagisearch/kagimcp/tree/main
    upstream: https://github.com/kagisearch/kagimcp
    icon: https://avatars.githubusercontent.com/u/92134518?s=200&v=4
    tools:
      - name: kagi_search_fetch
      - name: kagi_summarizer
    secrets:
      - name: kagisearch.api_key
        env: KAGI_API_KEY
        example: YOUR_API_KEY_HERE
    env:
      - name: KAGI_SUMMARIZER_ENGINE
        value: '{{kagisearch.engine}}'
    prompts: 0
    resources: {}
    config:
      - name: kagisearch
        description: Configure the connection to Kagi search
        type: object
        properties:
          engine:
            type: string
    metadata:
      pulls: 2298
      stars: 1
      githubStars: 193
      category: devops
      tags:
        - kagisearch
        - devops
      license: MIT License
      owner: kagisearch
  keboola-mcp:
    description: Keboola MCP Server is an open-source bridge between your Keboola project and modern AI tools.
    title: Keboola MCP Server
    type: server
    dateAdded: "2025-06-16T10:10:08Z"
    image: mcp/keboola-mcp@sha256:bd33ab86acd728d282ed50fe5e4dab28d7fcd7fb00f32ff8ba0e24ff29c83fd4
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/keboola-mcp.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/keboola-mcp.json
    source: https://github.com/keboola/mcp-server/tree/main
    upstream: https://github.com/keboola/mcp-server
    icon: https://avatars.githubusercontent.com/u/1424387?v=4
    tools:
      - name: add_config_row
      - name: create_config
      - name: create_flow
      - name: create_oauth_url
      - name: create_sql_transformation
      - name: docs_query
      - name: find_component_id
      - name: get_bucket
      - name: get_component
      - name: get_config
      - name: get_config_examples
      - name: get_flow
      - name: get_flow_schema
      - name: get_job
      - name: get_project_info
      - name: get_sql_dialect
      - name: get_table
      - name: list_buckets
      - name: list_configs
      - name: list_flows
      - name: list_jobs
      - name: list_tables
      - name: list_transformations
      - name: query_data
      - name: run_job
      - name: search
      - name: update_bucket_description
      - name: update_column_description
      - name: update_config
      - name: update_config_row
      - name: update_flow
      - name: update_sql_transformation
      - name: update_table_description
    secrets:
      - name: keboola-mcp.kbc_storage_token
        env: KBC_STORAGE_TOKEN
        example: your_keboola_storage_token
    env:
      - name: KBC_WORKSPACE_SCHEMA
        value: '{{keboola-mcp.kbc_workspace_schema}}'
    prompts: 0
    resources: {}
    config:
      - name: keboola-mcp
        description: Configure the connection to your Keboola project
        type: object
        properties:
          kbc_workspace_schema:
            type: string
    metadata:
      pulls: 1574
      githubStars: 68
      category: devops
      tags:
        - data-platform
        - etl-pipeline
        - storage
      license: MIT License
      owner: keboola
  kong:
    description: A Model Context Protocol (MCP) server for interacting with Kong Konnect APIs, allowing AI assistants to query and analyze Kong Gateway configurations, traffic, and analytics.
    title: Kong Konnect
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/kong@sha256:7988d6e1b0bf6af8a1062358693f6e5cd4ed5019bc4eca553753c6ab40f285c7
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/kong.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/kong.json
    source: https://github.com/Kong/mcp-konnect/tree/refs/pull/7/merge
    upstream: https://github.com/Kong/mcp-konnect
    icon: https://avatars.githubusercontent.com/u/962416?s=200&v=4
    tools:
      - name: check_control_plane_group_membership
      - name: get_consumer_requests
      - name: get_control_plane
      - name: list_consumers
      - name: list_control_plane_group_memberships
      - name: list_control_planes
      - name: list_plugins
      - name: list_routes
      - name: list_services
      - name: query_api_requests
    secrets:
      - name: kong.access_token
        env: KONNECT_ACCESS_TOKEN
        example: kpat_api_key_here
    env:
      - name: KONNECT_REGION
        value: '{{kong.region}}'
    prompts: 0
    resources: {}
    config:
      - name: kong
        description: Configure the connection to Kong Konnect
        type: object
        properties:
          region:
            type: string
    metadata:
      pulls: 2175
      githubStars: 35
      category: devops
      tags:
        - kong
        - devops
        - service-mesh
      license: Apache License 2.0
      owner: Kong
  kubectl-mcp-server:
    description: MCP Server that enables AI assistants to interact with Kubernetes clusters via kubectl operations.
    title: Kubectl MCP Server
    type: server
    dateAdded: "2025-09-16T14:38:22Z"
    image: mcp/kubectl-mcp-server@sha256:29bf6aef7a69f8ce7927106f1bd7eb3977c11422bacb20c5d1389d3d50f1c8d6
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/kubectl-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/kubectl-mcp-server.json
    source: https://github.com/rohitg00/kubectl-mcp-server/tree/main
    upstream: https://github.com/rohitg00/kubectl-mcp-server
    icon: https://avatars.githubusercontent.com/u/13629408?s=200&v=4
    tools:
      - name: check_pod_health
      - name: create_deployment
      - name: delete_resource
      - name: get_api_resources
      - name: get_cluster_roles
      - name: get_configmaps
      - name: get_current_context
      - name: get_deployments
      - name: get_events
      - name: get_logs
      - name: get_namespaces
      - name: get_nodes
      - name: get_pod_events
      - name: get_pods
      - name: get_rbac_roles
      - name: get_resource_usage
      - name: get_secrets
      - name: get_services
      - name: health_check
      - name: install_helm_chart
      - name: kubectl_explain
      - name: port_forward
      - name: scale_deployment
      - name: switch_context
      - name: uninstall_helm_chart
      - name: upgrade_helm_chart
    volumes:
      - '{{kubectl-mcp-server.kubeconfig}}:/root/.kube'
    prompts: 0
    resources: {}
    config:
      - name: kubectl-mcp-server
        description: The MCP server is allowed to access this path
        type: object
        properties:
          kubeconfig:
            type: string
        required:
          - kubeconfig
    metadata:
      pulls: 509
      githubStars: 722
      category: devops
      tags:
        - kubectl-mcp-server
        - kubernetes
        - kubectl
        - devops
      license: MIT License
      owner: rohitg00
  kubernetes:
    description: Connect to a Kubernetes cluster and manage it.
    title: Kubernetes
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/kubernetes@sha256:a05a51035eb3ad3311df3290f048aaffec09a5cc84d71342f8369752b4d0de3c
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/kubernetes.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/kubernetes.json
    source: https://github.com/Flux159/mcp-server-kubernetes/tree/main
    upstream: https://github.com/Flux159/mcp-server-kubernetes
    icon: https://avatars.githubusercontent.com/u/13629408?s=200&v=4
    tools:
      - name: cleanup
      - name: exec_in_pod
      - name: explain_resource
      - name: install_helm_chart
      - name: kubectl_apply
      - name: kubectl_context
      - name: kubectl_create
      - name: kubectl_delete
      - name: kubectl_describe
      - name: kubectl_generic
      - name: kubectl_get
      - name: kubectl_logs
      - name: kubectl_patch
      - name: kubectl_rollout
      - name: kubectl_scale
      - name: list_api_resources
      - name: node_management
      - name: ping
      - name: port_forward
      - name: stop_port_forward
      - name: uninstall_helm_chart
      - name: upgrade_helm_chart
    volumes:
      - '{{kubernetes.config_path}}:/home/appuser/.kube/config'
    prompts: 0
    resources: {}
    config:
      - name: kubernetes
        description: Configure the location of the host Kubernetes file
        type: object
        properties:
          config_path:
            type: string
            description: the path to the host .kube/config
        required:
          - config_path
    metadata:
      pulls: 23375
      stars: 14
      githubStars: 1098
      category: devops
      tags:
        - kubernetes
        - devops
      license: MIT License
      owner: Flux159
  lara:
    description: Connect to Lara Translate API, enabling powerful translation capabilities with support for language detection and context-aware translations.
    title: Lara Translate
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/lara@sha256:2e2b67bde40751712c6c73f08afc200ce29d316d5ddd5be3f284f0414212b1b2
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/lara.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/lara.json
    source: https://github.com/translated/lara-mcp/tree/main
    upstream: https://github.com/translated/lara-mcp
    icon: https://avatars.githubusercontent.com/u/10272138?s=200&v=4
    tools:
      - name: add_translation
      - name: check_import_status
      - name: create_memory
      - name: delete_memory
      - name: delete_translation
      - name: import_tmx
      - name: list_languages
      - name: list_memories
      - name: translate
      - name: update_memory
    secrets:
      - name: lara.key_secret
        env: LARA_ACCESS_KEY_SECRET
        example: YOUR_LARA_ACCESS_KEY_SECRET
    env:
      - name: LARA_ACCESS_KEY_ID
        value: '{{lara.key_id}}'
    prompts: 0
    resources: {}
    config:
      - name: lara
        description: Configure the connection to Lara Translate
        type: object
        properties:
          key_id:
            type: string
        required:
          - key_id
    metadata:
      pulls: 2364
      stars: 3
      githubStars: 72
      category: devops
      tags:
        - lara
        - devops
      license: MIT License
      owner: translated
  line:
    description: MCP server that integrates the LINE Messaging API to connect an AI Agent to the LINE Official Account.
    title: LINE
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/line@sha256:f4951d3249c3132fe8183f455a7b51cc98cabcb94f6a08858b8e9d595324f393
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/line.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/line.json
    source: https://github.com/line/line-bot-mcp-server/tree/main
    upstream: https://github.com/line/line-bot-mcp-server
    icon: https://avatars.githubusercontent.com/u/13128444?v=4
    tools:
      - name: broadcast_flex_message
      - name: broadcast_text_message
      - name: cancel_rich_menu_default
      - name: delete_rich_menu
      - name: get_message_quota
      - name: get_profile
      - name: get_rich_menu_list
      - name: push_flex_message
      - name: push_text_message
      - name: set_rich_menu_default
    secrets:
      - name: line.access_token
        env: CHANNEL_ACCESS_TOKEN
        example: FILL_HERE
    env:
      - name: DESTINATION_USER_ID
        value: '{{line.user_id}}'
    prompts: 0
    resources: {}
    config:
      - name: line
        description: Configure the connection to LINE
        type: object
        properties:
          user_id:
            type: string
        required:
          - user_id
    metadata:
      pulls: 5305
      githubStars: 466
      category: devops
      tags:
        - line
        - devops
      license: Apache License 2.0
      owner: line
  linkedin-mcp-server:
    description: This MCP server allows Claude and other AI assistants to access your LinkedIn. Scrape LinkedIn profiles and companies, get your recommended jobs, and perform job searches. Set your li_at LinkedIn cookie to use this server.
    title: LinkedIn MCP Server
    type: server
    dateAdded: "2025-07-11T18:29:38Z"
    image: stickerdaniel/linkedin-mcp-server:1.4.0@sha256:c437eb638f80089cd05d7fa111fae17c1dedf1b74ac4ebf0b01e0c6afe143bd9
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/linkedin-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/linkedin-mcp-server.json
    source: https://github.com/stickerdaniel/linkedin-mcp-server/tree/main
    upstream: https://github.com/stickerdaniel/linkedin-mcp-server
    icon: https://raw.githubusercontent.com/stickerdaniel/linkedin-mcp-server/main/assets/icons/linkedin.svg
    tools:
      - name: close_session
      - name: get_company_profile
      - name: get_job_details
      - name: get_person_profile
      - name: get_recommended_jobs
      - name: search_jobs
    secrets:
      - name: linkedin-mcp-server.cookie
        env: LINKEDIN_COOKIE
        example: AQETADxR7bsCqpZlAAACm-lNHKAAA...
    env:
      - name: USER_AGENT
        value: '{{linkedin-mcp-server.user_agent}}'
    prompts: 0
    resources: {}
    config:
      - name: linkedin-mcp-server
        description: Configure LinkedIn authentication and optional user agent
        type: object
        properties:
          user_agent:
            type: string
            description: Custom user agent string (optional, helps avoid detection and cookie login issues)
    metadata:
      githubStars: 426
      category: business
      tags:
        - linkedin
        - business
        - scraping
        - profiles
        - jobs
        - networking
      license: Apache License 2.0
      owner: stickerdaniel
  llmtxt:
    description: Discovers and retrieves llms.txt from websites.
    title: LLM Text
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/llmtxt.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/llmtxt.json
    source: ""
    remote:
      transport_type: sse
      url: https://mcp.llmtxt.dev/sse
    icon: https://www.google.com/s2/favicons?domain=llmtxt.dev&sz=64
    tools:
      - name: llms.txt-file
      - name: git
    prompts: 0
    resources: {}
    metadata:
      category: ai
      tags:
        - ai
        - llm
        - text-processing
        - remote
      license: Apache License 2.0
      owner: docker
  maestro-mcp-server:
    description: A Model Context Protocol (MCP) server exposing Bitcoin blockchain data through the Maestro API platform. Provides tools to explore blocks, transactions, addresses, inscriptions, runes, and other metaprotocol data.
    title: Maestro MCP Server
    type: server
    dateAdded: "2025-09-19T18:59:08Z"
    image: mcp/maestro-mcp-server@sha256:f59151e2a665580f0fd7064112d5bac378f46179462bfe02307e016f98e2cd96
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/maestro-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/maestro-mcp-server.json
    source: https://github.com/maestro-org/maestro-mcp-server/tree/main
    upstream: https://github.com/maestro-org/maestro-mcp-server
    icon: https://avatars.githubusercontent.com/u/84299480?s=200&v=4
    tools:
      - name: get_address_activity
      - name: get_address_balance
      - name: get_address_balance_historical
      - name: get_address_brc20
      - name: get_address_brc20_transfer_inscriptions
      - name: get_address_inscriptions
      - name: get_address_inscription_activity
      - name: get_address_runes
      - name: get_address_rune_activity
      - name: get_address_rune_utxos
      - name: get_address_statistics
      - name: get_address_txs
      - name: get_address_utxos
      - name: get_mempool_address_balance
      - name: get_mempool_address_runes
      - name: list_brc20_assets
      - name: get_brc20_info
      - name: list_supported_dexs
      - name: get_dex_ohlc
      - name: get_btc_price_by_timestamp
      - name: get_rune_price_by_timestamp
      - name: rpc_chain_info
      - name: rpc_mempool_info
      - name: rpc_mempool_transactions
      - name: rpc_block_miner_info
      - name: rpc_block_volume
      - name: event_healthcheck
      - name: event_list_logs
      - name: event_get_log
      - name: event_list_triggers
      - name: event_create_trigger
      - name: event_get_trigger
      - name: event_update_trigger
      - name: event_delete_trigger
      - name: event_list_trigger_condition_options
    secrets:
      - name: maestro-mcp-server.API_KEY_API_KEY
        env: API_KEY_API_KEY
        example: your-maestro-api-key
    prompts: 0
    resources: {}
    metadata:
      pulls: 97
      githubStars: 18
      category: monitoring
      tags:
        - monitoring
        - blockchain
        - bitcoin
        - rpc
      license: Apache License 2.0
      owner: maestro-org
  manifold:
    description: Tools for accessing the Manifold Markets online prediction market platform.
    title: Manifold
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/manifold.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/manifold.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://api.manifold.markets/v0/mcp
    icon: https://www.google.com/s2/favicons?domain=manifold.markets&sz=64
    tools:
      - name: search-markets
      - name: get-market
      - name: get-user
      - name: get-bets
      - name: search-users
    prompts: 0
    resources: {}
    metadata:
      category: analytics
      tags:
        - analytics
        - forecasting
        - prediction-markets
        - remote
      license: Apache License 2.0
      owner: docker
  mapbox:
    description: Transform any AI agent into a geospatially-aware system with Mapbox APIs. Provides geocoding, POI search, routing, travel time matrices, isochrones, and static map generation.
    title: Mapbox MCP Server
    type: server
    dateAdded: "2025-09-02T20:44:02Z"
    image: mcp/mapbox@sha256:21d75e122c1a7fe7d8e91bbc24e51c05997f1a70eeb273a746d851a8ec44b378
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/mapbox.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/mapbox.json
    source: https://github.com/mapbox/mcp-server/tree/main
    upstream: https://github.com/mapbox/mcp-server
    icon: https://avatars.githubusercontent.com/u/600935?s=200&v=4
    tools:
      - name: category_list_tool
      - name: category_search_tool
      - name: directions_tool
      - name: isochrone_tool
      - name: matrix_tool
      - name: reverse_geocode_tool
      - name: search_and_geocode_tool
      - name: static_map_image_tool
      - name: version_tool
    secrets:
      - name: mapbox.access_token
        env: MAPBOX_ACCESS_TOKEN
        example: YOUR_API_KEY_HERE
    prompts: 0
    resources: {}
    metadata:
      pulls: 740
      githubStars: 267
      category: maps
      tags:
        - mapbox
        - maps
        - geospatial
        - navigation
        - geocoding
      license: MIT License
      owner: mapbox
  mapbox-devkit:
    description: Direct access to Mapbox developer APIs for AI assistants. Enables style management, token management, GeoJSON preview, and other developer tools for building Mapbox applications.
    title: Mapbox Developer MCP Server
    type: server
    dateAdded: "2025-09-02T20:44:02Z"
    image: mcp/mapbox-devkit@sha256:037c80ef2f476318be0c6ac4619e198228f991aad3bf5731cebadb26881445d2
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/mapbox-devkit.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/mapbox-devkit.json
    source: https://github.com/mapbox/mcp-devkit-server/tree/main
    upstream: https://github.com/mapbox/mcp-devkit-server
    icon: https://avatars.githubusercontent.com/u/600935?s=200&v=4
    tools:
      - name: bounding_box_tool
      - name: coordinate_conversion_tool
      - name: country_bounding_box_tool
      - name: create_style_tool
      - name: create_token_tool
      - name: delete_style_tool
      - name: geojson_preview_tool
      - name: get_latest_mapbox_docs_tool
      - name: list_styles_tool
      - name: list_tokens_tool
      - name: preview_style_tool
      - name: retrieve_style_tool
      - name: style_builder_tool
      - name: style_comparison_tool
      - name: tilequery_tool
      - name: update_style_tool
    secrets:
      - name: mapbox-devkit.access_token
        env: MAPBOX_ACCESS_TOKEN
        example: YOUR_API_KEY_HERE
    prompts: 0
    resources: {}
    metadata:
      pulls: 658
      githubStars: 18
      category: devops
      tags:
        - mapbox
        - development
        - devtools
        - api
        - styles
      license: MIT License
      owner: mapbox
  markdownify:
    description: A Model Context Protocol server for converting almost anything to Markdown.
    title: Markdownify
    type: server
    dateAdded: "2025-08-25T06:19:52Z"
    image: mcp/markdownify@sha256:310ee6fb7120f9da1318e58addf888686d816e255e2a8c43996f35e494812a6c
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/markdownify.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/markdownify.json
    source: https://github.com/zcaceres/markdownify-mcp/tree/main
    upstream: https://github.com/zcaceres/markdownify-mcp
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: audio-to-markdown
      - name: bing-search-to-markdown
      - name: docx-to-markdown
      - name: get-markdown-file
      - name: image-to-markdown
      - name: pdf-to-markdown
      - name: pptx-to-markdown
      - name: webpage-to-markdown
      - name: xlsx-to-markdown
      - name: youtube-to-markdown
    volumes:
      - '{{markdownify.paths|volume|into}}'
    prompts: 0
    resources: {}
    config:
      - name: markdownify
        description: The MCP server is allowed to access these paths
        type: object
        properties:
          paths:
            type: array
            items:
              type: string
        required:
          - paths
    metadata:
      pulls: 1864
      stars: 1
      githubStars: 2158
      category: productivity
      tags:
        - productivity
        - markdown
        - conversion
        - pdf
        - docx
        - pptx
        - xlsx
        - html
        - audio
        - youtube
      license: MIT License
      owner: zcaceres
  markitdown:
    description: A lightweight MCP server for calling MarkItDown.
    title: Markitdown
    type: server
    dateAdded: "2025-08-25T06:19:52Z"
    image: mcp/markitdown@sha256:ac2cdd96f844c7535b1dd2f1b96cdc433f55a7117fb2d48f223740f5ad1db1cc
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/markitdown.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/markitdown.json
    source: https://github.com/microsoft/markitdown/tree/main/packages/markitdown-mcp
    upstream: https://github.com/microsoft/markitdown
    icon: https://avatars.githubusercontent.com/u/6154722?v=4
    tools:
      - name: convert_to_markdown
    volumes:
      - '{{markitdown.paths|volume|into}}'
    prompts: 0
    resources: {}
    config:
      - name: markitdown
        description: The MCP server is allowed to access these paths
        type: object
        properties:
          paths:
            type: array
            items:
              type: string
        required:
          - paths
    metadata:
      pulls: 2616
      githubStars: 80279
      category: productivity
      tags:
        - productivity
        - markdown
        - conversion
        - pdf
        - docx
        - pptx
        - xlsx
        - html
        - audio
        - youtube
      license: MIT License
      owner: microsoft
  mcp-api-gateway:
    description: A universal MCP (Model Context Protocol) server to integrate any API with Claude Desktop using only Docker configurations.
    title: Api-gateway
    type: server
    dateAdded: "2025-06-11T14:21:25Z"
    image: mcp/api-gateway@sha256:9cc67b4a037fa5657bbc7231b3b8ec8524e663125ba7c1636ef2bd892137b1da
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/mcp-api-gateway.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/mcp-api-gateway.json
    source: https://github.com/rflpazini/mcp-api-gateway/tree/main
    upstream: https://github.com/rflpazini/mcp-api-gateway
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: execute_api
      - name: get_api_info
    env:
      - name: API_1_NAME
        value: '{{mcp-api-gateway.api_1_name}}'
      - name: API_1_SWAGGER_URL
        value: '{{mcp-api-gateway.api_1_swagger_url}}'
      - name: API_1_HEADER_AUTHORIZATION
        value: '{{mcp-api-gateway.api_1_header_authorization}}'
    prompts: 0
    resources: {}
    config:
      - name: mcp-api-gateway
        description: Configure the connection to mcp-api-gateway
        type: object
        properties:
          api_1_name:
            type: string
          api_1_swagger_url:
            type: string
          api_1_header_authorization:
            type: string
    metadata:
      pulls: 4144
      stars: 6
      githubStars: 22
      category: devops
      tags:
        - api-gateway
        - devops
      owner: rflpazini
  mcp-code-interpreter:
    description: A Python-based execution tool that mimics a Jupyter notebook environment. It accepts code snippets, executes them, and maintains state across sessions — preserving variables, imports, and past results. Ideal for iterative development, debugging, or code execution.
    title: Python Interpreter
    type: server
    dateAdded: "2025-09-02T20:44:02Z"
    image: mcp/mcp-code-interpreter@sha256:d6ce03d191c78b8e1b76eb861759c005469fc05606c7d8cc4fe64355a24550a9
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/mcp-code-interpreter.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/mcp-code-interpreter.json
    source: https://github.com/akuadane/mcp-code-interpreter/tree/main
    upstream: https://github.com/akuadane/mcp-code-interpreter
    icon: https://raw.githubusercontent.com/akuadane/mcp-code-interpreter/refs/heads/main/asset/logo.png
    tools:
      - name: execute_code
    volumes:
      - notebooks:/app/notebooks
    prompts: 0
    resources: {}
    metadata:
      pulls: 1392
      stars: 2
      githubStars: 5
      category: productivity
      tags:
        - productivity
      license: MIT License
      owner: akuadane
  mcp-discord:
    description: Interact with the Discord platform.
    title: Discord
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/mcp-discord@sha256:a9f146c6e7cc88bca04aee004c24d98d050fc01c54a9cc03731484754a401282
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/mcp-discord.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/mcp-discord.json
    source: https://github.com/slimslenderslacks/mcp-discord/tree/slim/docker
    upstream: https://github.com/slimslenderslacks/mcp-discord
    icon: https://avatars.githubusercontent.com/u/1965106?s=200&v=4
    tools:
      - name: discord_add_multiple_reactions
      - name: discord_add_reaction
      - name: discord_create_forum_post
      - name: discord_create_text_channel
      - name: discord_create_webhook
      - name: discord_delete_channel
      - name: discord_delete_forum_post
      - name: discord_delete_message
      - name: discord_delete_webhook
      - name: discord_edit_webhook
      - name: discord_get_forum_channels
      - name: discord_get_forum_post
      - name: discord_get_server_info
      - name: discord_login
      - name: discord_read_messages
      - name: discord_remove_reaction
      - name: discord_reply_to_forum
      - name: discord_send
      - name: discord_send_webhook_message
      - name: test
    secrets:
      - name: discord.token
        env: DISCORD_TOKEN
        example: YOUR_DISCORD_TOKEN
    prompts: 0
    resources: {}
    metadata:
      pulls: 4684
      stars: 15
      githubStars: 8
      category: devops
      tags:
        - discord
        - devops
      license: MIT License
      owner: slimslenderslacks
  mcp-hackernews:
    description: A Model Context Protocol (MCP) server that provides access to Hacker News stories, comments, and user data, with support for search and content retrieval.
    title: Hackernews mcp
    type: server
    dateAdded: "2025-09-15T16:12:49Z"
    image: mcp/hackernews-mcp@sha256:2e5c5cc89490848e1b5c0dc677f0dd5076dd09984be699e230cad387fb5f582f
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/mcp-hackernews.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/mcp-hackernews.json
    source: https://github.com/AayushBahukhandi/hackernews-mcp/tree/main
    upstream: https://github.com/AayushBahukhandi/hackernews-mcp
    icon: https://news.ycombinator.com/y18.svg
    tools:
      - name: get_stories
      - name: get_story_info
      - name: get_user_info
      - name: search_stories
    prompts: 0
    resources: {}
    metadata:
      pulls: 684
      stars: 1
      category: search
      tags:
        - search
      owner: AayushBahukhandi
  mcp-python-refactoring:
    description: 'Educational Python refactoring assistant that provides guided suggestions for AI assistants.  Features: • Step-by-step refactoring instructions without modifying code • Comprehensive code analysis using professional tools (Rope, Radon, Vulture, Jedi, LibCST, Pyrefly) • Educational approach teaching refactoring patterns through guided practice • Support for both guide-only and apply-changes modes • Identifies long functions, high complexity, dead code, and type issues • Provides precise line numbers and specific refactoring instructions • Compatible with all AI assistants (Claude, GPT, Cursor, Continue, etc.)  Perfect for developers learning refactoring patterns while maintaining full control over code changes. Acts as a refactoring mentor rather than an automated code modifier.'
    title: Python Refactoring Assistant
    type: server
    dateAdded: "2025-09-04T19:31:40Z"
    image: mcp/mcp-python-refactoring@sha256:4cd4303da424f021f03e9fafc46187a08bcab212ead6f1e39867afee1d42cd24
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/mcp-python-refactoring.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/mcp-python-refactoring.json
    source: https://github.com/slamer59/mcp-python-refactoring/tree/main
    upstream: https://github.com/slamer59/mcp-python-refactoring
    icon: https://avatars.githubusercontent.com/u/2664231?s=200&v=4
    tools:
      - name: analyze_python_file
      - name: analyze_python_package
      - name: analyze_security_and_patterns
      - name: analyze_test_coverage
      - name: find_long_functions
      - name: find_package_issues
      - name: get_extraction_guidance
      - name: get_package_metrics
      - name: tdd_refactoring_guidance
    prompts: 0
    resources: {}
    metadata:
      pulls: 733
      stars: 1
      githubStars: 5
      category: development
      tags:
        - python
        - refactoring
        - code-analysis
        - education
        - development
        - code-quality
        - static-analysis
        - mentoring
      license: MIT License
      owner: slamer59
  mcp-reddit:
    description: A comprehensive Model Context Protocol (MCP) server for Reddit integration. This server enables AI agents to interact with Reddit programmatically through a standardized interface.
    title: Mcp reddit
    type: server
    dateAdded: "2025-09-19T18:59:08Z"
    image: mcp/reddit-mcp@sha256:2e4c7f263791023bb0de2fb5ecbf11d69f0a011f25fedc5f59151e661d5dee4b
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/mcp-reddit.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/mcp-reddit.json
    source: https://github.com/KrishnaRandad2023/mcp-reddit/tree/main
    upstream: https://github.com/KrishnaRandad2023/mcp-reddit
    icon: https://avatars.githubusercontent.com/u/135265106?v=4
    tools:
      - name: fetchPosts
      - name: getComments
      - name: getSubredditInfo
      - name: postComment
      - name: postToSubreddit
      - name: searchPosts
    secrets:
      - name: mcp-reddit.reddit_client_id
        env: REDDIT_CLIENT_ID
        example: <REDDIT_CLIENT_ID>
      - name: mcp-reddit.reddit_client_secret
        env: REDDIT_CLIENT_SECRET
        example: <REDDIT_CLIENT_SECRET>
      - name: mcp-reddit.reddit_password
        env: REDDIT_PASSWORD
        example: <REDDIT_PASSWORD>
    env:
      - name: USERNAME
        value: '{{mcp-reddit.username}}'
    prompts: 0
    resources: {}
    config:
      - name: mcp-reddit
        description: Configure the connection to Mcp reddit
        type: object
        properties:
          username:
            type: string
    metadata:
      pulls: 196
      githubStars: 3
      category: communication
      tags:
        - communication
      license: MIT License
      owner: KrishnaRandad2023
  memory:
    description: Knowledge graph-based persistent memory system.
    title: Memory (Reference)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/memory@sha256:db0c2db07a44b6797eba7a832b1bda142ffc899588aae82c92780cbb2252407f
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/memory.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/memory.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24/src/memory
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/knowledgebase.svg
    tools:
      - name: add_observations
      - name: create_entities
      - name: create_relations
      - name: delete_entities
      - name: delete_observations
      - name: delete_relations
      - name: open_nodes
      - name: read_graph
      - name: search_nodes
    volumes:
      - claude-memory:/app/dist
    prompts: 0
    resources: {}
    metadata:
      pulls: 78371
      stars: 25
      githubStars: 69195
      category: ai
      tags:
        - mcp
        - ai
      license: MIT License
      owner: modelcontextprotocol
  mercado-libre:
    description: Provides access to Mercado Libre E-Commerce API.
    title: Mercado Libre
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/mercado-libre.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/mercado-libre.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.mercadolibre.com
      headers:
        Authorization: "Bearer ${MERCADO_LIBRE_API_KEY}"
    icon: https://www.google.com/s2/favicons?domain=mercadolibre.com&sz=64
    tools: []
    secrets:
      - name: mercado-libre.api_key
        env: MERCADO_LIBRE_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: commerce
      tags:
        - commerce
        - marketplace
        - latin-america
        - remote
      license: Apache License 2.0
      owner: docker
  mercado-pago:
    description: Provides access to Mercado Pago Marketplace API.
    title: Mercado Pago
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/mercado-pago.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/mercado-pago.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.mercadopago.com
      headers:
        Authorization: "Bearer ${MERCADO_PAGO_API_KEY}"
    icon: https://www.google.com/s2/favicons?domain=mercadopago.com&sz=64
    tools: []
    secrets:
      - name: mercado-pago.api_key
        env: MERCADO_PAGO_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: payments
      tags:
        - payments
        - finance
        - latin-america
        - remote
      license: Apache License 2.0
      owner: docker
  metabase:
    description: A comprehensive MCP server for Metabase with 70+ tools.
    title: Metabase MCP
    type: server
    dateAdded: "2025-07-29T14:05:27Z"
    image: mcp/metabase@sha256:02e633ae77a11d2f02e7ae3d52fce9abb871eab9f436010b1fee8c072cb2dd74
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/metabase.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/metabase.json
    source: https://github.com/easecloudio/mcp-metabase-server/tree/v1.0.2
    upstream: https://github.com/easecloudio/mcp-metabase-server
    icon: https://avatars.githubusercontent.com/u/10520629?s=48&v=4
    tools:
      - name: add_card_to_dashboard
      - name: create_card
      - name: create_collection
      - name: create_dashboard
      - name: create_database_connection
      - name: create_permission_group
      - name: create_user
      - name: delete_card
      - name: delete_dashboard
      - name: execute_card
      - name: execute_query
      - name: get_dashboard_cards
      - name: get_database_schema
      - name: get_database_sync_status
      - name: get_database_tables
      - name: list_cards
      - name: list_collections
      - name: list_dashboards
      - name: list_databases
      - name: list_permission_groups
      - name: list_users
      - name: remove_card_from_dashboard
      - name: search_content
      - name: sync_database_schema
      - name: test_database_connection
      - name: update_card
      - name: update_dashboard
      - name: update_dashboard_card
    secrets:
      - name: metabase.MetaBaseAPIKey
        env: METABASE_API_KEY
        example: metabase api key
      - name: metabase.MetaBasePassword
        env: METABASE_PASSWORD
        example: yourpassword
    env:
      - name: METABASE_URL
        value: '{{metabase.metabaseurl}}'
      - name: METABASE_USERNAME
        value: '{{metabase.metabaseusername}}'
    prompts: 0
    resources: {}
    config:
      - name: metabase
        description: Configure the connection to MetaBase MCP
        type: object
        properties:
          metabaseurl:
            type: string
          metabaseusername:
            type: string
    metadata:
      pulls: 1025
      stars: 2
      githubStars: 7
      category: data-visualization
      tags:
        - data-visualization
      license: MIT License
      owner: easecloudio
  minecraft-wiki:
    description: A MCP Server for browsing the official Minecraft Wiki!.
    title: Minecraft Wiki
    type: server
    dateAdded: "2025-06-05T06:09:26Z"
    image: mcp/minecraft-wiki@sha256:b191b5c6725ba90954bd86956afd1555d44fd58a1984f9e96a7657e029ad57fd
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/minecraft-wiki.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/minecraft-wiki.json
    source: https://github.com/L3-N0X/Minecraft-Wiki-MCP/tree/main
    upstream: https://github.com/L3-N0X/Minecraft-Wiki-MCP
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/minecraft.svg
    tools:
      - name: MinecraftWiki_getCategoriesForPage
      - name: MinecraftWiki_getPageContent
      - name: MinecraftWiki_getPageSection
      - name: MinecraftWiki_getPageSummary
      - name: MinecraftWiki_getSectionsInPage
      - name: MinecraftWiki_listAllCategories
      - name: MinecraftWiki_listCategoryMembers
      - name: MinecraftWiki_resolveRedirect
      - name: MinecraftWiki_searchWiki
    prompts: 0
    resources: {}
    metadata:
      pulls: 1795
      githubStars: 6
      category: games
      tags:
        - games
        - minecraft
        - search
      owner: L3-N0X
  multiversx-mx:
    description: MCP Server for MultiversX.
    title: MultiversX
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/multiversx-mx@sha256:0c62c76ac87aec3d840e1f9ebdeb436dc7c8588064702ec9b84435fb3962285e
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/multiversx-mx.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/multiversx-mx.json
    source: https://github.com/multiversx/mx-mcp/tree/main
    upstream: https://github.com/multiversx/mx-mcp
    icon: https://avatars.githubusercontent.com/u/114073177?s=200&v=4
    tools:
      - name: create-sft-nft-mesdt-tokens
      - name: create-wallet
      - name: get-balance-of-address
      - name: get-network
      - name: get-tokens-of-address
      - name: get-wallet-address
      - name: issue-fungible-token
      - name: issue-meta-esdt-collection
      - name: issue-nft-collection
      - name: issue-semi-fungible-collection
      - name: send-egld
      - name: send-egld-to-multiple-receivers
      - name: send-fungible-tokens
      - name: send-sft-nft-meta-tokens
    env:
      - name: MVX_NETWORK
        value: '{{multiversx-mx.network}}'
      - name: MVX_WALLET
        value: '{{multiversx-mx.wallet}}'
    prompts: 0
    resources: {}
    config:
      - name: multiversx-mx
        description: Configure the connection to MultiversX blockchain
        type: object
        properties:
          network:
            type: string
          wallet:
            type: string
        required:
          - network
          - wallet
    metadata:
      pulls: 2076
      category: devops
      tags:
        - multiversx-mx
        - devops
      license: Other
      owner: multiversx
  nasdaq-data-link:
    description: MCP server to interact with the data feeds provided by the Nasdaq Data Link. Developed by the community and maintained by Stefano Amorelli.
    title: Nasdaq Data Link
    type: server
    dateAdded: "2025-07-01T14:14:18Z"
    image: mcp/nasdaq-data-link@sha256:b90ef17326348108db9116027f3f921da61869943df6fca9573db09f3c269843
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/nasdaq-data-link.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/nasdaq-data-link.json
    source: https://github.com/stefanoamorelli/nasdaq-data-link-mcp/tree/main
    upstream: https://github.com/stefanoamorelli/nasdaq-data-link-mcp
    icon: https://raw.githubusercontent.com/stefanoamorelli/nasdaq-data-link-mcp/refs/heads/main/nasdaq-mcp-server-logo.png
    tools:
      - name: country_code
      - name: get_balance_sheet_data
      - name: get_cash_flow_data
      - name: get_company_reference_data
      - name: get_corporate_action_data
      - name: get_detailed_financials
      - name: get_fees_and_expenses
      - name: get_fund_information
      - name: get_fund_master_report
      - name: get_fundamental_data
      - name: get_indicator_value
      - name: get_monthly_flows
      - name: get_performance_analytics
      - name: get_performance_benchmark
      - name: get_performance_statistics
      - name: get_price_history
      - name: get_recent_price_history
      - name: get_rtat
      - name: get_rtat10
      - name: get_share_class_information
      - name: get_share_class_master
      - name: get_stock_stats
      - name: get_trade_summary_data
      - name: list_balance_sheet_fields
      - name: list_cash_flow_fields
      - name: list_corporate_action_fields
      - name: list_detailed_financial_fields
      - name: list_fundamental_fields
      - name: list_reference_data_fields
      - name: list_stock_stat_fields
      - name: list_worldbank_indicators
      - name: search_worldbank_indicators
    secrets:
      - name: nasdaq_data_link_api_key
        env: NASDAQ_DATA_LINK_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      pulls: 1337
      stars: 2
      githubStars: 44
      category: finance
      tags:
        - nasdaq
        - finance
        - data
        - intelligence
      license: MIT License
      owner: stefanoamorelli
  needle:
    description: Production-ready RAG service to search and retrieve data from your documents.
    title: Needle Remote MCP Server
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/needle.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/needle.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.needle.app/mcp
      headers:
        Authorization: "Bearer ${NEEDLE_API_KEY}"
    icon: https://www.google.com/s2/favicons?domain=needle.app&sz=64
    tools: []
    secrets:
      - name: needle.api_key
        env: NEEDLE_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: ai
      tags:
        - ai
        - rag
        - knowledge-base
        - remote
      license: Apache License 2.0
      owner: docker
  needle-mcp:
    description: Production-ready RAG service to search and retrieve data from your documents.
    title: Needle
    type: server
    dateAdded: "2025-07-11T18:29:38Z"
    image: mcp/needle-mcp@sha256:d3fd314f40c306ad12a78f6e9a1cbad35a8aee902ecaf50020416eccb8078ff4
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/needle-mcp.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/needle-mcp.json
    source: https://github.com/needle-ai/needle-mcp/tree/main
    upstream: https://github.com/needle-ai/needle-mcp
    icon: https://avatars.githubusercontent.com/u/194782563?s=200&v=4
    tools:
      - name: needle_add_file
      - name: needle_create_collection
      - name: needle_get_collection_details
      - name: needle_get_collection_stats
      - name: needle_list_collections
      - name: needle_list_files
      - name: needle_search
    secrets:
      - name: needle-mcp.api_key
        env: NEEDLE_API_KEY
        example: your-needle-api-key-here
    prompts: 0
    resources: {}
    metadata:
      pulls: 1020
      stars: 1
      githubStars: 81
      category: search
      tags:
        - needle
        - search
        - productivity
        - rag
        - semantic-search
        - document-management
      license: MIT License
      owner: needle-ai
  neo4j-cloud-aura-api:
    description: Manage Neo4j Aura database instances through the Neo4j Aura API.
    title: Neo4j Cloud Aura Api
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/neo4j-cloud-aura-api@sha256:922fea38ae0dc6a29ed4b6606bddd41c254b2b68488efe4393d03338499ede66
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/neo4j-cloud-aura-api.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/neo4j-cloud-aura-api.json
    source: https://github.com/neo4j-contrib/mcp-neo4j/tree/main/servers/mcp-neo4j-cloud-aura-api
    upstream: https://github.com/neo4j-contrib/mcp-neo4j
    icon: https://avatars.githubusercontent.com/u/916372?s=200&v=4
    tools:
      - name: create_instance
      - name: delete_instance
      - name: get_instance_by_name
      - name: get_instance_details
      - name: get_tenant_details
      - name: list_instances
      - name: list_tenants
      - name: pause_instance
      - name: resume_instance
      - name: update_instance_memory
      - name: update_instance_name
      - name: update_instance_vector_optimization
    secrets:
      - name: neo4j-cloud-aura-api.client_secret
        env: NEO4J_AURA_CLIENT_SECRET
        example: <your-client-secret>
    env:
      - name: NEO4J_AURA_CLIENT_ID
        value: '{{neo4j-cloud-aura-api.client_id}}'
      - name: NEO4J_TRANSPORT
        value: '{{neo4j-cloud-aura-api.transport}}'
      - name: NEO4J_MCP_SERVER_HOST
        value: '{{neo4j-cloud-aura-api.server_host}}'
      - name: NEO4J_MCP_SERVER_PORT
        value: '{{neo4j-cloud-aura-api.server_port}}'
      - name: NEO4J_MCP_SERVER_PATH
        value: '{{neo4j-cloud-aura-api.server_path}}'
      - name: NEO4J_MCP_SERVER_ALLOW_ORIGINS
        value: '{{neo4j-cloud-aura-api.server_allow_origins}}'
      - name: NEO4J_MCP_SERVER_ALLOWED_HOSTS
        value: '{{neo4j-cloud-aura-api.server_allowed_hosts}}'
    prompts: 0
    resources: {}
    config:
      - name: neo4j-cloud-aura-api
        description: Configure the connection to Neo4j Aura
        type: object
        properties:
          client_id:
            type: string
          transport:
            type: string
          server_host:
            type: string
          server_port:
            type: string
          server_path:
            type: string
          server_allow_origins:
            type: string
          server_allowed_hosts:
            type: string
        required:
          - client_id
    metadata:
      pulls: 2348
      stars: 2
      githubStars: 722
      category: devops
      tags:
        - neo4j-cloud-aura-api
        - devops
      license: MIT License
      owner: neo4j-contrib
  neo4j-cypher:
    description: Interact with Neo4j using Cypher graph queries.
    title: Neo4j Cypher
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/neo4j-cypher@sha256:57a6000c2f0e165662899ba2181486f8d55772fceeee9030563d83b76f5063c1
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/neo4j-cypher.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/neo4j-cypher.json
    source: https://github.com/neo4j-contrib/mcp-neo4j/tree/main/servers/mcp-neo4j-cypher
    upstream: https://github.com/neo4j-contrib/mcp-neo4j
    icon: https://avatars.githubusercontent.com/u/916372?s=200&v=4
    tools:
      - name: get_neo4j_schema
      - name: read_neo4j_cypher
      - name: write_neo4j_cypher
    secrets:
      - name: neo4j-cypher.password
        env: NEO4J_PASSWORD
        example: password
    env:
      - name: NEO4J_URL
        value: '{{neo4j-cypher.url}}'
      - name: NEO4J_USERNAME
        value: '{{neo4j-cypher.username}}'
      - name: NEO4J_DATABASE
        value: '{{neo4j-cypher.database}}'
      - name: NEO4J_NAMESPACE
        value: '{{neo4j-cypher.namespace}}'
      - name: NEO4J_TRANSPORT
        value: '{{neo4j-cypher.transport}}'
      - name: NEO4J_MCP_SERVER_HOST
        value: '{{neo4j-cypher.server_host}}'
      - name: NEO4J_MCP_SERVER_PORT
        value: '{{neo4j-cypher.server_port}}'
      - name: NEO4J_MCP_SERVER_PATH
        value: '{{neo4j-cypher.server_path}}'
      - name: NEO4J_MCP_SERVER_ALLOW_ORIGINS
        value: '{{neo4j-cypher.server_allow_origins}}'
      - name: NEO4J_MCP_SERVER_ALLOWED_HOSTS
        value: '{{neo4j-cypher.server_allowed_hosts}}'
      - name: NEO4J_READ_TIMEOUT
        value: '{{neo4j-cypher.read_timeout}}'
      - name: NEO4J_RESPONSE_TOKEN_LIMIT
        value: '{{neo4j-cypher.response_token_limit}}'
      - name: NEO4J_READ_ONLY
        value: '{{neo4j-cypher.read_only}}'
    prompts: 0
    resources: {}
    config:
      - name: neo4j-cypher
        description: Configure the connection to Neo4j
        type: object
        properties:
          url:
            type: string
          username:
            type: string
          database:
            type: string
          read_timeout:
            type: string
          response_token_limit:
            type: string
          namespace:
            type: string
          transport:
            type: string
          server_host:
            type: string
          server_port:
            type: string
          server_path:
            type: string
          server_allow_origins:
            type: string
          server_allowed_hosts:
            type: string
          read_only:
            type: boolean
        required:
          - url
          - username
    metadata:
      pulls: 7448
      stars: 2
      githubStars: 722
      category: devops
      tags:
        - neo4j-cypher
        - devops
      license: MIT License
      owner: neo4j-contrib
  neo4j-data-modeling:
    description: MCP server that assists in creating, validating and visualizing graph data models.
    title: Neo4j Data Modeling
    type: server
    dateAdded: "2025-09-09T15:35:27Z"
    image: mcp/neo4j-data-modeling@sha256:18d70dafe9e0ee13f6eaf44ccc5992668ead2f8d908bccb10de5213bf99d5109
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/neo4j-data-modeling.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/neo4j-data-modeling.json
    source: https://github.com/neo4j-contrib/mcp-neo4j/tree/main/servers/mcp-neo4j-data-modeling
    upstream: https://github.com/neo4j-contrib/mcp-neo4j
    icon: https://avatars.githubusercontent.com/u/916372?s=200&v=4
    tools:
      - name: export_to_arrows_json
      - name: get_constraints_cypher_queries
      - name: get_example_data_model
      - name: get_mermaid_config_str
      - name: get_node_cypher_ingest_query
      - name: get_relationship_cypher_ingest_query
      - name: list_example_data_models
      - name: load_from_arrows_json
      - name: validate_data_model
      - name: validate_node
      - name: validate_relationship
    env:
      - name: NEO4J_TRANSPORT
        value: '{{neo4j-data-modeling.transport}}'
      - name: NEO4J_MCP_SERVER_HOST
        value: '{{neo4j-data-modeling.server_host}}'
      - name: NEO4J_MCP_SERVER_PORT
        value: '{{neo4j-data-modeling.server_port}}'
      - name: NEO4J_MCP_SERVER_PATH
        value: '{{neo4j-data-modeling.server_path}}'
      - name: NEO4J_MCP_SERVER_ALLOW_ORIGINS
        value: '{{neo4j-data-modeling.server_allow_origins}}'
      - name: NEO4J_MCP_SERVER_ALLOWED_HOSTS
        value: '{{neo4j-data-modeling.server_allowed_hosts}}'
    prompts: 0
    resources: {}
    config:
      - name: neo4j-data-modeling
        description: Optional configuration to deploy MCP server
        type: object
        properties:
          transport:
            type: string
          server_host:
            type: string
          server_port:
            type: string
          server_path:
            type: string
          server_allow_origins:
            type: string
          server_allowed_hosts:
            type: string
    metadata:
      pulls: 437
      githubStars: 722
      category: devops
      tags:
        - neo4j-data-modeling
        - devops
      license: MIT License
      owner: neo4j-contrib
  neo4j-memory:
    description: Provide persistent memory capabilities through Neo4j graph database integration.
    title: Neo4j Memory
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/neo4j-memory@sha256:7d07cd6143d1713d155e7f5afcf05d0c77b9cc6800c4a508bfeca20bb1e0a433
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/neo4j-memory.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/neo4j-memory.json
    source: https://github.com/neo4j-contrib/mcp-neo4j/tree/main/servers/mcp-neo4j-memory
    upstream: https://github.com/neo4j-contrib/mcp-neo4j
    icon: https://avatars.githubusercontent.com/u/916372?s=200&v=4
    tools:
      - name: add_observations
      - name: create_entities
      - name: create_relations
      - name: delete_entities
      - name: delete_observations
      - name: delete_relations
      - name: find_memories_by_name
      - name: read_graph
      - name: search_memories
    secrets:
      - name: neo4j-memory.password
        env: NEO4J_PASSWORD
        example: password
    env:
      - name: NEO4J_URL
        value: '{{neo4j-memory.url}}'
      - name: NEO4J_USERNAME
        value: '{{neo4j-memory.username}}'
      - name: NEO4J_DATABASE
        value: '{{neo4j-memory.database}}'
      - name: NEO4J_TRANSPORT
        value: '{{neo4j-memory.transport}}'
      - name: NEO4J_MCP_SERVER_HOST
        value: '{{neo4j-memory.server_host}}'
      - name: NEO4J_MCP_SERVER_PORT
        value: '{{neo4j-memory.server_port}}'
      - name: NEO4J_MCP_SERVER_PATH
        value: '{{neo4j-memory.server_path}}'
      - name: NEO4J_MCP_SERVER_ALLOW_ORIGINS
        value: '{{neo4j-memory.server_allow_origins}}'
      - name: NEO4J_MCP_SERVER_ALLOWED_HOSTS
        value: '{{neo4j-memory.server_allowed_hosts}}'
    prompts: 0
    resources: {}
    config:
      - name: neo4j-memory
        description: Configure the connection to Neo4j
        type: object
        properties:
          url:
            type: string
          username:
            type: string
          database:
            type: string
          transport:
            type: string
          server_host:
            type: string
          server_port:
            type: string
          server_path:
            type: string
          server_allow_origins:
            type: string
          server_allowed_hosts:
            type: string
        required:
          - url
          - username
    metadata:
      pulls: 5518
      stars: 9
      githubStars: 722
      category: devops
      tags:
        - neo4j-memory
        - devops
      license: MIT License
      owner: neo4j-contrib
  node-code-sandbox:
    description: A Node.js–based Model Context Protocol server that spins up disposable Docker containers to execute arbitrary JavaScript.
    title: Node.js Sandbox
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/node-code-sandbox@sha256:6b7180ab719dab2028dfc689002295ed6d55f7cc6217122d5025d849d5269666
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/node-code-sandbox.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/node-code-sandbox.json
    source: https://github.com/alfonsograziano/node-code-sandbox-mcp/tree/master
    upstream: https://github.com/alfonsograziano/node-code-sandbox-mcp
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/nodedotjs.svg
    tools:
      - name: get_dependency_types
      - name: run_js
      - name: run_js_ephemeral
      - name: sandbox_exec
      - name: sandbox_initialize
      - name: sandbox_stop
      - name: search_npm_packages
    prompts: 0
    resources: {}
    metadata:
      pulls: 37552
      stars: 6
      githubStars: 108
      category: devops
      tags:
        - node-code-sandbox
        - devops
      owner: alfonsograziano
  novita:
    description: Seamless interaction with Novita AI platform resources.
    title: Novita
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/novita@sha256:ddc904348d9e0be0fd4572840a41b398e95b23a64d7e1d58c9d6275eb7d67899
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/novita.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/novita.json
    source: https://github.com/novitalabs/novita-mcp-server/tree/main
    upstream: https://github.com/novitalabs/novita-mcp-server
    icon: https://avatars.githubusercontent.com/u/145963681?v=4
    tools:
      - name: create-container-registry-auth
      - name: create-gpu-instance
      - name: create-network-storage
      - name: create-template
      - name: delete-container-registry-auth
      - name: delete-gpu-instance
      - name: delete-network-storage
      - name: delete-template
      - name: get-gpu-instance
      - name: get-template
      - name: list-clusters
      - name: list-container-registry-auths
      - name: list-gpu-instances
      - name: list-network-storage
      - name: list-products
      - name: list-templates
      - name: restart-gpu-instance
      - name: start-gpu-instance
      - name: stop-gpu-instance
      - name: update-network-storage
    env:
      - name: NOVITA_API_KEY
        value: ""
    prompts: 0
    resources: {}
    metadata:
      pulls: 1148
      githubStars: 12
      category: ai
      tags:
        - novita
        - ai
      license: MIT License
      owner: novitalabs
  npm-sentinel:
    description: MCP server that enables intelligent NPM package analysis powered by AI.
    title: NPM Sentinel
    type: server
    dateAdded: "2025-07-01T14:14:18Z"
    image: mcp/npm-sentinel@sha256:d8e4bbc7dd5c163fb8abab3f36062a36a02bfd200cae199a9e2392bf4c9198ab
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/npm-sentinel.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/npm-sentinel.json
    source: https://github.com/Nekzus/npm-sentinel-mcp/tree/main
    upstream: https://github.com/Nekzus/npm-sentinel-mcp
    icon: https://avatars.githubusercontent.com/u/85507589?v=4
    tools:
      - name: npmAlternatives
      - name: npmChangelogAnalysis
      - name: npmCompare
      - name: npmDeprecated
      - name: npmDeps
      - name: npmLatest
      - name: npmLicenseCompatibility
      - name: npmMaintainers
      - name: npmMaintenance
      - name: npmPackageReadme
      - name: npmQuality
      - name: npmRepoStats
      - name: npmScore
      - name: npmSearch
      - name: npmSize
      - name: npmTrends
      - name: npmTypes
      - name: npmVersions
      - name: npmVulnerabilities
    prompts: 0
    resources: {}
    metadata:
      pulls: 1832
      stars: 1
      githubStars: 7
      category: devops
      tags:
        - npm
        - npm-package
      license: MIT License
      owner: Nekzus
  obsidian:
    description: MCP server that interacts with Obsidian via the Obsidian rest API community plugin.
    title: Obsidian
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/obsidian@sha256:0eba4c05742ad35faeb91eca40b792454d440d86449c9f1b3cb6c387a510651b
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/obsidian.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/obsidian.json
    source: https://github.com/docker/mcp-obsidian/tree/docker-support
    upstream: https://github.com/MarkusPfundstein/mcp-obsidian
    icon: https://avatars.githubusercontent.com/u/65011256?s=200&v=4
    tools:
      - name: obsidian_append_content
      - name: obsidian_batch_get_file_contents
      - name: obsidian_complex_search
      - name: obsidian_delete_file
      - name: obsidian_get_file_contents
      - name: obsidian_get_periodic_note
      - name: obsidian_get_recent_changes
      - name: obsidian_get_recent_periodic_notes
      - name: obsidian_list_files_in_dir
      - name: obsidian_list_files_in_vault
      - name: obsidian_patch_content
      - name: obsidian_simple_search
    secrets:
      - name: obsidian.api_key
        env: OBSIDIAN_API_KEY
        example: YOUR_OBSIDIAN_API_KEY
    env:
      - name: OBSIDIAN_HOST
        value: host.docker.internal
    prompts: 0
    resources: {}
    metadata:
      pulls: 18449
      stars: 15
      githubStars: 2110
      category: productivity
      tags:
        - obsidian
        - productivity
      license: MIT License
      owner: MarkusPfundstein
  okta-mcp-fctr:
    description: Secure Okta identity and access management via Model Context Protocol (MCP). Access Okta users, groups, applications, logs, and policies through AI assistants with enterprise-grade security.
    title: Okta MCP Server
    type: server
    dateAdded: "2025-08-01T06:21:29Z"
    image: mcp/okta-mcp-fctr@sha256:c0a95e22c7037aa14f7d476658b4930fcad152bc5836ed2cbe1cf731f50061d4
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/okta-mcp-fctr.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/okta-mcp-fctr.json
    source: https://github.com/fctr-id/okta-mcp-server/tree/main
    upstream: https://github.com/fctr-id/okta-mcp-server
    icon: https://avatars.githubusercontent.com/u/198773578?v=4
    tools:
      - name: analyze_login_risk
      - name: analyze_user_app_access
      - name: get_current_time
      - name: get_okta_application
      - name: get_okta_event_logs
      - name: get_okta_group
      - name: get_okta_policy_rule
      - name: get_okta_user
      - name: list_okta_application_groups
      - name: list_okta_application_users
      - name: list_okta_applications
      - name: list_okta_group_users
      - name: list_okta_groups
      - name: list_okta_network_zones
      - name: list_okta_policy_rules
      - name: list_okta_user_applications
      - name: list_okta_user_factors
      - name: list_okta_user_groups
      - name: list_okta_users
      - name: parse_relative_time
    secrets:
      - name: okta-mcp-fctr.api_token
        env: OKTA_API_TOKEN
        example: 00aBcDeFGhIjkLmNoPqRsTuVwxYz
    env:
      - name: OKTA_CLIENT_ORGURL
        value: '{{okta-mcp-fctr.client_orgurl}}'
      - name: LOG_LEVEL
        value: '{{okta-mcp-fctr.log_level}}'
      - name: OKTA_CONCURRENT_LIMIT
        value: '{{okta-mcp-fctr.concurrent_limit}}'
    prompts: 0
    resources: {}
    config:
      - name: okta-mcp-fctr
        description: Configure the connection to Okta
        type: object
        properties:
          client_orgurl:
            type: string
            description: Okta organization URL (e.g., https://dev-123456.okta.com)
          log_level:
            type: string
            description: Logging level for server output
          concurrent_limit:
            type: string
            description: Maximum concurrent requests to Okta API
        required:
          - client_orgurl
    metadata:
      pulls: 785
      githubStars: 32
      category: ai
      tags:
        - ai
        - okta
        - identity
        - access-management
        - security
        - authentication
        - audit
        - compliance
        - enterprise
      license: Apache License 2.0
      owner: fctr-id
  omi:
    description: A Model Context Protocol server for Omi interaction and automation. This server provides tools to read, search, and manipulate Memories and Conversations.
    title: omi-mcp
    type: server
    dateAdded: "2025-07-21T12:46:15Z"
    image: mcp/omi@sha256:5e475b2391ac8af79950feba10dbacbb99b40e69790ed36e77e40e662a5e84c7
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/omi.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/omi.json
    source: https://github.com/BasedHardware/omi/tree/main/mcp
    upstream: https://github.com/BasedHardware/omi
    icon: https://avatars.githubusercontent.com/u/162546372?v=4
    tools:
      - name: create_memory
      - name: delete_memory
      - name: edit_memory
      - name: get_conversation_by_id
      - name: get_conversations
      - name: get_memories
    secrets:
      - name: omi.api_key
        env: OMI_API_KEY
        example: <OMI_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      pulls: 1766
      stars: 1
      githubStars: 7005
      category: ai
      tags:
        - ai
      license: MIT License
      owner: BasedHardware
  onlyoffice-docspace:
    description: ONLYOFFICE DocSpace is a room-based collaborative platform which allows organizing a clear file structure depending on users' needs or project goals.
    title: ONLYOFFICE DocSpace
    type: server
    dateAdded: "2025-07-19T06:20:02Z"
    image: mcp/onlyoffice-docspace@sha256:4efbf4879e6227e61475d3adc68b2fcce9d6b632dc0d2ae6676a830228b67e3a
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/onlyoffice-docspace.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/onlyoffice-docspace.json
    source: https://github.com/ONLYOFFICE/docspace-mcp/tree/main
    upstream: https://github.com/ONLYOFFICE/docspace-mcp
    icon: https://avatars.githubusercontent.com/u/1426033?v=4
    tools:
      - name: archive_room
      - name: copy_batch_items
      - name: create_folder
      - name: create_room
      - name: delete_file
      - name: delete_folder
      - name: download_file_as_text
      - name: get_all_people
      - name: get_file_info
      - name: get_folder_content
      - name: get_folder_info
      - name: get_my_folder
      - name: get_room_access_levels
      - name: get_room_info
      - name: get_room_security_info
      - name: get_room_types
      - name: get_rooms_folder
      - name: move_batch_items
      - name: rename_folder
      - name: set_room_security
      - name: update_file
      - name: update_room
      - name: upload_file
    secrets:
      - name: onlyoffice-docspace.api_key
        env: DOCSPACE_API_KEY
        example: sk-a499e...
      - name: onlyoffice-docspace.auth_token
        env: DOCSPACE_AUTH_TOKEN
        example: Fe4Hrgl6...
      - name: onlyoffice-docspace.username
        env: DOCSPACE_USERNAME
        example: henry.milton@onlyoffice.com
      - name: onlyoffice-docspace.password
        env: DOCSPACE_PASSWORD
        example: ditgor-p...
    env:
      - name: DOCSPACE_BASE_URL
        value: '{{onlyoffice-docspace.base_url}}'
      - name: DOCSPACE_ORIGIN
        value: '{{onlyoffice-docspace.origin}}'
      - name: DOCSPACE_USER_AGENT
        value: '{{onlyoffice-docspace.user_agent}}'
      - name: DOCSPACE_DYNAMIC
        value: '{{onlyoffice-docspace.dynamic}}'
      - name: DOCSPACE_TOOLSETS
        value: '{{onlyoffice-docspace.toolsets}}'
    prompts: 0
    resources: {}
    config:
      - name: onlyoffice-docspace
        description: Configure the connection to ONLYOFFICE DocSpace
        type: object
        properties:
          base_url:
            type: string
          origin:
            type: string
          user_agent:
            type: string
          dynamic:
            type: boolean
          toolsets:
            type: string
    metadata:
      pulls: 939
      githubStars: 5
      category: productivity
      tags:
        - onlyoffice
        - docspace
        - productivity
      license: Apache License 2.0
      owner: ONLYOFFICE
  openapi:
    description: Fetch, validate, and generate code or curl from any OpenAPI or Swagger spec - all from a single URL.
    title: OpenAPI Toolkit for MCP
    type: server
    dateAdded: "2025-09-15T16:12:49Z"
    image: mcp/openapi@sha256:26234065b6a786e69088b9b22ec4f9130572704664211e76e9b0887c388186e5
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/openapi.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/openapi.json
    source: https://github.com/lepoco/openapi.client/tree/main
    upstream: https://github.com/lepoco/openapi.client
    icon: https://raw.githubusercontent.com/lepoco/openapi.client/refs/heads/main/build/nuget.png
    tools:
      - name: create_csharp_snippet
      - name: generate_curl_command
      - name: get_known_responses
      - name: get_list_of_operations
      - name: validate_document
    env:
      - name: MODE
        value: '{{openapi.mode}}'
    prompts: 0
    resources: {}
    config:
      - name: openapi
        description: Configure the connection to OpenAPI Toolkit for MCP
        type: object
        properties:
          mode:
            type: string
    metadata:
      pulls: 419
      githubStars: 12
      category: productivity
      tags:
        - productivity
      license: MIT License
      owner: lepoco
  openapi-schema:
    description: OpenAPI Schema Model Context Protocol Server.
    title: OpenAPI Schema
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/openapi-schema@sha256:5da1c1870748cc3c7d9baa25549fa716a7d9dd24dbb78b73396cb2daebfbca6a
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/openapi-schema.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/openapi-schema.json
    source: https://github.com/slimslenderslacks/mcp-openapi-schema/tree/master
    upstream: https://github.com/hannesj/mcp-openapi-schema
    icon: https://avatars.githubusercontent.com/u/16343502?s=200&v=4
    tools:
      - name: get-component
      - name: get-endpoint
      - name: get-examples
      - name: get-path-parameters
      - name: get-request-body
      - name: get-response-schema
      - name: list-components
      - name: list-endpoints
      - name: list-security-schemes
      - name: search-schema
    volumes:
      - '{{openApiSchemaPath|or:[]|volume|into}}'
    prompts: 0
    resources: {}
    metadata:
      pulls: 6026
      stars: 7
      githubStars: 44
      category: devops
      tags:
        - openapi-schema
        - devops
      owner: hannesj
  openbnb-airbnb:
    description: MCP Server for searching Airbnb and get listing details.
    title: Airbnb Search
    type: server
    dateAdded: "2025-07-01T12:14:18Z"
    image: mcp/openbnb-airbnb@sha256:352f5716e418f7d94e1bcd5c6846d7940b3250255b78ab1acb7e0adbd8f89331
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/openbnb-airbnb.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/openbnb-airbnb.json
    source: https://github.com/openbnb-org/mcp-server-airbnb/tree/main
    upstream: https://github.com/openbnb-org/mcp-server-airbnb
    icon: https://avatars.githubusercontent.com/u/202564951?v=4
    tools:
      - name: airbnb_listing_details
      - name: airbnb_search
    prompts: 0
    resources: {}
    metadata:
      pulls: 3260
      stars: 1
      githubStars: 298
      category: search
      tags:
        - airbnb
        - openbnb
      license: MIT License
      owner: openbnb-org
  openmesh:
    description: Discover and connect to a curated marketplace of MCP servers for extending AI agent capabilities.
    title: OpenMesh
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/openmesh.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/openmesh.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://api.openmesh.dev/mcp
    icon: https://www.google.com/s2/favicons?domain=openmesh.network&sz=64
    tools:
      - name: discover_service
      - name: call_service
      - name: report_experience
      - name: get_alternative
    prompts: 0
    resources: {}
    metadata:
      category: infrastructure
      tags:
        - infrastructure
        - discovery
        - mesh
        - remote
      license: Apache License 2.0
      owner: docker
  openweather:
    description: A simple MCP service that provides current weather and 5-day forecast using the free OpenWeatherMap API.
    title: Openweather
    type: server
    dateAdded: "2025-07-01T12:14:18Z"
    image: mcp/openweather@sha256:e2f49acbb718e28b6f2f1bb00d8eebcc4dfc73e6788ed2040974496856375d5f
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/openweather.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/openweather.json
    source: https://github.com/mschneider82/mcp-openweather/tree/main
    upstream: https://github.com/mschneider82/mcp-openweather
    icon: https://avatars.githubusercontent.com/u/1743227?s=200&v=4
    tools:
      - name: weather
    secrets:
      - name: openweather.owm_api_key
        env: OWM_API_KEY
        example: <OWM_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      pulls: 4160
      stars: 4
      githubStars: 10
      category: search
      tags:
        - weather-api
      license: MIT License
      owner: mschneider82
  openzeppelin-cairo:
    description: Access to OpenZeppelin Cairo Contracts.
    title: OpenZeppelin Cairo Contracts
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/openzeppelin-cairo.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/openzeppelin-cairo.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.openzeppelin.com/contracts/cairo/mcp
    icon: https://www.google.com/s2/favicons?domain=openzeppelin.com&sz=64
    tools:
      - name: cairo-erc20
      - name: cairo-erc721
      - name: cairo-erc1155
      - name: cairo-account
      - name: cairo-multisig
      - name: cairo-governor
      - name: cairo-vesting
      - name: cairo-custom
    prompts: 0
    resources: {}
    metadata:
      category: blockchain
      tags:
        - blockchain
        - cairo
        - smart-contracts
        - remote
      license: Apache License 2.0
      owner: docker
  openzeppelin-solidity:
    description: Access to OpenZeppelin Solidity Contracts.
    title: OpenZeppelin Solidity Contracts
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/openzeppelin-solidity.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/openzeppelin-solidity.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.openzeppelin.com/contracts/solidity/mcp
    icon: https://www.google.com/s2/favicons?domain=openzeppelin.com&sz=64
    tools:
      - name: solidity-erc20
      - name: solidity-erc721
      - name: solidity-erc1155
      - name: solidity-stablecoin
      - name: solidity-rwa
      - name: solidity-account
      - name: solidity-governor
      - name: solidity-custom
    prompts: 0
    resources: {}
    metadata:
      category: blockchain
      tags:
        - blockchain
        - solidity
        - smart-contracts
        - remote
      license: Apache License 2.0
      owner: docker
  openzeppelin-stellar:
    description: Access to OpenZeppelin Stellar Contracts.
    title: OpenZeppelin Stellar Contracts
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/openzeppelin-stellar.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/openzeppelin-stellar.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.openzeppelin.com/contracts/stellar/mcp
    icon: https://www.google.com/s2/favicons?domain=openzeppelin.com&sz=64
    tools:
      - name: stellar-fungible
      - name: stellar-stablecoin
      - name: stellar-non-fungible
    prompts: 0
    resources: {}
    metadata:
      category: blockchain
      tags:
        - blockchain
        - stellar
        - smart-contracts
        - remote
      license: Apache License 2.0
      owner: docker
  openzeppelin-stylus:
    description: Access to OpenZeppelin Stylus Contracts.
    title: OpenZeppelin Stylus Contracts
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/openzeppelin-stylus.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/openzeppelin-stylus.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.openzeppelin.com/contracts/stylus/mcp
    icon: https://www.google.com/s2/favicons?domain=openzeppelin.com&sz=64
    tools:
      - name: stylus-erc20
      - name: stylus-erc721
      - name: stylus-erc1155
    prompts: 0
    resources: {}
    metadata:
      category: blockchain
      tags:
        - blockchain
        - stylus
        - smart-contracts
        - remote
      license: Apache License 2.0
      owner: docker
  opik:
    description: Model Context Protocol (MCP) implementation for Opik enabling seamless IDE integration and unified access to prompts, projects, traces, and metrics.
    title: Opik
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/opik@sha256:1ff61d0c6618e9b4add47b12b3b01b8c18d00df49cbf3c95ede58e87ee9886ad
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/opik.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/opik.json
    source: https://github.com/comet-ml/opik-mcp/tree/main
    upstream: https://github.com/comet-ml/opik-mcp
    icon: https://avatars.githubusercontent.com/u/31487821?s=200&v=4
    tools:
      - name: add-trace-feedback
      - name: create-project
      - name: create-prompt
      - name: get-prompt-version
      - name: get-prompts
      - name: get-trace-by-id
      - name: get-trace-stats
      - name: get-trace-threads
      - name: list-projects
      - name: list-traces
      - name: opik-integration-docs
      - name: save-prompt-version
      - name: search-traces
    secrets:
      - name: opik.api_key
        env: OPIK_API_KEY
        example: your_api_key
    env:
      - name: OPIK_API_BASE_URL
        value: '{{opik.api_base_url}}'
      - name: OPIK_WORKSPACE_NAME
        value: '{{opik.workspace_name}}'
    prompts: 0
    resources: {}
    config:
      - name: opik
        description: Configure the connection to Opik
        type: object
        properties:
          api_base_url:
            type: string
          workspace_name:
            type: string
    metadata:
      pulls: 2193
      stars: 1
      githubStars: 170
      category: devops
      tags:
        - opik
        - devops
      license: Apache License 2.0
      owner: comet-ml
  opine-mcp-server:
    description: A Model Context Protocol (MCP) server for querying deals and evaluations from the Opine CRM API.
    title: Opine MCP Server
    type: server
    dateAdded: "2025-09-06T06:18:47Z"
    image: codygreen719/opine-mcp-server@sha256:82c7a0c4941cbf6a903e445b1b4f12474978191d016ae23433984931e4a39c9e
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/opine-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/opine-mcp-server.json
    source: https://github.com/cody-docker/opine-mcp-server/tree/main
    upstream: https://github.com/cody-docker/opine-mcp-server
    icon: https://app.tryopine.com/_next/image?url=%2Flogomark.png&w=32&q=75
    tools:
      - name: get_deal
      - name: list_deals
      - name: list_evaluations
      - name: list_tickets
    secrets:
      - name: opine-mcp-server.OPINE_API_KEY
        env: OPINE_API_KEY
        example: <OPINE_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      githubStars: 1
      category: productivity
      tags:
        - productivity
      license: Other
      owner: cody-docker
  oracle:
    description: Connect to Oracle databases via MCP, providing secure read-only access with support for schema exploration, query execution, and metadata inspection.
    title: Oracle Database MCP Server
    type: server
    dateAdded: "2025-09-11T17:03:42Z"
    image: mcp/oracle@sha256:76d733b869f424eca1715a6566f4a472aee2599308e766179ec10abdea46ad70
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/oracle.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/oracle.json
    source: https://github.com/samscarrow/oracle-mcp-server/tree/main
    upstream: https://github.com/samscarrow/oracle-mcp-server
    icon: https://avatars.githubusercontent.com/u/93792006?v=4
    tools:
      - name: describe_table
      - name: execute_query
      - name: get_table_constraints
      - name: get_table_indexes
      - name: list_schemas
      - name: list_tables
    secrets:
      - name: oracle.password
        env: ORACLE_PASSWORD
        example: <ORACLE_PASSWORD>
    env:
      - name: ORACLE_CONNECTION_STRING
        value: '{{oracle.oracle_connection_string}}'
      - name: ORACLE_USER
        value: '{{oracle.oracle_user}}'
    prompts: 0
    resources: {}
    config:
      - name: oracle
        description: Configure the connection to Oracle Database
        type: object
        properties:
          oracle_connection_string:
            type: string
          oracle_user:
            type: string
    metadata:
      pulls: 382
      githubStars: 1
      category: database
      tags:
        - oracle
        - database
        - sql
        - enterprise
      license: MIT License
      owner: samscarrow
  osp_marketing_tools:
    description: A Model Context Protocol (MCP) server that empowers LLMs to use some of Open Srategy Partners' core writing and product marketing techniques.
    title: OSP Marketing Tools
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/osp_marketing_tools@sha256:34b72f4cc3d274a9b975bca22adb0f664055a1ca2c74a9417c8149512e772eaa
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/osp_marketing_tools.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/osp_marketing_tools.json
    source: https://github.com/open-strategy-partners/osp_marketing_tools/tree/main
    upstream: https://github.com/open-strategy-partners/osp_marketing_tools
    icon: https://avatars.githubusercontent.com/u/47528973?s=200&v=4
    tools:
      - name: get_editing_codes
      - name: get_meta_guide
      - name: get_on_page_seo_guide
      - name: get_value_map_positioning_guide
      - name: get_writing_guide
      - name: health_check
    prompts: 0
    resources: {}
    metadata:
      pulls: 3191
      stars: 2
      githubStars: 237
      category: devops
      tags:
        - osp_marketing_tools
        - devops
      license: Creative Commons Attribution Share Alike 4.0 International
      owner: open-strategy-partners
  oxylabs:
    description: A Model Context Protocol (MCP) server that enables AI assistants like Claude to seamlessly access web data through Oxylabs' powerful web scraping technology.
    title: Oxylabs
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/oxylabs@sha256:67085d076c5b7c29dd4167754bc4164405f00bfd955529fc8319e1497d24de78
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/oxylabs.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/oxylabs.json
    source: https://github.com/oxylabs/oxylabs-mcp/tree/main
    upstream: https://github.com/oxylabs/oxylabs-mcp
    icon: https://avatars.githubusercontent.com/u/43960873?s=200&v=4
    tools:
      - name: amazon_product_scraper
      - name: amazon_search_scraper
      - name: google_search_scraper
      - name: universal_scraper
    secrets:
      - name: oxylabs.password
        env: OXYLABS_PASSWORD
        example: YOUR_PASSWORD_HERE
    env:
      - name: OXYLABS_USERNAME
        value: '{{oxylabs.username}}'
    prompts: 0
    resources: {}
    config:
      - name: oxylabs
        description: Configure the connection to Oxylabs Scraper
        type: object
        properties:
          username:
            type: string
        required:
          - username
    metadata:
      pulls: 2582
      stars: 3
      githubStars: 66
      category: devops
      tags:
        - oxylabs
        - devops
      license: MIT License
      owner: oxylabs
  paper-search:
    description: A MCP for searching and downloading academic papers from multiple sources like arXiv, PubMed, bioRxiv, etc.
    title: Paper Search
    type: server
    dateAdded: "2025-06-05T05:10:44Z"
    image: mcp/paper-search@sha256:fee339283c68af0470d24dd6e7fb2937bc144a24c2b6574d0da8ea0366285044
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/paper-search.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/paper-search.json
    source: https://github.com/openags/paper-search-mcp/tree/main
    upstream: https://github.com/openags/paper-search-mcp
    icon: https://avatars.githubusercontent.com/u/197887910?v=4
    tools:
      - name: download_arxiv
      - name: download_biorxiv
      - name: download_crossref
      - name: download_iacr
      - name: download_medrxiv
      - name: download_pubmed
      - name: download_semantic
      - name: get_crossref_paper_by_doi
      - name: read_arxiv_paper
      - name: read_biorxiv_paper
      - name: read_crossref_paper
      - name: read_iacr_paper
      - name: read_medrxiv_paper
      - name: read_pubmed_paper
      - name: read_semantic_paper
      - name: search_arxiv
      - name: search_biorxiv
      - name: search_crossref
      - name: search_google_scholar
      - name: search_iacr
      - name: search_medrxiv
      - name: search_pubmed
      - name: search_semantic
    prompts: 0
    resources: {}
    metadata:
      pulls: 4939
      stars: 3
      githubStars: 360
      category: search
      tags:
        - academic
        - search
      license: MIT License
      owner: openags
  perplexity-ask:
    description: Connector for Perplexity API, to enable real-time, web-wide research.
    title: Perplexity
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/perplexity-ask@sha256:7816f45a6f266ad30a21d96c69749f88dd15552c0d1db0ce38704156a49ee538
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/perplexity-ask.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/perplexity-ask.json
    source: https://github.com/ppl-ai/modelcontextprotocol/tree/f0a927c250e04b389ff5c34f6a2a85ad625668e8
    upstream: https://github.com/ppl-ai/modelcontextprotocol
    icon: https://avatars.githubusercontent.com/u/110299016?s=200&v=4
    tools:
      - name: perplexity_ask
      - name: perplexity_reason
      - name: perplexity_research
    secrets:
      - name: perplexity-ask.api_key
        env: PERPLEXITY_API_KEY
        example: YOUR_PERPLEXITY_API_KEY
    prompts: 0
    resources: {}
    metadata:
      pulls: 23189
      stars: 14
      githubStars: 1633
      category: devops
      tags:
        - perplexity-ask
        - devops
      license: MIT License
      owner: perplexityai
  pia:
    description: An MCP server to help make U.S. Government open datasets AI-friendly.
    title: Program Integrity Alliance
    type: server
    dateAdded: "2025-08-20T06:26:55Z"
    image: mcp/pia@sha256:679aaee3fb310bd9e08c0abbfdc10c8b3b43ffa53fe6c5039d8f5ef81d01728d
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/pia.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/pia.json
    source: https://github.com/Program-Integrity-Alliance/pia-mcp-local/tree/main
    upstream: https://github.com/Program-Integrity-Alliance/pia-mcp-local
    icon: http://programintegrity.org/wp-content/uploads/2025/08/docker-mcp-pia-icon-512.png
    tools:
      - name: pia_search_content
      - name: pia_search_content_facets
      - name: pia_search_titles
      - name: pia_search_titles_facets
    secrets:
      - name: pia.api-key
        env: PIA_API_KEY
        example: pia_5cFd9jtG3zbY4VpREewTP17uzdfnvMt8_3m778O2dv8
    prompts: 0
    resources: {}
    metadata:
      pulls: 568
      stars: 1
      githubStars: 1
      category: ai
      tags:
        - ai
      license: MIT License
      owner: Program-Integrity-Alliance
  pinecone:
    description: Pinecone Assistant MCP server.
    title: Pinecone Assistant
    type: server
    dateAdded: "2025-06-05T06:44:51Z"
    image: mcp/pinecone@sha256:bec1d8853fb679c33f3115a2b0d27f5d6854e17a20cd481ce4d2cb2e8506092d
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/pinecone.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/pinecone.json
    source: https://github.com/pinecone-io/assistant-mcp/tree/main
    upstream: https://github.com/pinecone-io/assistant-mcp
    icon: https://avatars.githubusercontent.com/u/54333248?v=4
    tools:
      - name: assistant_context
    secrets:
      - name: pinecone.api_key
        env: PINECONE_API_KEY
        example: <YOUR_PINECONE_API_KEY_HERE>
    env:
      - name: PINECONE_ASSISTANT_HOST
        value: '{{pinecone.assistant_host}}'
    prompts: 0
    resources: {}
    config:
      - name: pinecone
        description: Configure the connection to Pinecone Assistant
        type: object
        properties:
          assistant_host:
            type: string
    metadata:
      pulls: 1705
      stars: 3
      githubStars: 38
      category: database
      tags:
        - database
        - machine-learning
      license: MIT License
      owner: pinecone-io
  playwright:
    description: Playwright MCP server.
    title: Playwright
    type: server
    longLived: true
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/playwright@sha256:779f7a4f7efd7aae698d2d113370a5205becd093e40c23db2f9a753d235a522d
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/playwright.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/playwright.json
    source: https://github.com/microsoft/playwright-mcp/tree/main
    upstream: https://github.com/microsoft/playwright-mcp
    icon: https://avatars.githubusercontent.com/u/6154722?v=4
    tools:
      - name: browser_click
      - name: browser_close
      - name: browser_console_messages
      - name: browser_drag
      - name: browser_evaluate
      - name: browser_file_upload
      - name: browser_fill_form
      - name: browser_handle_dialog
      - name: browser_hover
      - name: browser_install
      - name: browser_navigate
      - name: browser_navigate_back
      - name: browser_network_requests
      - name: browser_press_key
      - name: browser_resize
      - name: browser_select_option
      - name: browser_snapshot
      - name: browser_tabs
      - name: browser_take_screenshot
      - name: browser_type
      - name: browser_wait_for
    prompts: 0
    resources: {}
    metadata:
      pulls: 133593
      stars: 23
      githubStars: 20931
      category: devops
      tags:
        - playwright
        - devops
      license: Apache License 2.0
      owner: microsoft
  playwright-mcp-server:
    description: "Playwright Model Context Protocol Server - Tool to automate Browsers and APIs in Claude Desktop, Cline, Cursor IDE and More \U0001F50C."
    title: ExecuteAutomation Playwright MCP
    type: server
    dateAdded: "2025-07-21T12:46:15Z"
    image: mcp/mcp-playwright@sha256:5ffcdfc3d929758be1a4f951b7413ff4828a10311e735b24bee3367469959004
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/playwright-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/playwright-mcp-server.json
    source: https://github.com/executeautomation/mcp-playwright/tree/main
    upstream: https://github.com/executeautomation/mcp-playwright
    icon: https://avatars.githubusercontent.com/u/10337030?v=4
    tools:
      - name: clear_codegen_session
      - name: end_codegen_session
      - name: get_codegen_session
      - name: playwright_assert_response
      - name: playwright_click
      - name: playwright_click_and_switch_tab
      - name: playwright_close
      - name: playwright_console_logs
      - name: playwright_custom_user_agent
      - name: playwright_delete
      - name: playwright_drag
      - name: playwright_evaluate
      - name: playwright_expect_response
      - name: playwright_fill
      - name: playwright_get
      - name: playwright_get_visible_html
      - name: playwright_get_visible_text
      - name: playwright_go_back
      - name: playwright_go_forward
      - name: playwright_hover
      - name: playwright_iframe_click
      - name: playwright_iframe_fill
      - name: playwright_navigate
      - name: playwright_patch
      - name: playwright_post
      - name: playwright_press_key
      - name: playwright_put
      - name: playwright_save_as_pdf
      - name: playwright_screenshot
      - name: playwright_select
      - name: playwright_upload_file
      - name: start_codegen_session
    volumes:
      - '{{playwright-mcp-server.data}}:{{playwright-mcp-server.data}}'
    prompts: 0
    resources: {}
    config:
      - name: playwright-mcp-server
        description: data location
        type: object
        properties:
          data:
            type: string
    metadata:
      pulls: 2199
      githubStars: 4860
      category: ai
      tags:
        - ai
      license: MIT License
      owner: executeautomation
  pluggedin-mcp-proxy:
    description: A unified MCP proxy that aggregates multiple MCP servers into one interface, enabling seamless tool discovery and management across all your AI interactions. Manage all your MCP servers from a single connection point with RAG capabilities and real-time notifications.
    title: Plugged.in MCP Proxy
    type: server
    dateAdded: "2025-07-01T14:14:18Z"
    image: mcp/pluggedin-mcp-proxy@sha256:2c22cf0ef264bfb71c65f2aaa9b7d90ef9fe8b7632bbc1562b15716f4adca7a8
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/pluggedin-mcp-proxy.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/pluggedin-mcp-proxy.json
    source: https://github.com/VeriTeknik/pluggedin-mcp-proxy/tree/main
    upstream: https://github.com/VeriTeknik/pluggedin-mcp-proxy
    icon: https://www.plugged.in/favicon.ico
    tools:
      - name: pluggedin_ask_knowledge_base
      - name: pluggedin_delete_notification
      - name: pluggedin_discover_tools
      - name: pluggedin_list_notifications
      - name: pluggedin_mark_notification_done
      - name: pluggedin_send_notification
    secrets:
      - name: pluggedin-mcp-proxy.pluggedin_api_key
        env: PLUGGEDIN_API_KEY
        example: YOUR_PLUGGEDIN_API_KEY
    env:
      - name: PLUGGEDIN_API_BASE_URL
        value: '{{pluggedin-mcp-proxy.pluggedin_api_base_url}}'
    prompts: 0
    resources: {}
    config:
      - name: pluggedin-mcp-proxy
        description: Configure your Plugged.in API connection. Get your API key from https://plugged.in in the API Keys section.
        type: object
        properties:
          pluggedin_api_base_url:
            type: string
            description: Base URL for the Plugged.in API (optional, defaults to https://plugged.in for cloud or http://localhost:12005 for self-hosted)
    metadata:
      pulls: 1661
      stars: 2
      githubStars: 93
      category: productivity
      tags:
        - productivity
        - proxy
        - management
        - tools
        - ai
      license: Apache License 2.0
      owner: VeriTeknik
  polar-signals:
    description: MCP server for Polar Signals Cloud continuous profiling platform, enabling AI assistants to analyze CPU performance, memory usage, and identify optimization opportunities in production systems.
    title: Polar Signals
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/polar-signals.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/polar-signals.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://api.polarsignals.com/api/mcp/
      headers:
        Authorization: "Bearer ${POLAR_SIGNALS_API_KEY}"
    icon: https://www.google.com/s2/favicons?domain=polarsignals.com&sz=64
    tools: []
    secrets:
      - name: polar-signals.api_key
        env: POLAR_SIGNALS_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: devops
      tags:
        - devops
        - profiling
        - performance
        - remote
      license: Apache License 2.0
      owner: docker
  pomodash:
    description: Connect your AI assistant to PomoDash for seamless task and project management.
    title: PomoDash
    type: server
    dateAdded: "2025-09-08T19:03:35Z"
    image: mcp/pomodash@sha256:bb9539723f2ab2063fac957ad0eecb3389960052ff8c10b6ac391572af10fd93
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/pomodash.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/pomodash.json
    source: https://github.com/dannyytv/pomodash-mcp-server/tree/main
    upstream: https://github.com/dannyytv/pomodash-mcp-server
    icon: https://mindsnapz.de/wp-content/uploads/2025/09/PomoDash-Logo-512-x-512-px.png
    tools:
      - name: create_category
      - name: create_note
      - name: create_note_for_project
      - name: create_note_for_task
      - name: create_task
      - name: create_task_for_project
      - name: delete_note
      - name: delete_task
      - name: list_categories
      - name: list_note_references
      - name: list_notes
      - name: list_tasks
      - name: update_note
      - name: update_task
    secrets:
      - name: pomodash.api_key
        env: POMODASH_API_KEY
        example: pmk_abc123your_real_key_here
    env:
      - name: POMODASH_API_URL
        value: https://mcp.pomodash.mindsnapz.de
    prompts: 0
    resources: {}
    metadata:
      pulls: 204
      githubStars: 1
      category: productivity
      tags:
        - tasks
        - productivity
        - pomodoro
        - notes
        - projects
        - planning
      license: MIT License
      owner: DannyyTv
  postgres:
    description: Connect with read-only access to PostgreSQL databases. This server enables LLMs to inspect database schemas and execute read-only queries.
    title: PostgreSQL readonly (Archived)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/postgres@sha256:b72c08f19e864b3e8beea8e90d048b9271924e704113345a29683f6d1e95a8f0
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/postgres.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/postgres.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/177543?s=200&v=4
    tools:
      - name: query
    secrets:
      - name: postgres.url
        env: POSTGRES_URL
        example: postgresql://host.docker.internal:5432/mydb
    command:
      - $POSTGRES_URL
    prompts: 0
    resources: {}
    metadata:
      pulls: 131965
      stars: 29
      githubStars: 69195
      category: database
      tags:
        - postgres
        - database
      license: MIT License
      owner: modelcontextprotocol
  postman:
    description: Postman's MCP server connects AI agents, assistants, and chatbots directly to your APIs on Postman. Use natural language to prompt AI to automate work across your Postman collections, environments, workspaces, and more.
    title: Postman MCP server
    type: server
    dateAdded: "2025-09-11T17:03:42Z"
    image: mcp/postman@sha256:c0da82f3b69203a898f2ccce3a3b875255b2e4cff818b073412497b5c4954ea3
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/postman.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/postman.json
    source: https://github.com/postmanlabs/postman-mcp-server/tree/main
    upstream: https://github.com/postmanlabs/postman-mcp-server
    icon: https://voyager.postman.com/logo/postman-logo-icon-orange.svg
    tools:
      - name: createCollection
      - name: createCollectionRequest
      - name: createCollectionResponse
      - name: createEnvironment
      - name: createMock
      - name: createSpec
      - name: createSpecFile
      - name: createWorkspace
      - name: duplicateCollection
      - name: generateCollection
      - name: generateSpecFromCollection
      - name: getAllSpecs
      - name: getAuthenticatedUser
      - name: getCollection
      - name: getCollections
      - name: getEnvironment
      - name: getEnvironments
      - name: getGeneratedCollectionSpecs
      - name: getMock
      - name: getMocks
      - name: getSpec
      - name: getSpecCollections
      - name: getSpecDefinition
      - name: getSpecFile
      - name: getSpecFiles
      - name: getStatusOfAnAsyncApiTask
      - name: getTaggedEntities
      - name: getWorkspace
      - name: getWorkspaces
      - name: publishMock
      - name: putCollection
      - name: putEnvironment
      - name: syncCollectionWithSpec
      - name: syncSpecWithCollection
      - name: updateMock
      - name: updateSpecFile
      - name: updateSpecProperties
      - name: updateWorkspace
    secrets:
      - name: postman.postman-api-key
        env: POSTMAN_API_KEY
        example: <POSTMAN_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      pulls: 1408
      stars: 1
      githubStars: 48
      category: devops
      tags:
        - devops
      license: Apache License 2.0
      owner: postmanlabs
  pref-editor:
    description: Pref Editor is a tool for viewing and editing Android app preferences during development.
    title: Pref Editor
    type: server
    dateAdded: "2025-07-01T14:14:18Z"
    image: mcp/pref-editor@sha256:8b515464425127b8272d253d0b77a1835f18c18df26673d53ce0e7527cf7fd66
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/pref-editor.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/pref-editor.json
    source: https://github.com/charlesmuchene/pref-editor-mcp-server/tree/main
    upstream: https://github.com/charlesmuchene/pref-editor-mcp-server
    icon: https://raw.githubusercontent.com/charlesmuchene/pref-editor-mcp-server/refs/heads/main/logo.png
    tools:
      - name: add_preference
      - name: change_preference
      - name: delete_preference
      - name: devices
      - name: list_apps
      - name: list_files
      - name: read_preferences
    prompts: 0
    resources: {}
    metadata:
      pulls: 1054
      githubStars: 2
      category: devops
      tags:
        - android preferences
        - android development
        - preferences-datastore
        - shared-preferences
      license: Apache License 2.0
      owner: charlesmuchene
  prometheus:
    description: A Model Context Protocol (MCP) server that enables AI assistants to query and analyze Prometheus metrics through standardized interfaces. Connect to your Prometheus instance to retrieve metrics, perform queries, and gain insights into your system's performance and health.
    title: Prometheus
    type: server
    dateAdded: "2025-09-02T20:44:02Z"
    image: ghcr.io/pab1it0/prometheus-mcp-server@sha256:31e0c588c94ae5d024bc03ba29c4c3648440802eb8ff3926f4a2581d57f78374
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/prometheus.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/prometheus.json
    source: https://github.com/pab1it0/prometheus-mcp-server/tree/main
    upstream: https://github.com/pab1it0/prometheus-mcp-server
    icon: https://upload.wikimedia.org/wikipedia/commons/3/38/Prometheus_software_logo.svg
    tools:
      - name: execute_query
      - name: execute_range_query
      - name: get_metric_metadata
      - name: get_targets
      - name: health_check
      - name: list_metrics
    env:
      - name: PROMETHEUS_URL
        value: '{{prometheus.prometheus_url}}'
    prompts: 0
    resources: {}
    config:
      - name: prometheus
        description: Configure the connection to your Prometheus server
        type: object
        properties:
          prometheus_url:
            type: string
            description: The URL of your Prometheus server
        required:
          - prometheus_url
    metadata:
      githubStars: 232
      category: monitoring
      tags:
        - ai
        - devops
        - llm
        - model-context-protocol
        - prometheus
        - metrics
        - monitoring
        - observability
      license: MIT License
      owner: pab1it0
  quantconnect:
    description: The QuantConnect MCP Server is a bridge for AIs (such as Claude and OpenAI o3 Pro) to interact with our cloud platform. When equipped with our MCP, the AI can perform tasks on your behalf through our API such as updating projects, writing strategies, backtesting, and deploying strategies to production live-trading.
    title: QuantConnect MCP Server
    type: server
    dateAdded: "2025-09-17T06:19:29Z"
    image: mcp/quantconnect@sha256:39b2c063f71fb391d90ed103afc4fc8c492eeb662250e22bdcd29c960d82accd
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/quantconnect.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/quantconnect.json
    source: https://github.com/QuantConnect/mcp-server/tree/master
    upstream: https://github.com/QuantConnect/mcp-server
    icon: https://avatars.githubusercontent.com/u/3912814?v=4
    tools:
      - name: abort_optimization
      - name: authorize_connection
      - name: broadcast_live_command
      - name: check_initialization_errors
      - name: check_syntax
      - name: complete_code
      - name: create_backtest
      - name: create_compile
      - name: create_file
      - name: create_live_algorithm
      - name: create_live_command
      - name: create_optimization
      - name: create_project
      - name: create_project_collaborator
      - name: delete_backtest
      - name: delete_file
      - name: delete_object
      - name: delete_optimization
      - name: delete_project
      - name: delete_project_collaborator
      - name: enhance_error_message
      - name: estimate_optimization_time
      - name: liquidate_live_algorithm
      - name: list_backtests
      - name: list_live_algorithms
      - name: list_object_store_files
      - name: list_optimizations
      - name: list_projects
      - name: lock_project_with_collaborators
      - name: patch_file
      - name: read_account
      - name: read_backtest
      - name: read_backtest_chart
      - name: read_backtest_insights
      - name: read_backtest_orders
      - name: read_compile
      - name: read_file
      - name: read_latest_mcp_server_version
      - name: read_lean_versions
      - name: read_live_algorithm
      - name: read_live_chart
      - name: read_live_insights
      - name: read_live_logs
      - name: read_live_orders
      - name: read_live_portfolio
      - name: read_mcp_server_version
      - name: read_object_properties
      - name: read_object_store_file_download_url
      - name: read_object_store_file_job_id
      - name: read_optimization
      - name: read_project
      - name: read_project_collaborators
      - name: read_project_nodes
      - name: search_quantconnect
      - name: stop_live_algorithm
      - name: update_backtest
      - name: update_code_to_pep8
      - name: update_file_contents
      - name: update_file_name
      - name: update_optimization
      - name: update_project
      - name: update_project_collaborator
      - name: update_project_nodes
      - name: upload_object
    env:
      - name: QUANTCONNECT_USER_ID
        value: '{{quantconnect.quantconnectuserid}}'
      - name: QUANTCONNECT_API_TOKEN
        value: '{{quantconnect.quantconnectapitoken}}'
      - name: AGENT_NAME
        value: MCP Server
    prompts: 0
    resources: {}
    config:
      - name: quantconnect
        description: Configure the connection to QuantConnect MCP Server
        type: object
        properties:
          quantconnectuserid:
            type: string
          quantconnectapitoken:
            type: string
          agentname:
            type: string
    metadata:
      pulls: 161
      stars: 1
      githubStars: 37
      category: finance
      tags:
        - finance
      license: Apache License 2.0
      owner: QuantConnect
  ramparts:
    description: A comprehensive security scanner for MCP servers with YARA rules and static analysis capabilities.
    title: Ramparts MCP Security Scanner
    type: server
    dateAdded: "2025-08-20T06:26:55Z"
    image: mcp/ramparts@sha256:1ddf4303800edb4c521a5275ba8de8054ac895677624dd20aed98480db00c494
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/ramparts.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/ramparts.json
    source: https://github.com/getjavelin/ramparts/tree/main
    upstream: https://github.com/getjavelin/ramparts
    icon: https://raw.githubusercontent.com/getjavelin/ramparts/main/assets/ramparts.png
    tools:
      - name: scan
      - name: scan-config
    env:
      - name: RUST_LOG
        value: info
    prompts: 0
    resources: {}
    metadata:
      pulls: 589
      githubStars: 68
      category: security
      tags:
        - security
        - vulnerability-scanning
        - mcp-server-analysis
        - yara-rules
      license: Apache License 2.0
      owner: getjavelin
  razorpay:
    description: Razorpay's Official MCP Server.
    title: Razorpay
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/razorpay@sha256:c4218aaf8f9e57eb79afec3491861de98d142b7a40a7f1a13a9b4f03060f346b
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/razorpay.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/razorpay.json
    source: https://github.com/razorpay/razorpay-mcp-server/tree/main
    upstream: https://github.com/razorpay/razorpay-mcp-server
    icon: https://avatars.githubusercontent.com/u/7713209?v=4
    tools:
      - name: capture_payment
      - name: close_qr_code
      - name: create_instant_settlement
      - name: create_order
      - name: create_payment_link
      - name: create_qr_code
      - name: create_refund
      - name: fetch_all_instant_settlements
      - name: fetch_all_orders
      - name: fetch_all_payment_links
      - name: fetch_all_payments
      - name: fetch_all_payouts
      - name: fetch_all_qr_codes
      - name: fetch_all_refunds
      - name: fetch_all_settlements
      - name: fetch_instant_settlement_with_id
      - name: fetch_multiple_refunds_for_payment
      - name: fetch_order
      - name: fetch_order_payments
      - name: fetch_payment
      - name: fetch_payment_card_details
      - name: fetch_payment_link
      - name: fetch_payments_for_qr_code
      - name: fetch_payout_with_id
      - name: fetch_qr_code
      - name: fetch_qr_codes_by_customer_id
      - name: fetch_qr_codes_by_payment_id
      - name: fetch_refund
      - name: fetch_settlement_recon_details
      - name: fetch_settlement_with_id
      - name: fetch_specific_refund_for_payment
      - name: fetch_tokens
      - name: initiate_payment
      - name: payment_link_notify
      - name: payment_link_upi_create
      - name: resend_otp
      - name: submit_otp
      - name: update_order
      - name: update_payment
      - name: update_payment_link
      - name: update_refund
    secrets:
      - name: razorpay.key_secret
        env: RAZORPAY_KEY_SECRET
        example: your_razorpay_key_secret
    env:
      - name: RAZORPAY_KEY_ID
        value: '{{razorpay.key_id}}'
    prompts: 0
    resources: {}
    config:
      - name: razorpay
        description: Configure the connection to Razorpay
        type: object
        properties:
          key_id:
            type: string
        required:
          - key_id
    metadata:
      pulls: 2200
      stars: 1
      githubStars: 205
      category: devops
      tags:
        - razorpay
        - devops
      license: MIT License
      owner: razorpay
  redis:
    description: Access to Redis database operations.
    title: Redis
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/redis@sha256:2ae92c81fe4c7f8d3c220c588a1bbb7c3c18d9101f2155057bff21e8e5025c62
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/redis.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/redis.json
    source: https://github.com/redis/mcp-redis/tree/main
    upstream: https://github.com/redis/mcp-redis
    icon: https://avatars.githubusercontent.com/u/1529926?v=4
    tools:
      - name: client_list
      - name: create_vector_index_hash
      - name: dbsize
      - name: delete
      - name: expire
      - name: get
      - name: get_index_info
      - name: get_indexed_keys_number
      - name: get_indexes
      - name: get_vector_from_hash
      - name: hdel
      - name: hexists
      - name: hget
      - name: hgetall
      - name: hset
      - name: info
      - name: json_del
      - name: json_get
      - name: json_set
      - name: llen
      - name: lpop
      - name: lpush
      - name: lrange
      - name: publish
      - name: rename
      - name: rpop
      - name: rpush
      - name: sadd
      - name: scan_all_keys
      - name: scan_keys
      - name: set
      - name: set_vector_in_hash
      - name: smembers
      - name: srem
      - name: subscribe
      - name: type
      - name: unsubscribe
      - name: vector_search_hash
      - name: xadd
      - name: xdel
      - name: xrange
      - name: zadd
      - name: zrange
      - name: zrem
    secrets:
      - name: redis.password
        env: REDIS_PWD
        example: ""
    env:
      - name: REDIS_HOST
        value: '{{redis.host}}'
      - name: REDIS_PORT
        value: '{{redis.port}}'
      - name: REDIS_USERNAME
        value: '{{redis.username}}'
      - name: REDIS_SSL
        value: '{{redis.ssl}}'
      - name: REDIS_CA_PATH
        value: '{{redis.ca_path}}'
      - name: REDIS_SSL_KEYFILE
        value: '{{redis.ssl_keyfile}}'
      - name: REDIS_SSL_CERTFILE
        value: '{{redis.ssl_certfile}}'
      - name: REDIS_CERT_REQS
        value: '{{redis.cert_reqs}}'
      - name: REDIS_CA_CERTS
        value: '{{redis.ca_certs}}'
      - name: REDIS_CLUSTER_MODE
        value: '{{redis.cluster_mode}}'
    prompts: 0
    resources: {}
    config:
      - name: redis
        description: Configure the connection to Redis
        type: object
        properties:
          host:
            type: string
          port:
            type: integer
          username:
            type: string
          ssl:
            type: boolean
          ca_path:
            type: string
          ssl_keyfile:
            type: string
          ssl_certfile:
            type: string
          cert_reqs:
            type: string
          ca_certs:
            type: string
          cluster_mode:
            type: boolean
    metadata:
      pulls: 14059
      stars: 11
      githubStars: 260
      category: database
      tags:
        - redis
        - database
      license: MIT License
      owner: redis
  redis-cloud:
    description: MCP Server for Redis Cloud's API, allowing you to manage your Redis Cloud resources using natural language.
    title: Redis Cloud
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/redis-cloud@sha256:ebea14d1170f514da2f74d026bd230f727bf93b08a19e4428cdd3a0e5f799fc6
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/redis-cloud.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/redis-cloud.json
    source: https://github.com/redis/mcp-redis-cloud/tree/main
    upstream: https://github.com/redis/mcp-redis-cloud
    icon: https://avatars.githubusercontent.com/u/1529926?s=200&v=4
    tools:
      - name: create-essential-database
      - name: create-essential-subscription
      - name: create-pro-database
      - name: create-pro-subscription
      - name: delete-essential-subscription
      - name: get-current-account
      - name: get-current-payment-methods
      - name: get-database-modules
      - name: get-essential-databases
      - name: get-essential-subscription-by-id
      - name: get-essential-subscriptions
      - name: get-essentials-plans
      - name: get-pro-databases
      - name: get-pro-plans-regions
      - name: get-pro-subscription
      - name: get-pro-subscriptions
      - name: get-task-by-id
      - name: get-tasks
    secrets:
      - name: redis-cloud.secret_key
        env: SECRET_KEY
        example: <redis_cloud_api_secret_key>
    env:
      - name: API_KEY
        value: '{{redis-cloud.api_key}}'
    prompts: 0
    resources: {}
    config:
      - name: redis-cloud
        description: Configure the connection to Redis Cloud
        type: object
        properties:
          api_key:
            type: string
        required:
          - api_key
    metadata:
      pulls: 2334
      stars: 1
      githubStars: 35
      category: database
      tags:
        - redis-cloud
        - database
      license: MIT License
      owner: redis
  ref:
    description: Ref powerful search tool connets your coding tools with documentation context. It includes an up-to-date index of public documentation and it can ingest your private documentation (eg. GitHub repos, PDFs) as well.
    title: Ref - up-to-date docs
    type: server
    dateAdded: "2025-09-12T18:02:36Z"
    image: mcp/ref-tools-mcp@sha256:0f53745eeca334de60b309745aba581caf7630d53310cb8d4394b00643c5bbaf
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/ref.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/ref.json
    source: https://github.com/ref-tools/ref-tools-mcp/tree/main
    upstream: https://github.com/ref-tools/ref-tools-mcp
    icon: https://avatars.githubusercontent.com/u/210568548?v=4
    tools:
      - name: ref_read_url
      - name: ref_search_documentation
    secrets:
      - name: ref.REF_API_KEY
        env: REF_API_KEY
        example: ref-abcdefghi123
    prompts: 0
    resources: {}
    metadata:
      pulls: 1657
      stars: 2
      githubStars: 612
      category: devops
      tags:
        - devops
        - documentation
      license: MIT License
      owner: ref-tools
  remote-mcp:
    description: Tools for finding remote MCP servers.
    title: Remote MCP
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/remote-mcp.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/remote-mcp.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.remote-mcp.com
    icon: https://www.google.com/s2/favicons?domain=remote-mcp.com&sz=64
    tools:
      - name: ListRemoteMCPServers
    prompts: 0
    resources: {}
    metadata:
      category: tools
      tags:
        - tools
        - mcp
        - directory
        - remote
      license: Apache License 2.0
      owner: docker
  render:
    description: Interact with your Render resources via LLMs.
    title: Render
    type: server
    dateAdded: "2025-05-23T20:08:35Z"
    image: mcp/render@sha256:e5500a609618576dd8b09cda71587987a4404438e0220a0e50b86b69845b8043
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/render.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/render.json
    source: https://github.com/render-oss/render-mcp-server/tree/main
    upstream: https://github.com/render-oss/render-mcp-server
    icon: https://avatars.githubusercontent.com/u/114033652?v=4
    tools:
      - name: create_key_value
      - name: create_postgres
      - name: create_static_site
      - name: create_web_service
      - name: get_deploy
      - name: get_key_value
      - name: get_metrics
      - name: get_postgres
      - name: get_selected_workspace
      - name: get_service
      - name: list_deploys
      - name: list_key_value
      - name: list_log_label_values
      - name: list_logs
      - name: list_postgres_instances
      - name: list_services
      - name: list_workspaces
      - name: query_render_postgres
      - name: select_workspace
      - name: update_environment_variables
      - name: update_static_site
      - name: update_web_service
    secrets:
      - name: render.api_key
        env: RENDER_API_KEY
        example: DUMMY
    prompts: 0
    resources: {}
    metadata:
      pulls: 2114
      stars: 1
      githubStars: 51
      category: devops
      tags:
        - render
        - devops
      license: Apache License 2.0
      owner: render-oss
  resend:
    description: Send emails directly from Cursor with this email sending MCP server.
    title: Send emails
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/resend@sha256:2a786579214e118992c62875fd81488fee01918b10b06b447beb1acd5824e8ed
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/resend.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/resend.json
    source: https://github.com/slimslenderslacks/mcp-send-email/tree/slim/docker
    upstream: https://github.com/resend/mcp-send-email
    icon: https://avatars.githubusercontent.com/u/109384852?s=200&v=4
    tools:
      - name: send-email
    secrets:
      - name: resend.api_key
        env: RESEND_API_KEY
        example: YOUR_RESEND_API_KEY
    env:
      - name: REPLY_TO_EMAIL_ADDRESSES
        value: '{{resend.reply_to}}'
      - name: SENDER_EMAIL_ADDRESS
        value: '{{resend.sender}}'
    prompts: 0
    resources: {}
    config:
      - name: resend
        description: Configure sender and reply email addresses
        type: object
        properties:
          reply_to:
            type: string
            description: comma separated list of reply to email addresses
          sender:
            type: string
            description: sender email address
        required:
          - reply_to
          - sender
    metadata:
      pulls: 3280
      stars: 5
      githubStars: 408
      category: communication
      tags:
        - resend
        - email
      owner: resend
  risken:
    description: RISKEN's official MCP Server.
    title: RISKEN
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/risken@sha256:2df37e7ad5ca173c269f4cad66cd80e23b62f9c4ea59147b71a4ac5a4b05da54
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/risken.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/risken.json
    source: https://github.com/ca-risken/risken-mcp-server/tree/main
    upstream: https://github.com/ca-risken/risken-mcp-server
    icon: https://avatars.githubusercontent.com/u/88366693?s=200&v=4
    tools:
      - name: archive_finding
      - name: get_project
      - name: search_alert
      - name: search_finding
    secrets:
      - name: risken.access_key
        env: RISKEN_ACCESS_TOKEN
        example: your_access_token
    env:
      - name: RISKEN_URL
        value: '{{risken.url}}'
    command:
      - stdio
    prompts: 0
    resources: {}
    config:
      - name: risken
        description: Configure the connection to Risken
        type: object
        properties:
          url:
            type: string
    metadata:
      pulls: 1882
      githubStars: 6
      category: devops
      tags:
        - risken
        - devops
      license: MIT License
      owner: ca-risken
  root:
    description: MCP server that provides container image vulnerability scanning and remediation capabilities through Root.io.
    title: Root.io Vulnerability Remediation MCP
    type: server
    dateAdded: "2025-07-10T19:06:20Z"
    image: mcp/root@sha256:f2627402e2ebc19228ac1136b17cffb476ec9d75a372eb8419cbfb5738a32ac8
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/root.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/root.json
    source: https://github.com/rootio-avr/mcp-proxy/tree/main
    upstream: https://github.com/rootio-avr/mcp-proxy
    icon: https://raw.githubusercontent.com/rootio-avr/mcp-proxy/refs/heads/main/assets/root-logo.svg
    tools:
      - name: create_registry_integration
      - name: get_image_remediation
      - name: get_remediation_continuity_summary
      - name: get_remediation_details_by_scan_id
      - name: get_remediation_status
      - name: get_user_info
      - name: list_remediation_continuity_summaries
      - name: list_unique_fqins
      - name: ping
      - name: registries_credentials_list
      - name: trigger_remediation
    secrets:
      - name: root.api_access_token
        env: API_ACCESS_TOKEN
        example: sk_your_access_token
    prompts: 0
    resources: {}
    metadata:
      pulls: 745
      stars: 5
      githubStars: 2
      category: security
      tags:
        - security
        - vulnerability
        - scanning
        - remediation
      license: MIT License
      owner: rootio-avr
  ros2:
    description: Python server implementing Model Context Protocol (MCP) for ROS2.
    title: WiseVision ROS2 MCP Server
    type: server
    dateAdded: "2025-09-15T16:12:49Z"
    image: mcp/ros2@sha256:380224f84e21b1d09bb97bbae901834eab54f06d565c1c7f9d5ac7a190bf45e4
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/ros2.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/ros2.json
    source: https://github.com/wise-vision/mcp_server_ros_2/tree/main
    upstream: https://github.com/wise-vision/mcp_server_ros_2
    icon: https://avatars.githubusercontent.com/u/85994630?v=4
    tools:
      - name: ros2_get_message_fields
      - name: ros2_get_messages
      - name: ros2_interface_list
      - name: ros2_service_call
      - name: ros2_service_list
      - name: ros2_topic_list
      - name: ros2_topic_publish
      - name: ros2_topic_subscribe
    prompts: 0
    resources: {}
    metadata:
      pulls: 210
      githubStars: 39
      category: devops
      tags:
        - devops
      license: Mozilla Public License 2.0
      owner: wise-vision
  rube:
    description: Access to Rube's catalog of remote MCP servers.
    title: Rube
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/rube.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/rube.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://rube.app/mcp
      headers:
        Authorization: "Bearer ${RUBE_API_KEY}"
    icon: https://www.google.com/s2/favicons?domain=composio.dev&sz=64
    tools: []
    secrets:
      - name: rube.api_key
        env: RUBE_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: tools
      tags:
        - tools
        - automation
        - remote
      license: Apache License 2.0
      owner: docker
  rust-mcp-filesystem:
    description: The Rust MCP Filesystem is a high-performance, asynchronous, and lightweight Model Context Protocol (MCP) server built in Rust for secure and efficient filesystem operations. Designed with security in mind, it operates in read-only mode by default and restricts clients from updating allowed directories via MCP Roots unless explicitly enabled, ensuring robust protection against unauthorized access. Leveraging asynchronous I/O, it delivers blazingly fast performance with a minimal resource footprint. Optimized for token efficiency, the Rust MCP Filesystem enables large language models (LLMs) to precisely target searches and edits within specific sections of large files and restrict operations by file size range, making it ideal for efficient file exploration, automation, and system integration.
    title: Blazing-fast, asynchronous MCP server for seamless filesystem operations.
    type: server
    dateAdded: "2025-09-24T20:01:26Z"
    image: mcp/rust-mcp-filesystem@sha256:487f4cb1d4e0ecefb4bba648988371b9dae1f162c405d7889cd28ffede8e1e05
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/rust-mcp-filesystem.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/rust-mcp-filesystem.json
    source: https://github.com/rust-mcp-stack/rust-mcp-filesystem/tree/main
    upstream: https://github.com/rust-mcp-stack/rust-mcp-filesystem
    icon: https://raw.githubusercontent.com/rust-mcp-stack/rust-mcp-filesystem/refs/heads/main/docs/_media/rust-mcp-filesystem.png
    tools:
      - name: calculate_directory_size
      - name: create_directory
      - name: directory_tree
      - name: edit_file
      - name: find_duplicate_files
      - name: find_empty_directories
      - name: get_file_info
      - name: head_file
      - name: head_file
      - name: list_allowed_directories
      - name: list_directory
      - name: list_directory_with_sizes
      - name: move_file
      - name: read_file_lines
      - name: read_media_file
      - name: read_multiple_media_files
      - name: read_multiple_text_files
      - name: read_text_file
      - name: search_files
      - name: search_files_content
      - name: unzip_file
      - name: write_file
      - name: zip_directory
      - name: zip_files
    env:
      - name: ENABLE_ROOTS
        value: '{{rust-mcp-filesystem.enable_roots}}'
      - name: ALLOW_WRITE
        value: '{{rust-mcp-filesystem.allow_write}}'
    command:
      - '{{rust-mcp-filesystem.allowed_directories|volume-target|into}}'
    volumes:
      - '{{rust-mcp-filesystem.allowed_directories|volume|into}}'
    disableNetwork: true
    prompts: 0
    resources: {}
    config:
      - name: rust-mcp-filesystem
        description: Configure rust-mcp-filesystem to allow access only to permitted directories.
        type: object
        properties:
          allow_write:
            type: boolean
            description: Enable read/write mode. If false, the app operates in read-only mode.
          enable_roots:
            type: boolean
            description: Enable dynamic directory access control via MCP client-side Roots.
          allowed_directories:
            type: array
            description: List of directories that rust-mcp-filesystem can access.
            items:
              type: string
    metadata:
      pulls: 144
      githubStars: 73
      category: productivity
      tags:
        - productivity
      license: MIT License
      owner: rust-mcp-stack
  schemacrawler-ai:
    description: The SchemaCrawler AI MCP Server enables natural language interaction with your database schema using an MCP client in "Agent" mode. It allows users to explore tables, columns, foreign keys, triggers, stored procedures and more simply by asking questions like "Explain the code for the interest calculation stored procedure". You can also ask it to help with SQL, since it knows your schema. This is ideal for developers, DBAs, and data analysts who want to streamline schema comprehension and query development without diving into dense documentation.
    title: SchemaCrawler AI
    type: server
    longLived: true
    dateAdded: "2025-09-02T20:44:02Z"
    image: mcp/schemacrawler-ai@sha256:529bcf70c268d5763dc817effcdd4561c6f9c53a08dc6884bee35b5df1659941
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/schemacrawler-ai.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/schemacrawler-ai.json
    source: https://github.com/schemacrawler/SchemaCrawler-AI/tree/docker-mcp-registry
    upstream: https://github.com/schemacrawler/SchemaCrawler-AI
    icon: https://avatars.githubusercontent.com/u/58572?v=4
    tools:
      - name: describe-routines
      - name: describe-tables
      - name: get-schemacrawler-version
      - name: lint
      - name: list
      - name: list-across-tables
      - name: server-information
      - name: table-sample
    secrets:
      - name: schemacrawler-ai.database_user
        env: SCHCRWLR_DATABASE_USER
        example: SA
      - name: schemacrawler-ai.database_password
        env: SCHCRWLR_DATABASE_PASSWORD
        example: super_S3cret
    env:
      - name: SCHCRWLR_JDBC_URL
        value: '{{schemacrawler-ai.url_connection.jdbc_url}}'
      - name: SCHCRWLR_SERVER
        value: '{{schemacrawler-ai.server_connection.server}}'
      - name: SCHCRWLR_HOST
        value: '{{schemacrawler-ai.server_connection.host}}'
      - name: SCHCRWLR_PORT
        value: '{{schemacrawler-ai.server_connection.port}}'
      - name: SCHCRWLR_DATABASE
        value: '{{schemacrawler-ai.server_connection.database}}'
      - name: SCHCRWLR_INFO_LEVEL
        value: '{{schemacrawler-ai.general.info_level}}'
      - name: SCHCRWLR_LOG_LEVEL
        value: '{{schemacrawler-ai.general.log_level}}'
    volumes:
      - '{{schemacrawler-ai.volume.host_share}}:/share'
    prompts: 0
    resources: {}
    config:
      - name: schemacrawler-ai
        description: Configure SchemaCrawler AI and its connection to the database
        type: object
        properties:
          url_connection:
            type: object
            properties:
              jdbc_url:
                type: string
                description: --url JDBC URL for database connection
            required:
              - jdbc_url
          server_connection:
            type: object
            properties:
              server:
                type: string
                description: --server SchemaCrawler database plugin
              host:
                type: string
                description: --host Database host (optional)
              port:
                type: integer
                description: --port Database port (optional)
              database:
                type: string
                description: --database Database to connect to (optional)
            required:
              - server
          general:
            type: object
            properties:
              info_level:
                type: string
                description: --info-level How much database metadata to retrieve
                default: standard
              log_level:
                type: string
            required:
              - info_level
          volume:
            type: object
            properties:
              host_share:
                type: string
                description: Host volume to map within the Docker container
            required:
              - host_share
        anyOf:
          - required:
              - url_connection
          - required:
              - server_connection
    metadata:
      pulls: 316
      stars: 1
      githubStars: 2
      category: database
      tags:
        - ai
        - database
      license: Other
      owner: schemacrawler
  schogini-mcp-image-border:
    description: This adds a border to an image and returns base64 encoded image.
    title: Schogini MCP Image Border
    type: server
    dateAdded: "2025-07-11T18:29:38Z"
    image: mcp/schogini_mcp_image_border@sha256:aadb75058ed149533d43a5011cf61f3daaed9787acdfe4082093c6ddc494d061
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/schogini-mcp-image-border.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/schogini-mcp-image-border.json
    source: https://github.com/schogini/schogini_mcp_image_border/tree/main
    upstream: https://github.com/schogini/schogini_mcp_image_border
    icon: https://d1yei2z3i6k35z.cloudfront.net/7429984/669a56c4ca69e_SCHOGINI-LOGO-ROUND.png
    tools:
      - name: add-two-numbers
      - name: image-border
      - name: image-meta
    prompts: 0
    resources: {}
    metadata:
      pulls: 785
      category: productivity
      tags:
        - productivity
      owner: schogini
  scrapegraph:
    description: ScapeGraph MCP Server.
    title: ScrapeGraph
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/scrapegraph@sha256:9005c47bdd7917294777ebeefe448da7e127b608e2006450f901452645a4fb1c
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/scrapegraph.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/scrapegraph.json
    source: https://github.com/ScrapeGraphAI/scrapegraph-mcp/tree/main
    upstream: https://github.com/ScrapeGraphAI/scrapegraph-mcp
    icon: https://avatars.githubusercontent.com/u/171017415?s=200&v=4
    tools:
      - name: markdownify
      - name: searchscraper
      - name: smartcrawler_fetch_results
      - name: smartcrawler_initiate
      - name: smartscraper
    secrets:
      - name: scrapegraph.api_key
        env: SGAI_API_KEY
        example: YOUR_SGAI_API_KEY
    prompts: 0
    resources: {}
    metadata:
      pulls: 3203
      stars: 4
      githubStars: 39
      category: devops
      tags:
        - scrapegraph
        - devops
      license: MIT License
      owner: ScrapeGraphAI
  scrapezy:
    description: A Model Context Protocol server for Scrapezy that enables AI models to extract structured data from websites.
    title: Scrapezy
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/scrapezy@sha256:7a19e9b36500d94ba48f9497aaa50fc7387e274ef53ca0f6f2c076444ff4b05a
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/scrapezy.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/scrapezy.json
    source: https://github.com/Scrapezy/mcp/tree/main
    upstream: https://github.com/Scrapezy/mcp
    icon: https://avatars.githubusercontent.com/u/196929482?s=200&v=4
    tools:
      - name: extract-structured-data
    secrets:
      - name: scrapezy.auth_token
        env: SCRAPEZY_API_KEY
        example: your_api_key
    prompts: 0
    resources: {}
    metadata:
      pulls: 2391
      stars: 3
      githubStars: 10
      category: devops
      tags:
        - scrapezy
        - devops
      license: MIT License
      owner: Scrapezy
  securenote-link-mcp-server:
    description: SecureNote.link MCP Server - allowing AI agents to securely share sensitive information through end-to-end encrypted notes.
    title: Securenote.link mcp server
    type: server
    dateAdded: "2025-07-08T13:38:25Z"
    image: mcp/securenote-link-mcp-server@sha256:68cb767e4ebb7d99ccbe8816dfbd37c599722d1278bac55618e440a9941dfc42
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/securenote-link-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/securenote-link-mcp-server.json
    source: https://github.com/jackalterman/securenote-link-MCP-server/tree/main
    upstream: https://github.com/jackalterman/securenote-link-MCP-server
    icon: https://avatars.githubusercontent.com/u/5723207?v=5
    tools:
      - name: check_api_health
      - name: get_instructions
      - name: retrieve_and_decrypt_secret
      - name: send_secure_note
      - name: send_secure_note_return_api_url_and_key
    prompts: 0
    resources: {}
    metadata:
      pulls: 996
      stars: 2
      category: communication
      tags:
        - communication
      owner: jackalterman
  semgrep:
    description: MCP server for using Semgrep to scan code for security vulnerabilities.
    title: Semgrep
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/semgrep.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/semgrep.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://mcp.semgrep.ai/mcp
    icon: https://www.google.com/s2/favicons?domain=semgrep.ai&sz=64
    tools:
      - name: semgrep_rule_schema
      - name: get_supported_languages
      - name: semgrep_findings
      - name: semgrep_scan_with_custom_rule
      - name: semgrep_scan
      - name: semgrep_scan_local
      - name: security_check
      - name: get_abstract_syntax_tree
    prompts: 0
    resources: {}
    metadata:
      category: security
      tags:
        - security
        - code-analysis
        - sast
        - remote
      license: Apache License 2.0
      owner: docker
  sentry:
    description: A Model Context Protocol server for retrieving and analyzing issues from Sentry.io. This server provides tools to inspect error reports, stacktraces, and other debugging information from your Sentry account.
    title: Sentry (Archived)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/sentry@sha256:f38467297a1ed273009e0ad85bd0fc9f4ce44578114be0f349d6333c5000558b
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/sentry.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/sentry.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24/src/sentry
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/1396951?s=200&v=4
    tools:
      - name: get_sentry_issue
    secrets:
      - name: sentry.auth_token
        env: SENTRY_AUTH_TOKEN
        example: YOUR_SENTRY_TOKEN
    command:
      - --auth-token
      - $SENTRY_AUTH_TOKEN
    prompts: 0
    resources: {}
    metadata:
      pulls: 4209
      stars: 5
      githubStars: 69195
      category: devops
      tags:
        - sentry
        - devops
      license: MIT License
      owner: modelcontextprotocol
  sequa:
    description: Stop stitching context for Copilot and Cursor. With Sequa MCP, your AI tools know your entire codebase and docs out of the box.
    title: Sequa.AI
    type: server
    dateAdded: "2025-08-11T20:20:11Z"
    image: mcp/sequa@sha256:f4d04cfe92573937c9cf149fe5c42bbc00acadb2032824161390ef6d2a6894ae
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/sequa.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/sequa.json
    source: https://github.com/sequa-ai/sequa-mcp/tree/main
    upstream: https://github.com/sequa-ai/sequa-mcp
    icon: https://avatars.githubusercontent.com/u/187640573?v=4
    tools:
      - name: system_context_bL5QTvje
    secrets:
      - name: sequa.api_key
        env: API_KEY
        example: your_sequa_api_key
    env:
      - name: MCP_SERVER_URL
        value: '{{sequa.mcp_server_url}}'
    prompts: 0
    resources: {}
    config:
      - name: sequa
        description: Configure the connection to Sequa.AI
        type: object
        properties:
          mcp_server_url:
            type: string
    metadata:
      pulls: 601
      stars: 1
      githubStars: 11
      category: devops
      tags:
        - search
        - ai
        - devops
      license: MIT License
      owner: sequa-ai
  sequentialthinking:
    description: Dynamic and reflective problem-solving through thought sequences.
    title: Sequential Thinking (Reference)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/sequentialthinking@sha256:cd3174b2ecf37738654cf7671fb1b719a225c40a78274817da00c4241f465e5f
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/sequentialthinking.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/sequentialthinking.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.6/src/sequentialthinking
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: sequentialthinking
    prompts: 0
    resources: {}
    metadata:
      pulls: 105033
      stars: 28
      githubStars: 69195
      category: ai
      tags:
        - mcp
        - ai
      license: MIT License
      owner: modelcontextprotocol
  short-io:
    description: Access to Short.io's link shortener and analytics tools.
    title: Short.io
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/short-io.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/short-io.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://ai-assistant.short.io/mcp
      headers:
        Authorization: "Bearer ${SHORT_IO_API_KEY}"
    icon: https://www.google.com/s2/favicons?domain=short.io&sz=64
    tools: []
    secrets:
      - name: short-io.api_key
        env: SHORT_IO_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: tools
      tags:
        - tools
        - url-shortener
        - analytics
        - remote
      license: Apache License 2.0
      owner: docker
  simplechecklist:
    description: 'Advanced SimpleCheckList with MCP server and SQLite database for comprehensive task management.  Features: • Complete project and task management system • Hierarchical organization (Projects → Groups → Task Lists → Tasks → Subtasks) • SQLite database for data persistence • RESTful API with comprehensive endpoints • MCP protocol compliance for AI assistant integration • Docker-optimized deployment with stability improvements  **v1.0.1 Update**: Enhanced Docker stability with improved container lifecycle management. Default mode optimized for containerized deployment with reliable startup and shutdown processes.  Perfect for AI assistants managing complex project workflows and task hierarchies.'
    title: SimpleCheckList MCP Server
    type: server
    dateAdded: "2025-09-19T06:18:27Z"
    image: mayurkakade/mcp-server:latest@sha256:9ff8953783bb5c50a367634669626587decbe37ea1d421a66e298a6e47961e27
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/simplechecklist.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/simplechecklist.json
    source: https://github.com/DevMayur/SimpleCheckList/tree/main
    upstream: https://github.com/DevMayur/SimpleCheckList
    icon: https://raw.githubusercontent.com/DevMayur/SimpleCheckList/main/icon.png
    tools:
      - name: list_projects
      - name: create_project
      - name: get_project
      - name: update_project
      - name: delete_project
      - name: list_groups
      - name: create_group
      - name: list_task_lists
      - name: create_task_list
      - name: list_tasks
      - name: create_task
      - name: toggle_task_completion
      - name: update_task
      - name: delete_task
      - name: list_subtasks
      - name: create_subtask
      - name: toggle_subtask_completion
      - name: delete_subtask
      - name: get_project_stats
      - name: get_all_tasks
    command:
      - --mode=backend
    prompts: 0
    resources: {}
    metadata:
      category: productivity
      tags:
        - productivity
        - task-management
        - checklist
        - sqlite
        - docker-stable
      owner: DevMayur
  singlestore:
    description: MCP server for interacting with SingleStore Management API and services.
    title: Singlestore
    type: server
    dateAdded: "2025-07-09T16:39:19Z"
    image: mcp/singlestore@sha256:84f5ce412167ad1783f9877cb69139fa871972ef99542994b9423059615eb9b7
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/singlestore.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/singlestore.json
    source: https://github.com/singlestore-labs/mcp-server-singlestore/tree/main
    upstream: https://github.com/singlestore-labs/mcp-server-singlestore
    icon: https://avatars.githubusercontent.com/u/79943160?v=4
    tools:
      - name: create_job_from_notebook
      - name: create_notebook_file
      - name: create_starter_workspace
      - name: delete_job
      - name: get_job
      - name: get_user_info
      - name: list_regions
      - name: list_sharedtier_regions
      - name: list_starter_workspaces
      - name: organization_info
      - name: resume_workspace
      - name: run_sql
      - name: terminate_starter_workspace
      - name: upload_notebook_file
      - name: workspace_groups_info
      - name: workspaces_info
    secrets:
      - name: singlestore.mcp_api_key
        env: MCP_API_KEY
        example: <MCP_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      pulls: 1081
      githubStars: 28
      category: database
      tags:
        - singlestore
        - database
      license: MIT License
      owner: singlestore-labs
  slack:
    description: Interact with Slack Workspaces over the Slack API.
    title: Slack (Archived)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/slack@sha256:4cc10c3f4bd988bd2dce40e3068fe38fa3b3bad1da99f9653eb5fa5cce35baa1
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/slack.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/slack.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/6911160?s=200&v=4
    tools:
      - name: slack_add_reaction
      - name: slack_get_channel_history
      - name: slack_get_thread_replies
      - name: slack_get_user_profile
      - name: slack_get_users
      - name: slack_list_channels
      - name: slack_post_message
      - name: slack_reply_to_thread
    secrets:
      - name: slack.bot_token
        env: SLACK_BOT_TOKEN
        example: xoxb-your-bot-token
    env:
      - name: SLACK_TEAM_ID
        value: '{{slack.team_id}}'
      - name: SLACK_CHANNEL_IDS
        value: '{{slack.channel_ids}}'
    prompts: 0
    resources: {}
    config:
      - name: slack
        description: Configure the connection to Slack
        type: object
        properties:
          team_id:
            type: string
          channel_ids:
            type: string
        required:
          - team_id
    metadata:
      pulls: 271183
      stars: 21
      githubStars: 69195
      category: communication
      tags:
        - slack
        - communication
      license: MIT License
      owner: modelcontextprotocol
  smartbear:
    description: MCP server for AI access to SmartBear tools, including BugSnag, Reflect, API Hub, PactFlow.
    title: SmartBear MCP Server
    type: server
    dateAdded: "2025-08-05T16:31:03Z"
    image: mcp/smartbear@sha256:2508e105f02beb3ef97e4558d450e24c1c0f9f17a6a438aa2c1d760b2cc0e183
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/smartbear.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/smartbear.json
    source: https://github.com/SmartBear/smartbear-mcp/tree/main
    upstream: https://github.com/SmartBear/smartbear-mcp
    icon: https://avatars.githubusercontent.com/u/1644671?s=200&v=4
    tools:
      - name: api_hub_create_portal
      - name: api_hub_create_portal_product
      - name: api_hub_delete_portal
      - name: api_hub_delete_portal_product
      - name: api_hub_get_portal
      - name: api_hub_get_portal_product
      - name: api_hub_list_portal_products
      - name: api_hub_list_portals
      - name: api_hub_update_portal
      - name: api_hub_update_portal_product
      - name: reflect_cancel_suite_execution
      - name: reflect_execute_suite
      - name: reflect_get_suite_execution_status
      - name: reflect_get_test_status
      - name: reflect_list_suite_executions
      - name: reflect_list_suites
      - name: reflect_list_tests
      - name: reflect_run_test
    secrets:
      - name: smartbear.bugsnag_auth_token
        env: BUGSNAG_AUTH_TOKEN
        example: <your-bugsnag-auth-token>
      - name: smartbear.reflect_api_token
        env: REFLECT_API_TOKEN
        example: <your-reflect-api-token>
      - name: smartbear.api_hub_api_key
        env: API_HUB_API_KEY
        example: <your-api-hub-api-key>
      - name: smartbear.pact_broker_token
        env: PACT_BROKER_TOKEN
        example: <your-pact-broker-token>
      - name: smartbear.pact_broker_password
        env: PACT_BROKER_PASSWORD
        example: <your-pact-broker-password>
    env:
      - name: BUGSNAG_PROJECT_API_KEY
        value: '{{smartbear.bugsnag_api_key}}'
      - name: BUGSNAG_ENDPOINT
        value: '{{smartbear.bugsnag_endpoint}}'
      - name: PACT_BROKER_BASE_URL
        value: '{{smartbear.pact_broker_base_url}}'
      - name: PACT_BROKER_USERNAME
        value: '{{smartbear.pact_broker_username}}'
    prompts: 0
    resources: {}
    config:
      - name: smartbear
        description: Configure the connection to SmartBear services
        type: object
        properties:
          bugsnag_api_key:
            type: string
          bugsnag_endpoint:
            type: string
          pact_broker_base_url:
            type: string
          pact_broker_username:
            type: string
    metadata:
      pulls: 769
      githubStars: 17
      category: devops
      tags:
        - smartbear
        - devops
        - api-testing
        - monitoring
      license: MIT License
      owner: SmartBear
  sonarqube:
    description: Interact with SonarQube Cloud, Server and Community build over the web API. Analyze code to identify quality and security issues.
    title: SonarQube
    type: server
    dateAdded: "2025-07-01T12:14:18Z"
    image: mcp/sonarqube@sha256:299e55e57c8196a4144e3e2d4ec2b1b002e5ccc650baa4a92118a76ae8bf000c
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/sonarqube.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/sonarqube.json
    source: https://github.com/SonarSource/sonarqube-mcp-server/tree/master
    upstream: https://github.com/SonarSource/sonarqube-mcp-server
    icon: https://avatars.githubusercontent.com/u/545988?s=200&v=4
    tools:
      - name: analyze_code_snippet
      - name: change_sonar_issue_status
      - name: create_webhook
      - name: get_component_measures
      - name: get_project_quality_gate_status
      - name: get_raw_source
      - name: get_scm_info
      - name: get_system_health
      - name: get_system_info
      - name: get_system_logs
      - name: get_system_status
      - name: list_languages
      - name: list_portfolios
      - name: list_quality_gates
      - name: list_rule_repositories
      - name: list_webhooks
      - name: ping_system
      - name: search_metrics
      - name: search_my_sonarqube_projects
      - name: search_sonar_issues_in_projects
      - name: show_rule
    secrets:
      - name: sonarqube.token
        env: SONARQUBE_TOKEN
        example: YOUR_SONARQUBE_TOKEN
    env:
      - name: SONARQUBE_URL
        value: '{{sonarqube.url}}'
      - name: SONARQUBE_ORG
        value: '{{sonarqube.org}}'
    prompts: 0
    resources: {}
    config:
      - name: sonarqube
        description: Configure the connection to SonarQube
        type: object
        properties:
          url:
            type: string
            description: URL of the SonarQube instance, to provide only for SonarQube Server or Community Build
          org:
            type: string
            description: Organization key for SonarQube Cloud, not required for SonarQube Server or Community Build
    metadata:
      pulls: 11486
      stars: 17
      githubStars: 104
      category: productivity
      tags:
        - sonarqube
      license: Other
      owner: SonarSource
  SQLite:
    description: Database interaction and business intelligence capabilities.
    title: SQLite (Archived)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/sqlite@sha256:efbc05ccace18df122f26b674bd1730c76ece716551df2b3961d519909c34696
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/SQLite.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/SQLite.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24/src/sqlite
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/48680494?v=4
    tools:
      - name: append_insight
      - name: create_table
      - name: describe_table
      - name: list_tables
      - name: read_query
      - name: write_query
    command:
      - --db-path
      - /mcp/db.sqlite
    volumes:
      - mcp-sqlite:/mcp
    prompts: 0
    resources: {}
    metadata:
      pulls: 14250
      stars: 14
      githubStars: 69195
      category: database
      tags:
        - sqlite
        - database
      license: MIT License
      owner: modelcontextprotocol
  stackgen:
    description: AI-powered DevOps assistant for managing cloud infrastructure and applications.
    title: StackGen
    type: server
    dateAdded: "2025-09-13T06:25:03Z"
    image: ghcr.io/stackgenhq/stackgen@sha256:4255fd7334a37b5ab6c36547aa432ae003620fb8bcc093868007b25213de5dce
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/stackgen.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/stackgen.json
    source: https://github.com/stackgenhq/homebrew-stackgen/tree/main
    upstream: https://github.com/stackgenhq/homebrew-stackgen
    icon: https://docs.stackgen.com/img/logo.svg
    tools: []
    secrets:
      - name: stackgen.api_key
        env: STACKGEN_TOKEN
        example: stackgen_abc123def456ghi789jkl012mno345pqr678stu901vwx
    env:
      - name: STACKGEN_URL
        value: '{{stackgen.url}}'
    command:
      - mcp
    prompts: 0
    resources: {}
    config:
      - name: stackgen
        description: Configure the connection to StackGen server
        type: object
        properties:
          url:
            type: string
            description: URL of your StackGen instance
        required:
          - url
    metadata:
      githubStars: 1
      category: devops
      tags:
        - stackgen
        - opentofu
      owner: stackgenhq
  stackhawk:
    description: A Model Context Protocol (MCP) server for integrating with StackHawk's security scanning platform. Provides security analytics, YAML configuration management, sensitive data/threat surface analysis, and anti-hallucination tools for LLMs.
    title: StackHawk
    type: server
    dateAdded: "2025-09-19T06:18:27Z"
    image: mcp/stackhawk@sha256:058c26ca70e33599bf387521667d599c8838c4cf5ffcb3e8016013fceeb358ac
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/stackhawk.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/stackhawk.json
    source: https://github.com/stackhawk/stackhawk-mcp/tree/feature/image-entrypoint
    upstream: https://github.com/stackhawk/stackhawk-mcp
    icon: https://avatars.githubusercontent.com/u/53230463?v=4
    tools:
      - name: analyze_sensitive_data_trends
      - name: create_stackhawk_config
      - name: generate_security_dashboard
      - name: generate_sensitive_data_summary
      - name: get_app_findings_for_triage
      - name: get_critical_sensitive_data
      - name: get_organization_info
      - name: get_sensitive_data
      - name: get_sensitive_data_report
      - name: get_stackhawk_scan_instructions
      - name: get_stackhawk_schema
      - name: list_applications
      - name: map_sensitive_data_surface
      - name: run_stackhawk_scan
      - name: search_vulnerabilities
      - name: setup_stackhawk_for_project
      - name: validate_field_exists
      - name: validate_stackhawk_config
    secrets:
      - name: stackhawk.api_key
        env: STACKHAWK_API_KEY
        example: <STACKHAWK_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      pulls: 105
      category: devops
      tags:
        - devops
        - stackhawk
        - appsec
      license: Other
      owner: stackhawk
  supadata:
    description: Official Supadata MCP Server - Adds powerful video & web scraping to Cursor, Claude and any other LLM clients.
    title: Supadata
    type: server
    dateAdded: "2025-08-11T20:20:11Z"
    image: ghcr.io/supadata-ai/mcp@sha256:064f49acddbaa4f86080116d6be7332de75f26a409d3e2f1954d87dca1521e2e
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/supadata.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/supadata.json
    source: https://github.com/supadata-ai/mcp/tree/main
    upstream: https://github.com/supadata-ai/mcp
    icon: https://avatars.githubusercontent.com/u/194430777?s=48&v=4
    tools:
      - name: supadata_check_crawl_status
      - name: supadata_check_transcript_status
      - name: supadata_crawl
      - name: supadata_map
      - name: supadata_scrape
      - name: supadata_transcript
    secrets:
      - name: supadata.api_key
        env: SUPADATA_API_KEY
        example: YOUR-API-KEY
    prompts: 0
    resources: {}
    metadata:
      githubStars: 13
      category: search
      tags:
        - supadata
        - transcript
        - scraping
        - youtube
        - tiktok
        - twitter
        - whisper
      license: MIT License
      owner: supadata-ai
  suzieq:
    description: MCP Server to interact with a SuzieQ network observability instance via its REST API.
    title: Suzieq MCP
    type: server
    dateAdded: "2025-06-11T14:18:50Z"
    image: mcp/suzieq-mcp@sha256:ea9f7d06053dc97bd1af1cc24636c3020ece91746323b6229560bf3d0a457200
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/suzieq.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/suzieq.json
    source: https://github.com/PovedaAqui/suzieq-mcp/tree/main
    upstream: https://github.com/PovedaAqui/suzieq-mcp
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: run_suzieq_show
      - name: run_suzieq_summarize
    secrets:
      - name: suzieq.api_key
        env: SUZIEQ_API_KEY
        example: none
    env:
      - name: SUZIEQ_API_ENDPOINT
        value: '{{suzieq.api_endpoint}}'
    prompts: 0
    resources: {}
    config:
      - name: suzieq
        description: Configure the connection to SuzieQ
        type: object
        properties:
          api_endpoint:
            type: string
    metadata:
      pulls: 968
      stars: 1
      githubStars: 3
      category: monitoring
      tags:
        - observability
      license: MIT License
      owner: PovedaAqui
  task-orchestrator:
    description: Model Context Protocol (MCP) server for comprehensive task and feature management, providing AI assistants with a structured, context-efficient way to interact with project data.
    title: Task orchestrator
    type: server
    dateAdded: "2025-07-21T12:46:15Z"
    image: ghcr.io/jpicklyk/task-orchestrator@sha256:a33dc82a0874111f33bbdffe3eaaf5c2acf7411159940069eefb0d3b717f2c2a
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/task-orchestrator.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/task-orchestrator.json
    source: https://github.com/jpicklyk/task-orchestrator/tree/main
    upstream: https://github.com/jpicklyk/task-orchestrator
    icon: https://avatars.githubusercontent.com/u/5747775?v=4
    tools:
      - name: add_section
      - name: add_template_section
      - name: apply_template
      - name: bulk_create_sections
      - name: bulk_delete_sections
      - name: bulk_update_sections
      - name: create_dependency
      - name: create_feature
      - name: create_project
      - name: create_task
      - name: create_template
      - name: delete_dependency
      - name: delete_feature
      - name: delete_project
      - name: delete_section
      - name: delete_task
      - name: delete_template
      - name: disable_template
      - name: enable_template
      - name: get_feature
      - name: get_overview
      - name: get_project
      - name: get_sections
      - name: get_task
      - name: get_task_dependencies
      - name: get_template
      - name: list_templates
      - name: reorder_sections
      - name: search_features
      - name: search_projects
      - name: search_tasks
      - name: update_feature
      - name: update_project
      - name: update_section
      - name: update_section_metadata
      - name: update_section_text
      - name: update_task
      - name: update_template_metadata
    volumes:
      - mcp-task-data:/app/data
    prompts: 0
    resources: {}
    metadata:
      githubStars: 81
      category: ai
      tags:
        - tasks
        - database
      license: MIT License
      owner: jpicklyk
  tavily:
    description: The Tavily MCP server provides seamless interaction with the tavily-search and tavily-extract tools, real-time web search capabilities through the tavily-search tool and Intelligent data extraction from web pages via the tavily-extract tool.
    title: Tavily
    type: server
    dateAdded: "2025-05-05T20:04:34Z"
    image: mcp/tavily@sha256:deb302515c6087da68547ac060492b72c12f0eeecbe6669ebcf26d9f929ab9dd
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/tavily.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/tavily.json
    source: https://github.com/tavily-ai/tavily-mcp/tree/main
    upstream: https://github.com/tavily-ai/tavily-mcp
    icon: https://avatars.githubusercontent.com/u/170207473?s=200&v=4
    tools:
      - name: tavily-crawl
      - name: tavily-extract
      - name: tavily-map
      - name: tavily-search
    secrets:
      - name: tavily.api_token
        env: TAVILY_API_KEY
        example: your-tavily-apikey-here
    prompts: 0
    resources: {}
    metadata:
      pulls: 13192
      stars: 8
      githubStars: 789
      category: search
      tags:
        - tavily
        - search
      license: MIT License
      owner: tavily-ai
  teamwork:
    description: Tools for Teamwork.com products.
    title: Teamwork
    type: server
    dateAdded: "2025-09-02T20:44:02Z"
    image: mcp/teamwork@sha256:ed24c3c553318b6c36e6281ef34e29060956aa99e0cedbb856cefae852ebbbc0
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/teamwork.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/teamwork.json
    source: https://github.com/teamwork/mcp/tree/main
    upstream: https://github.com/teamwork/mcp
    icon: https://avatars.githubusercontent.com/u/4037476?v=4
    tools:
      - name: twdesk-create_company
      - name: twdesk-create_customer
      - name: twdesk-create_message
      - name: twdesk-create_priority
      - name: twdesk-create_status
      - name: twdesk-create_tag
      - name: twdesk-create_ticket
      - name: twdesk-create_type
      - name: twdesk-get_company
      - name: twdesk-get_customer
      - name: twdesk-get_priority
      - name: twdesk-get_status
      - name: twdesk-get_tag
      - name: twdesk-get_ticket
      - name: twdesk-get_type
      - name: twdesk-get_user
      - name: twdesk-list_companies
      - name: twdesk-list_customers
      - name: twdesk-list_priorities
      - name: twdesk-list_statuses
      - name: twdesk-list_tags
      - name: twdesk-list_tickets
      - name: twdesk-list_types
      - name: twdesk-list_users
      - name: twdesk-update_company
      - name: twdesk-update_customer
      - name: twdesk-update_priority
      - name: twdesk-update_status
      - name: twdesk-update_tag
      - name: twdesk-update_ticket
      - name: twdesk-update_type
      - name: twprojects-add_project_member
      - name: twprojects-complete_timer
      - name: twprojects-create_comment
      - name: twprojects-create_company
      - name: twprojects-create_milestone
      - name: twprojects-create_notebook
      - name: twprojects-create_project
      - name: twprojects-create_tag
      - name: twprojects-create_task
      - name: twprojects-create_tasklist
      - name: twprojects-create_team
      - name: twprojects-create_timelog
      - name: twprojects-create_timer
      - name: twprojects-create_user
      - name: twprojects-get_comment
      - name: twprojects-get_company
      - name: twprojects-get_milestone
      - name: twprojects-get_notebook
      - name: twprojects-get_project
      - name: twprojects-get_tag
      - name: twprojects-get_task
      - name: twprojects-get_tasklist
      - name: twprojects-get_team
      - name: twprojects-get_timelog
      - name: twprojects-get_timer
      - name: twprojects-get_user
      - name: twprojects-get_user_me
      - name: twprojects-list_activities
      - name: twprojects-list_activities_by_project
      - name: twprojects-list_comments
      - name: twprojects-list_comments_by_file_version
      - name: twprojects-list_comments_by_milestone
      - name: twprojects-list_comments_by_notebook
      - name: twprojects-list_comments_by_task
      - name: twprojects-list_companies
      - name: twprojects-list_industries
      - name: twprojects-list_milestones
      - name: twprojects-list_milestones_by_project
      - name: twprojects-list_notebooks
      - name: twprojects-list_projects
      - name: twprojects-list_tags
      - name: twprojects-list_tasklists
      - name: twprojects-list_tasklists_by_project
      - name: twprojects-list_tasks
      - name: twprojects-list_tasks_by_project
      - name: twprojects-list_tasks_by_tasklist
      - name: twprojects-list_teams
      - name: twprojects-list_teams_by_company
      - name: twprojects-list_teams_by_project
      - name: twprojects-list_timelogs
      - name: twprojects-list_timelogs_by_project
      - name: twprojects-list_timelogs_by_task
      - name: twprojects-list_timers
      - name: twprojects-list_users
      - name: twprojects-list_users_by_project
      - name: twprojects-pause_timer
      - name: twprojects-resume_timer
      - name: twprojects-update_comment
      - name: twprojects-update_company
      - name: twprojects-update_milestone
      - name: twprojects-update_notebook
      - name: twprojects-update_project
      - name: twprojects-update_tag
      - name: twprojects-update_task
      - name: twprojects-update_tasklist
      - name: twprojects-update_team
      - name: twprojects-update_timelog
      - name: twprojects-update_timer
      - name: twprojects-update_user
      - name: twprojects-users_workload
    secrets:
      - name: teamwork.tw_mcp_bearer_token
        env: TW_MCP_BEARER_TOKEN
        example: <TW_MCP_BEARER_TOKEN>
        required: true
    prompts: 0
    resources: {}
    metadata:
      pulls: 627
      githubStars: 8
      category: productivity
      tags:
        - ai
        - artificial-intelligence
        - teamwork
      license: MIT License
      owner: Teamwork
  telnyx:
    description: Enables interaction with powerful telephony, messaging, and AI assistant APIs.
    title: Telnyx
    type: remote
    dateAdded: "2025-09-08T19:03:35Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/telnyx.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/telnyx.json
    source: ""
    remote:
      transport_type: streamable-http
      url: https://api.telnyx.com/v2/mcp
      headers:
        Authorization: "Bearer ${TELNYX_API_KEY}"
    icon: https://www.google.com/s2/favicons?domain=telnyx.com&sz=64
    tools: []
    secrets:
      - name: telnyx.api_key
        env: TELNYX_API_KEY
        example: <YOUR_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: communication
      tags:
        - communication
        - telephony
        - sms
        - remote
      license: Apache License 2.0
      owner: docker
  tembo:
    description: MCP server for Tembo Cloud's platform API.
    title: Tembo
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/tembo@sha256:178ea1dae888ff7ef335ef246cddea531c2177c4ec41442e7e056f4b99a78e6e
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/tembo.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/tembo.json
    source: https://github.com/tembo-io/mcp-server-tembo/tree/main
    upstream: https://github.com/tembo-io/mcp-server-tembo
    icon: https://avatars.githubusercontent.com/u/113815875?s=200&v=4
    tools:
      - name: ask_tembo
      - name: create_instance
      - name: delete_instance
      - name: get_all_apps
      - name: get_all_instances
      - name: get_app
      - name: get_instance
      - name: get_instance_schema
      - name: patch_instance
      - name: restore_instance
    secrets:
      - name: tembo.api_token
        env: TEMBO_API_KEY
        example: your-tembo-apikey-here
    prompts: 0
    resources: {}
    metadata:
      pulls: 1807
      githubStars: 7
      category: devops
      tags:
        - tembo
        - devops
      license: MIT License
      owner: tembo-io
  terraform:
    description: The Terraform MCP Server provides seamless integration with Terraform ecosystem, enabling advanced automation and interaction capabilities for Infrastructure as Code (IaC) development.
    title: Hashicorp Terraform
    type: server
    dateAdded: "2025-05-20T20:08:35Z"
    image: hashicorp/terraform-mcp-server@sha256:943d7c286269ccec9a187ca45d76fed4c8481c01ac18a29a18bebdecbc127c40
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/terraform.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/terraform.json
    source: https://github.com/hashicorp/terraform-mcp-server/tree/main
    upstream: https://github.com/hashicorp/terraform-mcp-server
    icon: https://avatars.githubusercontent.com/u/761456?v=4
    tools:
      - name: get_latest_module_version
      - name: get_latest_provider_version
      - name: get_module_details
      - name: get_policy_details
      - name: get_provider_details
      - name: search_modules
      - name: search_policies
      - name: search_providers
    prompts: 0
    resources: {}
    metadata:
      githubStars: 969
      category: devops
      tags:
        - hashicorp
        - terraform
      license: Mozilla Public License 2.0
      owner: hashicorp
  text-to-graphql:
    description: Transform natural language queries into GraphQL queries using an AI agent. Provides schema management, query validation, execution, and history tracking.
    title: Text-to-GraphQL
    type: server
    dateAdded: "2025-07-08T13:38:25Z"
    image: mcp/text-to-graphql@sha256:d260ee59e2fe08b444fea26fe935109cf0e6336c1677256c0274bdaa84e69997
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/text-to-graphql.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/text-to-graphql.json
    source: https://github.com/Arize-ai/text-to-graphql-mcp/tree/main
    upstream: https://github.com/Arize-ai/text-to-graphql-mcp
    icon: https://upload.wikimedia.org/wikipedia/commons/1/17/GraphQL_Logo.svg
    tools:
      - name: execute_graphql_query
      - name: generate_graphql_query
      - name: get_query_examples
      - name: get_query_history
      - name: validate_graphql_query
    secrets:
      - name: text-to-graphql.openai_api_key
        env: OPENAI_API_KEY
        example: sk-proj-xxx
      - name: text-to-graphql.graphql_endpoint
        env: GRAPHQL_ENDPOINT
        example: https://your-graphql-api.com/graphql
      - name: text-to-graphql.graphql_api_key
        env: GRAPHQL_API_KEY
        example: your_api_key_here
    prompts: 0
    resources: {}
    config:
      - name: text-to-graphql
        description: Configure API keys and model settings for text-to-graphql
        type: object
        properties:
          graphql_auth_type:
            type: string
            description: Authentication method for GraphQL API
          model_name:
            type: string
            description: OpenAI model to use
          model_temperature:
            type: number
            description: Model temperature for responses
    metadata:
      pulls: 859
      githubStars: 18
      category: devops
      tags:
        - graphql
        - ai
        - natural-language
        - api
        - query-generation
      license: Other
      owner: Arize-ai
  tigris:
    description: Tigris is a globally distributed S3-compatible object storage service that provides low latency anywhere in the world, enabling developers to store and access any amount of data for a wide range of use cases.
    title: Tigris Data
    type: server
    dateAdded: "2025-05-20T20:08:35Z"
    image: mcp/tigris@sha256:f183ed3aebced05aaeca109d20135c9972eefb77e2c1e822ee3a9e5a2cffcb7a
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/tigris.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/tigris.json
    source: https://github.com/tigrisdata/tigris-mcp-server/tree/main
    upstream: https://github.com/tigrisdata/tigris-mcp-server
    icon: https://avatars.githubusercontent.com/u/95787860?v=4
    tools:
      - name: tigris_create_bucket
      - name: tigris_delete_bucket
      - name: tigris_delete_object
      - name: tigris_get_object
      - name: tigris_get_signed_url_object
      - name: tigris_list_buckets
      - name: tigris_list_objects
      - name: tigris_put_object
      - name: tigris_put_object_from_path
      - name: tigris_upload_file_and_get_url
    secrets:
      - name: tigris.aws_secret_access_key
        env: AWS_SECRET_ACCESS_KEY
        example: tsec_xxxxxxxxxxxxxxxxxxx
    env:
      - name: AWS_ACCESS_KEY_ID
        value: '{{tigris.aws_access_key_id}}'
      - name: AWS_ENDPOINT_URL_S3
        value: '{{tigris.aws_endpoint_url_s3}}'
    prompts: 0
    resources: {}
    config:
      - name: tigris
        description: Configure the connection to Tigris
        type: object
        properties:
          aws_access_key_id:
            type: string
          aws_endpoint_url_s3:
            type: string
        required:
          - aws_access_key_id
          - aws_endpoint_url_s3
    metadata:
      pulls: 852
      githubStars: 3
      category: devops
      tags:
        - s3-storage
        - storage
        - tigris
        - tigris-data
      license: MIT License
      owner: tigrisdata
  time:
    description: Time and timezone conversion capabilities.
    title: Time (Reference)
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/time@sha256:9c46a918633fb474bf8035e3ee90ebac6bcf2b18ccb00679ac4c179cba0ebfcf
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/time.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/time.json
    source: https://github.com/modelcontextprotocol/servers/tree/2025.4.24/src/time
    upstream: https://github.com/modelcontextprotocol/servers
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
      - name: convert_time
      - name: get_current_time
    prompts: 0
    resources: {}
    metadata:
      pulls: 192978
      stars: 8
      githubStars: 69195
      category: devops
      tags:
        - time
        - devops
      license: MIT License
      owner: modelcontextprotocol
  triplewhale:
    description: Triplewhale MCP Server.
    title: Triplewhale
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/triplewhale@sha256:0d4702dce52759833481d5c6ae50848309608eb1448c8a13eeba04226461519a
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/triplewhale.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/triplewhale.json
    source: https://github.com/Triple-Whale/mcp-server-triplewhale/tree/master
    upstream: https://github.com/Triple-Whale/mcp-server-triplewhale
    icon: https://avatars.githubusercontent.com/u/79388081?s=200&v=4
    tools:
      - name: moby
    secrets:
      - name: triplewhale.api_key
        env: TRIPLEWHALE_API_KEY
        example: your-triplewhale-api-key-here
    prompts: 0
    resources: {}
    metadata:
      pulls: 1927
      githubStars: 3
      category: devops
      tags:
        - triplewhale
        - devops
      license: MIT License
      owner: Triple-Whale
  unreal-engine-mcp-server:
    description: A comprehensive Model Context Protocol (MCP) server that enables AI assistants to control Unreal Engine via Remote Control API. Built with TypeScript and designed for game development automation.
    title: Unreal Engine MCP Server
    type: server
    dateAdded: "2025-09-15T16:12:49Z"
    image: mcp/unreal-engine-mcp-server@sha256:d5ed05ccda9ce5c3671271644b61e3f8b7855cd62de02601af4af3cafa2f2cb8
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/unreal-engine-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/unreal-engine-mcp-server.json
    source: https://github.com/ChiR24/Unreal_mcp/tree/main
    upstream: https://github.com/ChiR24/Unreal_mcp
    icon: https://raw.githubusercontent.com/ChiR24/Unreal_mcp/main/Public/icon.png
    tools:
      - name: animation_physics
      - name: build_environment
      - name: console_command
      - name: control_actor
      - name: control_editor
      - name: create_effect
      - name: inspect
      - name: manage_asset
      - name: manage_blueprint
      - name: manage_level
      - name: manage_rc
      - name: manage_sequence
      - name: system_control
    env:
      - name: UE_HOST
        value: '{{unreal-engine-mcp-server.ue_host}}'
      - name: UE_RC_HTTP_PORT
        value: '{{unreal-engine-mcp-server.ue_rc_http_port}}'
      - name: UE_RC_WS_PORT
        value: '{{unreal-engine-mcp-server.ue_rc_ws_port}}'
      - name: LOG_LEVEL
        value: '{{unreal-engine-mcp-server.log_level}}'
    prompts: 0
    resources: {}
    config:
      - name: unreal-engine-mcp-server
        description: Configure the connection to Unreal Engine Remote Control API
        type: object
        properties:
          ue_host:
            type: string
            description: 'Unreal Engine host address. Use: host.docker.internal for local UE on Windows/Mac Docker, 127.0.0.1 for Linux without Docker, or actual IP address (e.g., 192.168.1.100) for remote UE'
          ue_rc_http_port:
            type: string
            description: Remote Control HTTP port
          ue_rc_ws_port:
            type: string
            description: Remote Control WebSocket port
          log_level:
            type: string
            description: Logging level
        required:
          - ue_host
          - ue_rc_http_port
          - ue_rc_ws_port
    metadata:
      pulls: 664
      stars: 2
      githubStars: 5
      category: games
      tags:
        - games
        - unreal-engine
        - game-development
        - automation
        - editor
      license: MIT License
      owner: ChiR24
  veyrax:
    description: VeyraX MCP is the only connection you need to access all your tools in any MCP-compatible environment.
    title: VeyraX
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/veyrax@sha256:257d915330722bc84dbeec0a709a2e7edf9ba83b268799d075dad5cbb53d62b7
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/veyrax.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/veyrax.json
    source: https://github.com/VeyraX/veyrax-mcp/tree/main
    upstream: https://github.com/VeyraX/veyrax-mcp
    icon: https://avatars.githubusercontent.com/u/201344226?s=200&v=4
    tools:
      - name: get_flow
      - name: get_tools
      - name: tool_call
    secrets:
      - name: veyrax.api_key
        env: VEYRAX_API_KEY
        example: your-veyrax-api-key-here
    prompts: 0
    resources: {}
    metadata:
      pulls: 2134
      stars: 4
      githubStars: 45
      category: devops
      tags:
        - veyrax
        - devops
      owner: VeyraX
  vizro:
    description: provides tools and templates to create a functioning Vizro chart or dashboard step by step.
    title: Vizro
    type: server
    dateAdded: "2025-05-29T20:04:34Z"
    image: mcp/vizro@sha256:371774d00e41084d2b9b35db8445b6f746a071b9700f93eff26b549ff09ee797
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/vizro.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/vizro.json
    source: https://github.com/mckinsey/vizro/tree/main/vizro-mcp
    upstream: https://github.com/mckinsey/vizro
    icon: https://avatars.githubusercontent.com/u/4265350?v=4
    tools:
      - name: get_model_json_schema
      - name: get_sample_data_info
      - name: get_vizro_chart_or_dashboard_plan
      - name: load_and_analyze_data
      - name: validate_chart_code
      - name: validate_dashboard_config
    prompts: 0
    resources: {}
    metadata:
      pulls: 2930
      stars: 1
      githubStars: 3381
      category: data-visualization
      tags:
        - dashboard
        - data-visualization
        - plotly
        - plotly-dash
        - pydantic
        - python
        - visualization
      license: Apache License 2.0
      owner: mckinsey
  vuln-nist-mcp-server:
    description: This MCP server exposes tools to query the NVD/CVE REST API and return formatted text results suitable for LLM consumption via the MCP protocol. It includes automatic query chunking for large date ranges and parallel processing for improved performance.
    title: Vuln nist mcp server
    type: server
    dateAdded: "2025-09-15T16:12:49Z"
    image: mcp/vuln-nist-mcp-server@sha256:e5025e66c0d28a4fb4b00f4762b91309f2538ab5ade9a9d2ea10cfacf5c04645
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/vuln-nist-mcp-server.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/vuln-nist-mcp-server.json
    source: https://github.com/HaroldFinchIFT/vuln-nist-mcp-server/tree/main
    upstream: https://github.com/HaroldFinchIFT/vuln-nist-mcp-server
    icon: https://raw.githubusercontent.com/HaroldFinchIFT/vuln-nist-mcp-server/refs/heads/main/nvd_logo.png
    tools:
      - name: cve_change_history
      - name: cves_by_cpe
      - name: get_cve_by_id
      - name: get_temporal_context
      - name: kevs_between
      - name: search_cves
    prompts: 0
    resources: {}
    metadata:
      pulls: 362
      githubStars: 4
      category: search
      tags:
        - search
        - cybersecurity
        - vulns
        - cves
      license: MIT License
      owner: HaroldFinchIFT
  wayfound:
    description: Wayfound’s MCP server allows business users to govern, supervise, and improve AI Agents.
    title: Wayfound MCP
    type: remote
    dateAdded: "2025-09-02T20:44:02Z"
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/wayfound.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/wayfound.json
    source: ""
    remote:
      transport_type: sse
      url: https://app.wayfound.ai/sse
      headers:
        Authorization: "Bearer ${MCP_API_KEY}"
    icon: https://cdn.prod.website-files.com/682a0b46722bcd80642ab415/6838cf7b36751e0ad527d851_favicon.png
    tools:
      - name: list_agents
      - name: get_agent_details
      - name: get_manager_analysis_for_agent
      - name: get_improvement_suggestions_for_agents
    secrets:
      - name: wayfound.mcp_api_key
        env: MCP_API_KEY
        example: <MCP_API_KEY>
    prompts: 0
    resources: {}
    metadata:
      category: ai
      tags:
        - ai
      license: Apache License 2.0
      owner: docker
  webflow:
    description: Model Context Protocol (MCP) server for the Webflow Data API.
    title: Webflow
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/webflow@sha256:20e73bbc57ed58fa4396eefb0e0ee7f2a60c4121521765ffb40d70da60850f13
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/webflow.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/webflow.json
    source: https://github.com/slimslenderslacks/mcp-server/tree/slim/docker
    upstream: https://github.com/webflow/mcp-server
    icon: https://avatars.githubusercontent.com/u/1229663?s=200&v=4
    tools:
      - name: collection_fields_create_option
      - name: collection_fields_create_reference
      - name: collection_fields_create_static
      - name: collection_fields_update
      - name: collections_create
      - name: collections_get
      - name: collections_items_create_item
      - name: collections_items_create_item_live
      - name: collections_items_list_items
      - name: collections_items_publish_items
      - name: collections_items_update_items
      - name: collections_items_update_items_live
      - name: collections_list
      - name: pages_get_content
      - name: pages_get_metadata
      - name: pages_list
      - name: pages_update_page_settings
      - name: pages_update_static_content
      - name: sites_get
      - name: sites_list
      - name: sites_publish
    secrets:
      - name: webflow.token
        env: WEBFLOW_TOKEN
        example: your_api_token
    prompts: 0
    resources: {}
    metadata:
      pulls: 2108
      githubStars: 84
      category: devops
      tags:
        - webflow
        - devops
      license: MIT License
      owner: webflow
  wikipedia-mcp:
    description: A Model Context Protocol (MCP) server that retrieves information from Wikipedia to provide context to LLMs.
    title: Wikipedia
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/wikipedia-mcp@sha256:c4f11de51360488e6c50ffa55c6701a8bd2b43a749734fcbd37fd262a27fe89b
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/wikipedia-mcp.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/wikipedia-mcp.json
    source: https://github.com/Rudra-ravi/wikipedia-mcp/tree/main
    upstream: https://github.com/Rudra-ravi/wikipedia-mcp
    icon: https://avatars.githubusercontent.com/u/56668?s=200&v=4
    tools:
      - name: extract_key_facts
      - name: get_article
      - name: get_coordinates
      - name: get_links
      - name: get_related_topics
      - name: get_sections
      - name: get_summary
      - name: search_wikipedia
      - name: summarize_article_for_query
      - name: summarize_article_section
      - name: test_wikipedia_connectivity
    prompts: 0
    resources: {}
    metadata:
      pulls: 46376
      stars: 7
      githubStars: 112
      category: devops
      tags:
        - wikipedia-mcp
        - devops
      license: MIT License
      owner: Rudra-ravi
  wolfram-alpha:
    description: Connect your chat repl to wolfram alpha computational intelligence.
    title: WolframAlpha
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/wolfram-alpha@sha256:4cd89d002d55d3f6f1115745b7d05a9d3e6fbb28e1e57536406b79805208571a
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/wolfram-alpha.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/wolfram-alpha.json
    source: https://github.com/SecretiveShell/MCP-wolfram-alpha/tree/master
    upstream: https://github.com/SecretiveShell/MCP-wolfram-alpha
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/wolfram.svg
    tools:
      - name: query-wolfram-alpha
    secrets:
      - name: wolfram-alpha.api_key
        env: WOLFRAM_API_KEY
        example: your-app-id
    prompts: 0
    resources: {}
    metadata:
      pulls: 3453
      stars: 6
      githubStars: 62
      category: devops
      tags:
        - wolfram-alpha
        - devops
      license: MIT License
      owner: SecretiveShell
  youtube_transcript:
    description: Retrieves transcripts for given YouTube video URLs.
    title: YouTube transcripts
    type: server
    dateAdded: "2025-05-05T20:08:35Z"
    image: mcp/youtube-transcript@sha256:5affa31687250b6e67a70537145323c9b139278fdbdca71ca33a2cb72ce815cd
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/youtube_transcript.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/youtube_transcript.json
    source: https://github.com/jkawamoto/mcp-youtube-transcript/tree/main
    upstream: https://github.com/jkawamoto/mcp-youtube-transcript
    icon: https://avatars.githubusercontent.com/u/4052902?s=200&v=4
    tools:
      - name: get_transcript
      - name: get_video_info
    prompts: 0
    resources: {}
    metadata:
      pulls: 61058
      stars: 15
      githubStars: 84
      category: search
      tags:
        - youtube
        - search
      license: MIT License
      owner: jkawamoto
  zerodha-kite:
    description: MCP server for Zerodha Kite Connect API - India's leading stock broker trading platform. Execute trades, manage portfolios, and access real-time market data for NSE, BSE, and other Indian exchanges.
    title: Zerodha Kite Connect
    type: server
    dateAdded: "2025-09-19T06:18:27Z"
    image: mcp/zerodha-kite@sha256:0668667c6890544ed1b60ef8348b4de3882f8fb16dae61b50bc922427ebab96c
    ref: ""
    readme: http://desktop.docker.com/mcp/catalog/v2/readme/zerodha-kite.md
    toolsUrl: http://desktop.docker.com/mcp/catalog/v2/tools/zerodha-kite.json
    source: https://github.com/anshuljain90/zerodha-kite-mcp/tree/main
    upstream: https://github.com/anshuljain90/zerodha-kite-mcp
    icon: https://avatars.githubusercontent.com/u/34680622?s=300&v=4
    tools:
      - name: place_order
      - name: modify_order
      - name: cancel_order
      - name: get_positions
      - name: get_holdings
      - name: get_margins
      - name: get_quote
      - name: get_historical_data
      - name: get_instruments
      - name: get_orders
      - name: get_trades
      - name: get_order_history
      - name: get_profile
      - name: get_ltp
      - name: get_market_status
    secrets:
      - name: zerodha-kite.api_secret
        env: KITE_API_SECRET
        example: your_api_secret_here
    env:
      - name: KITE_API_KEY
        value: '{{zerodha-kite.kite_api_key}}'
      - name: KITE_ACCESS_TOKEN
        value: '{{zerodha-kite.kite_access_token}}'
      - name: KITE_REDIRECT_URL
        value: '{{zerodha-kite.kite_redirect_url}}'
    prompts: 0
    resources: {}
    config:
      - name: zerodha-kite
        description: Configure your Zerodha Kite Connect API credentials. Requires an active Zerodha trading account and Kite Connect developer app.
        type: object
        properties:
          kite_api_key:
            type: string
            description: Your Kite Connect API key from the developer console
          kite_access_token:
            type: string
            description: Access token obtained after OAuth authentication (optional - can be generated at runtime)
          kite_redirect_url:
            type: string
            description: OAuth redirect URL configured in your Kite Connect app
        required:
          - kite_api_key
    metadata:
      pulls: 173
      category: finance
      tags:
        - finance
        - trading
        - stocks
        - india
      license: MIT License
      owner: anshuljain90
